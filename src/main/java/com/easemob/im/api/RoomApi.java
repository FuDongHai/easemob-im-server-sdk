/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;
import com.easemob.im.ProgressRequestBody;
import com.easemob.im.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.easemob.im.api.model.EMAddMultipleUserToRoom;
import com.easemob.im.api.model.EMAddMultipleUserToRoomBlockList;
import com.easemob.im.api.model.EMAddMultipleUserToRoomBlockListResult;
import com.easemob.im.api.model.EMAddMultipleUserToRoomWhiteList;
import com.easemob.im.api.model.EMAddMultipleUserToRoomWhiteListResult;
import com.easemob.im.api.model.EMAddRoomAdmin;
import com.easemob.im.api.model.EMAddRoomAdminResult;
import com.easemob.im.api.model.EMAddRoomSuperAdmin;
import com.easemob.im.api.model.EMAddRoomSuperAdminResult;
import com.easemob.im.api.model.EMAddUserToRoomBlockListResult;
import com.easemob.im.api.model.EMAddUserToRoomResult;
import com.easemob.im.api.model.EMAddUserToRoomWhiteListResult;
import com.easemob.im.api.model.EMCreateRoom;
import com.easemob.im.api.model.EMCreateRoomResult;
import com.easemob.im.api.model.EMDeleteRoomCustomAttributes;
import com.easemob.im.api.model.EMDeleteRoomCustomAttributesResult;
import com.easemob.im.api.model.EMDeleteRoomResult;
import com.easemob.im.api.model.EMForceDeleteRoomCustomAttributes;
import com.easemob.im.api.model.EMForceDeleteRoomCustomAttributesResult;
import com.easemob.im.api.model.EMForceSetRoomCustomAttributes;
import com.easemob.im.api.model.EMForceSetRoomCustomAttributesResult;
import com.easemob.im.api.model.EMGetMuteRoomMemberListResult;
import com.easemob.im.api.model.EMGetRoomAdminListResult;
import com.easemob.im.api.model.EMGetRoomAnnouncementResult;
import com.easemob.im.api.model.EMGetRoomBlockListResult;
import com.easemob.im.api.model.EMGetRoomCustomAttributes;
import com.easemob.im.api.model.EMGetRoomCustomAttributesResult;
import com.easemob.im.api.model.EMGetRoomInfoResult;
import com.easemob.im.api.model.EMGetRoomListResult;
import com.easemob.im.api.model.EMGetRoomMemberListResult;
import com.easemob.im.api.model.EMGetRoomSuperAdminListResult;
import com.easemob.im.api.model.EMGetRoomWhiteListResult;
import com.easemob.im.api.model.EMGetUserJoinedRoomListResult;
import com.easemob.im.api.model.EMModifyRoom;
import com.easemob.im.api.model.EMModifyRoomAnnouncement;
import com.easemob.im.api.model.EMModifyRoomAnnouncementResult;
import com.easemob.im.api.model.EMModifyRoomResult;
import com.easemob.im.api.model.EMMuteAllRoomMemberResult;
import com.easemob.im.api.model.EMMuteRoomMember;
import com.easemob.im.api.model.EMMuteRoomMemberResult;
import com.easemob.im.api.model.EMRemoveRoomAdminResult;
import com.easemob.im.api.model.EMRemoveRoomSuperAdminResult;
import com.easemob.im.api.model.EMRemoveUserFromRoomBlockListResult;
import com.easemob.im.api.model.EMRemoveUserFromRoomResult;
import com.easemob.im.api.model.EMRemoveUserFromRoomWhiteListResult;
import com.easemob.im.api.model.EMSetRoomCustomAttributes;
import com.easemob.im.api.model.EMSetRoomCustomAttributesResult;
import com.easemob.im.api.model.EMUnmuteAllRoomMemberResult;
import com.easemob.im.api.model.EMUnmuteRoomMemberResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RoomApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public RoomApi() {
        this(Configuration.getDefaultApiClient());
    }

    public RoomApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addMultipleUserToRoom
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoom  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToRoomCall(String chatroomId, EMAddMultipleUserToRoom emAddMultipleUserToRoom, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUserToRoom;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/users"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUserToRoomValidateBeforeCall(String chatroomId, EMAddMultipleUserToRoom emAddMultipleUserToRoom, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addMultipleUserToRoom(Async)");
        }

        return addMultipleUserToRoomCall(chatroomId, emAddMultipleUserToRoom, _callback);

    }

    /**
     * 批量添加聊天室成员
     * 向聊天室添加多位用户，一次性最多可添加 60 位用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoom  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public void addMultipleUserToRoom(String chatroomId, EMAddMultipleUserToRoom emAddMultipleUserToRoom) throws ApiException {
        addMultipleUserToRoomWithHttpInfo(chatroomId, emAddMultipleUserToRoom);
    }

    /**
     * 批量添加聊天室成员
     * 向聊天室添加多位用户，一次性最多可添加 60 位用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoom  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> addMultipleUserToRoomWithHttpInfo(String chatroomId, EMAddMultipleUserToRoom emAddMultipleUserToRoom) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUserToRoomValidateBeforeCall(chatroomId, emAddMultipleUserToRoom, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * 批量添加聊天室成员 (asynchronously)
     * 向聊天室添加多位用户，一次性最多可添加 60 位用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoom  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToRoomAsync(String chatroomId, EMAddMultipleUserToRoom emAddMultipleUserToRoom, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUserToRoomValidateBeforeCall(chatroomId, emAddMultipleUserToRoom, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for addMultipleUserToRoomBlockList
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomBlockList  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToRoomBlockListCall(String chatroomId, EMAddMultipleUserToRoomBlockList emAddMultipleUserToRoomBlockList, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUserToRoomBlockList;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/blocks/users"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUserToRoomBlockListValidateBeforeCall(String chatroomId, EMAddMultipleUserToRoomBlockList emAddMultipleUserToRoomBlockList, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addMultipleUserToRoomBlockList(Async)");
        }

        return addMultipleUserToRoomBlockListCall(chatroomId, emAddMultipleUserToRoomBlockList, _callback);

    }

    /**
     * 批量添加用户至聊天室黑名单
     * 将多个用户加入指定聊天室的黑名单。你一次最多可以添加 60 个用户至聊天室黑名单。聊天室所有者无法被加入聊天室的黑名单。用户进入聊天室黑名单后，无法查看和收发该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomBlockList  (optional)
     * @return EMAddMultipleUserToRoomBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddMultipleUserToRoomBlockListResult addMultipleUserToRoomBlockList(String chatroomId, EMAddMultipleUserToRoomBlockList emAddMultipleUserToRoomBlockList) throws ApiException {
        ApiResponse<EMAddMultipleUserToRoomBlockListResult> localVarResp = addMultipleUserToRoomBlockListWithHttpInfo(chatroomId, emAddMultipleUserToRoomBlockList);
        return localVarResp.getData();
    }

    /**
     * 批量添加用户至聊天室黑名单
     * 将多个用户加入指定聊天室的黑名单。你一次最多可以添加 60 个用户至聊天室黑名单。聊天室所有者无法被加入聊天室的黑名单。用户进入聊天室黑名单后，无法查看和收发该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomBlockList  (optional)
     * @return ApiResponse&lt;EMAddMultipleUserToRoomBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddMultipleUserToRoomBlockListResult> addMultipleUserToRoomBlockListWithHttpInfo(String chatroomId, EMAddMultipleUserToRoomBlockList emAddMultipleUserToRoomBlockList) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUserToRoomBlockListValidateBeforeCall(chatroomId, emAddMultipleUserToRoomBlockList, null);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToRoomBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量添加用户至聊天室黑名单 (asynchronously)
     * 将多个用户加入指定聊天室的黑名单。你一次最多可以添加 60 个用户至聊天室黑名单。聊天室所有者无法被加入聊天室的黑名单。用户进入聊天室黑名单后，无法查看和收发该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomBlockList  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToRoomBlockListAsync(String chatroomId, EMAddMultipleUserToRoomBlockList emAddMultipleUserToRoomBlockList, final ApiCallback<EMAddMultipleUserToRoomBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUserToRoomBlockListValidateBeforeCall(chatroomId, emAddMultipleUserToRoomBlockList, _callback);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToRoomBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addMultipleUserToRoomWhiteList
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomWhiteList  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToRoomWhiteListCall(String chatroomId, EMAddMultipleUserToRoomWhiteList emAddMultipleUserToRoomWhiteList, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUserToRoomWhiteList;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/white/users"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUserToRoomWhiteListValidateBeforeCall(String chatroomId, EMAddMultipleUserToRoomWhiteList emAddMultipleUserToRoomWhiteList, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addMultipleUserToRoomWhiteList(Async)");
        }

        return addMultipleUserToRoomWhiteListCall(chatroomId, emAddMultipleUserToRoomWhiteList, _callback);

    }

    /**
     * 批量添加用户至聊天室白名单
     * 添加多个用户至聊天室白名单。你一次最多可添加 60 个用户。用户添加至聊天室白名单后，在聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomWhiteList  (optional)
     * @return EMAddMultipleUserToRoomWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddMultipleUserToRoomWhiteListResult addMultipleUserToRoomWhiteList(String chatroomId, EMAddMultipleUserToRoomWhiteList emAddMultipleUserToRoomWhiteList) throws ApiException {
        ApiResponse<EMAddMultipleUserToRoomWhiteListResult> localVarResp = addMultipleUserToRoomWhiteListWithHttpInfo(chatroomId, emAddMultipleUserToRoomWhiteList);
        return localVarResp.getData();
    }

    /**
     * 批量添加用户至聊天室白名单
     * 添加多个用户至聊天室白名单。你一次最多可添加 60 个用户。用户添加至聊天室白名单后，在聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomWhiteList  (optional)
     * @return ApiResponse&lt;EMAddMultipleUserToRoomWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddMultipleUserToRoomWhiteListResult> addMultipleUserToRoomWhiteListWithHttpInfo(String chatroomId, EMAddMultipleUserToRoomWhiteList emAddMultipleUserToRoomWhiteList) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUserToRoomWhiteListValidateBeforeCall(chatroomId, emAddMultipleUserToRoomWhiteList, null);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToRoomWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量添加用户至聊天室白名单 (asynchronously)
     * 添加多个用户至聊天室白名单。你一次最多可添加 60 个用户。用户添加至聊天室白名单后，在聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param emAddMultipleUserToRoomWhiteList  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToRoomWhiteListAsync(String chatroomId, EMAddMultipleUserToRoomWhiteList emAddMultipleUserToRoomWhiteList, final ApiCallback<EMAddMultipleUserToRoomWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUserToRoomWhiteListValidateBeforeCall(chatroomId, emAddMultipleUserToRoomWhiteList, _callback);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToRoomWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addRoomAdmin
     * @param chatroomId  (required)
     * @param emAddRoomAdmin  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addRoomAdminCall(String chatroomId, EMAddRoomAdmin emAddRoomAdmin, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddRoomAdmin;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/admin"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addRoomAdminValidateBeforeCall(String chatroomId, EMAddRoomAdmin emAddRoomAdmin, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addRoomAdmin(Async)");
        }

        return addRoomAdminCall(chatroomId, emAddRoomAdmin, _callback);

    }

    /**
     * 添加聊天室管理员
     * 将一个聊天室成员设置为聊天室管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param chatroomId  (required)
     * @param emAddRoomAdmin  (optional)
     * @return EMAddRoomAdminResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddRoomAdminResult addRoomAdmin(String chatroomId, EMAddRoomAdmin emAddRoomAdmin) throws ApiException {
        ApiResponse<EMAddRoomAdminResult> localVarResp = addRoomAdminWithHttpInfo(chatroomId, emAddRoomAdmin);
        return localVarResp.getData();
    }

    /**
     * 添加聊天室管理员
     * 将一个聊天室成员设置为聊天室管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param chatroomId  (required)
     * @param emAddRoomAdmin  (optional)
     * @return ApiResponse&lt;EMAddRoomAdminResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddRoomAdminResult> addRoomAdminWithHttpInfo(String chatroomId, EMAddRoomAdmin emAddRoomAdmin) throws ApiException {
        okhttp3.Call localVarCall = addRoomAdminValidateBeforeCall(chatroomId, emAddRoomAdmin, null);
        Type localVarReturnType = new TypeToken<EMAddRoomAdminResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加聊天室管理员 (asynchronously)
     * 将一个聊天室成员设置为聊天室管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param chatroomId  (required)
     * @param emAddRoomAdmin  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addRoomAdminAsync(String chatroomId, EMAddRoomAdmin emAddRoomAdmin, final ApiCallback<EMAddRoomAdminResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addRoomAdminValidateBeforeCall(chatroomId, emAddRoomAdmin, _callback);
        Type localVarReturnType = new TypeToken<EMAddRoomAdminResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addRoomSuperAdmin
     * @param emAddRoomSuperAdmin  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addRoomSuperAdminCall(EMAddRoomSuperAdmin emAddRoomSuperAdmin, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddRoomSuperAdmin;

        // create path and map variables
        String localVarPath = "/chatrooms/super_admin";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addRoomSuperAdminValidateBeforeCall(EMAddRoomSuperAdmin emAddRoomSuperAdmin, final ApiCallback _callback) throws ApiException {
        return addRoomSuperAdminCall(emAddRoomSuperAdmin, _callback);

    }

    /**
     * 添加超级管理员
     * 添加一个聊天室超级管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     * @param emAddRoomSuperAdmin  (optional)
     * @return EMAddRoomSuperAdminResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddRoomSuperAdminResult addRoomSuperAdmin(EMAddRoomSuperAdmin emAddRoomSuperAdmin) throws ApiException {
        ApiResponse<EMAddRoomSuperAdminResult> localVarResp = addRoomSuperAdminWithHttpInfo(emAddRoomSuperAdmin);
        return localVarResp.getData();
    }

    /**
     * 添加超级管理员
     * 添加一个聊天室超级管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     * @param emAddRoomSuperAdmin  (optional)
     * @return ApiResponse&lt;EMAddRoomSuperAdminResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddRoomSuperAdminResult> addRoomSuperAdminWithHttpInfo(EMAddRoomSuperAdmin emAddRoomSuperAdmin) throws ApiException {
        okhttp3.Call localVarCall = addRoomSuperAdminValidateBeforeCall(emAddRoomSuperAdmin, null);
        Type localVarReturnType = new TypeToken<EMAddRoomSuperAdminResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加超级管理员 (asynchronously)
     * 添加一个聊天室超级管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     * @param emAddRoomSuperAdmin  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addRoomSuperAdminAsync(EMAddRoomSuperAdmin emAddRoomSuperAdmin, final ApiCallback<EMAddRoomSuperAdminResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addRoomSuperAdminValidateBeforeCall(emAddRoomSuperAdmin, _callback);
        Type localVarReturnType = new TypeToken<EMAddRoomSuperAdminResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addUserToRoom
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToRoomCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/users/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToRoomValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addUserToRoom(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling addUserToRoom(Async)");
        }

        return addUserToRoomCall(chatroomId, username, _callback);

    }

    /**
     * 添加单个聊天室成员
     * 向聊天室添加一个成员。如果待添加的用户在 app 中不存在或已经在聊天室中，则请求失败并返回错误码 400。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMAddUserToRoomResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToRoomResult addUserToRoom(String chatroomId, String username) throws ApiException {
        ApiResponse<EMAddUserToRoomResult> localVarResp = addUserToRoomWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 添加单个聊天室成员
     * 向聊天室添加一个成员。如果待添加的用户在 app 中不存在或已经在聊天室中，则请求失败并返回错误码 400。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMAddUserToRoomResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToRoomResult> addUserToRoomWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = addUserToRoomValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMAddUserToRoomResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加单个聊天室成员 (asynchronously)
     * 向聊天室添加一个成员。如果待添加的用户在 app 中不存在或已经在聊天室中，则请求失败并返回错误码 400。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToRoomAsync(String chatroomId, String username, final ApiCallback<EMAddUserToRoomResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToRoomValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToRoomResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addUserToRoomBlockList
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToRoomBlockListCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/blocks/users/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToRoomBlockListValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addUserToRoomBlockList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling addUserToRoomBlockList(Async)");
        }

        return addUserToRoomBlockListCall(chatroomId, username, _callback);

    }

    /**
     * 添加单个用户至聊天室黑名单
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMAddUserToRoomBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToRoomBlockListResult addUserToRoomBlockList(String chatroomId, String username) throws ApiException {
        ApiResponse<EMAddUserToRoomBlockListResult> localVarResp = addUserToRoomBlockListWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 添加单个用户至聊天室黑名单
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMAddUserToRoomBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToRoomBlockListResult> addUserToRoomBlockListWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = addUserToRoomBlockListValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMAddUserToRoomBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加单个用户至聊天室黑名单 (asynchronously)
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToRoomBlockListAsync(String chatroomId, String username, final ApiCallback<EMAddUserToRoomBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToRoomBlockListValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToRoomBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addUserToRoomWhiteList
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToRoomWhiteListCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/white/users/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToRoomWhiteListValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling addUserToRoomWhiteList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling addUserToRoomWhiteList(Async)");
        }

        return addUserToRoomWhiteListCall(chatroomId, username, _callback);

    }

    /**
     * 添加单个用户至聊天室白名单
     * 将单个用户添加至聊天室白名单。用户添加至聊天室白名单后，当聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMAddUserToRoomWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToRoomWhiteListResult addUserToRoomWhiteList(String chatroomId, String username) throws ApiException {
        ApiResponse<EMAddUserToRoomWhiteListResult> localVarResp = addUserToRoomWhiteListWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 添加单个用户至聊天室白名单
     * 将单个用户添加至聊天室白名单。用户添加至聊天室白名单后，当聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMAddUserToRoomWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToRoomWhiteListResult> addUserToRoomWhiteListWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = addUserToRoomWhiteListValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMAddUserToRoomWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加单个用户至聊天室白名单 (asynchronously)
     * 将单个用户添加至聊天室白名单。用户添加至聊天室白名单后，当聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToRoomWhiteListAsync(String chatroomId, String username, final ApiCallback<EMAddUserToRoomWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToRoomWhiteListValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToRoomWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createRoom
     * @param emCreateRoom  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createRoomCall(EMCreateRoom emCreateRoom, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCreateRoom;

        // create path and map variables
        String localVarPath = "/chatrooms";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createRoomValidateBeforeCall(EMCreateRoom emCreateRoom, final ApiCallback _callback) throws ApiException {
        return createRoomCall(emCreateRoom, _callback);

    }

    /**
     * 创建聊天室
     * 创建一个聊天室，需设置聊天室名称、聊天室描述、聊天室成员最大人数（包括管理员）、聊天室管理员和普通成员以及聊天室扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%9B%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param emCreateRoom  (optional)
     * @return EMCreateRoomResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMCreateRoomResult createRoom(EMCreateRoom emCreateRoom) throws ApiException {
        ApiResponse<EMCreateRoomResult> localVarResp = createRoomWithHttpInfo(emCreateRoom);
        return localVarResp.getData();
    }

    /**
     * 创建聊天室
     * 创建一个聊天室，需设置聊天室名称、聊天室描述、聊天室成员最大人数（包括管理员）、聊天室管理员和普通成员以及聊天室扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%9B%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param emCreateRoom  (optional)
     * @return ApiResponse&lt;EMCreateRoomResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMCreateRoomResult> createRoomWithHttpInfo(EMCreateRoom emCreateRoom) throws ApiException {
        okhttp3.Call localVarCall = createRoomValidateBeforeCall(emCreateRoom, null);
        Type localVarReturnType = new TypeToken<EMCreateRoomResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 创建聊天室 (asynchronously)
     * 创建一个聊天室，需设置聊天室名称、聊天室描述、聊天室成员最大人数（包括管理员）、聊天室管理员和普通成员以及聊天室扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%9B%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param emCreateRoom  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createRoomAsync(EMCreateRoom emCreateRoom, final ApiCallback<EMCreateRoomResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = createRoomValidateBeforeCall(emCreateRoom, _callback);
        Type localVarReturnType = new TypeToken<EMCreateRoomResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteRoom
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteRoomCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteRoomValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling deleteRoom(Async)");
        }

        return deleteRoomCall(chatroomId, _callback);

    }

    /**
     * 删除聊天室
     * 删除单个聊天室。如果要删除的聊天室不存在，会返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param chatroomId  (required)
     * @return EMDeleteRoomResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDeleteRoomResult deleteRoom(String chatroomId) throws ApiException {
        ApiResponse<EMDeleteRoomResult> localVarResp = deleteRoomWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 删除聊天室
     * 删除单个聊天室。如果要删除的聊天室不存在，会返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMDeleteRoomResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDeleteRoomResult> deleteRoomWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = deleteRoomValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMDeleteRoomResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除聊天室 (asynchronously)
     * 删除单个聊天室。如果要删除的聊天室不存在，会返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteRoomAsync(String chatroomId, final ApiCallback<EMDeleteRoomResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteRoomValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteRoomResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteRoomCustomAttributes
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emDeleteRoomCustomAttributes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteRoomCustomAttributesCall(String chatroomId, String username, EMDeleteRoomCustomAttributes emDeleteRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emDeleteRoomCustomAttributes;

        // create path and map variables
        String localVarPath = "/metadata/chatroom/{chatroom_id}/user/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteRoomCustomAttributesValidateBeforeCall(String chatroomId, String username, EMDeleteRoomCustomAttributes emDeleteRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling deleteRoomCustomAttributes(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling deleteRoomCustomAttributes(Async)");
        }

        return deleteRoomCustomAttributesCall(chatroomId, username, emDeleteRoomCustomAttributes, _callback);

    }

    /**
     * 删除聊天室自定义属性
     * 用户删除其设置的聊天室自定义属性。该方法只能删除当前用户设置的聊天室自定义属性，不能删除其他成员设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emDeleteRoomCustomAttributes  (optional)
     * @return EMDeleteRoomCustomAttributesResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDeleteRoomCustomAttributesResult deleteRoomCustomAttributes(String chatroomId, String username, EMDeleteRoomCustomAttributes emDeleteRoomCustomAttributes) throws ApiException {
        ApiResponse<EMDeleteRoomCustomAttributesResult> localVarResp = deleteRoomCustomAttributesWithHttpInfo(chatroomId, username, emDeleteRoomCustomAttributes);
        return localVarResp.getData();
    }

    /**
     * 删除聊天室自定义属性
     * 用户删除其设置的聊天室自定义属性。该方法只能删除当前用户设置的聊天室自定义属性，不能删除其他成员设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emDeleteRoomCustomAttributes  (optional)
     * @return ApiResponse&lt;EMDeleteRoomCustomAttributesResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDeleteRoomCustomAttributesResult> deleteRoomCustomAttributesWithHttpInfo(String chatroomId, String username, EMDeleteRoomCustomAttributes emDeleteRoomCustomAttributes) throws ApiException {
        okhttp3.Call localVarCall = deleteRoomCustomAttributesValidateBeforeCall(chatroomId, username, emDeleteRoomCustomAttributes, null);
        Type localVarReturnType = new TypeToken<EMDeleteRoomCustomAttributesResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除聊天室自定义属性 (asynchronously)
     * 用户删除其设置的聊天室自定义属性。该方法只能删除当前用户设置的聊天室自定义属性，不能删除其他成员设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emDeleteRoomCustomAttributes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteRoomCustomAttributesAsync(String chatroomId, String username, EMDeleteRoomCustomAttributes emDeleteRoomCustomAttributes, final ApiCallback<EMDeleteRoomCustomAttributesResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteRoomCustomAttributesValidateBeforeCall(chatroomId, username, emDeleteRoomCustomAttributes, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteRoomCustomAttributesResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forceDeleteRoomCustomAttributes
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceDeleteRoomCustomAttributes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call forceDeleteRoomCustomAttributesCall(String chatroomId, String username, EMForceDeleteRoomCustomAttributes emForceDeleteRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emForceDeleteRoomCustomAttributes;

        // create path and map variables
        String localVarPath = "/metadata/chatroom/{chatroom_id}/user/{username}/forced"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forceDeleteRoomCustomAttributesValidateBeforeCall(String chatroomId, String username, EMForceDeleteRoomCustomAttributes emForceDeleteRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling forceDeleteRoomCustomAttributes(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling forceDeleteRoomCustomAttributes(Async)");
        }

        return forceDeleteRoomCustomAttributesCall(chatroomId, username, emForceDeleteRoomCustomAttributes, _callback);

    }

    /**
     * 强制删除聊天室自定义属性
     * 用户强制删除聊天室的自定义属性信息，即该方法除了会删除当前用户设置的聊天室自定义属性，还可以删除其他用户设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceDeleteRoomCustomAttributes  (optional)
     * @return EMForceDeleteRoomCustomAttributesResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMForceDeleteRoomCustomAttributesResult forceDeleteRoomCustomAttributes(String chatroomId, String username, EMForceDeleteRoomCustomAttributes emForceDeleteRoomCustomAttributes) throws ApiException {
        ApiResponse<EMForceDeleteRoomCustomAttributesResult> localVarResp = forceDeleteRoomCustomAttributesWithHttpInfo(chatroomId, username, emForceDeleteRoomCustomAttributes);
        return localVarResp.getData();
    }

    /**
     * 强制删除聊天室自定义属性
     * 用户强制删除聊天室的自定义属性信息，即该方法除了会删除当前用户设置的聊天室自定义属性，还可以删除其他用户设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceDeleteRoomCustomAttributes  (optional)
     * @return ApiResponse&lt;EMForceDeleteRoomCustomAttributesResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMForceDeleteRoomCustomAttributesResult> forceDeleteRoomCustomAttributesWithHttpInfo(String chatroomId, String username, EMForceDeleteRoomCustomAttributes emForceDeleteRoomCustomAttributes) throws ApiException {
        okhttp3.Call localVarCall = forceDeleteRoomCustomAttributesValidateBeforeCall(chatroomId, username, emForceDeleteRoomCustomAttributes, null);
        Type localVarReturnType = new TypeToken<EMForceDeleteRoomCustomAttributesResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 强制删除聊天室自定义属性 (asynchronously)
     * 用户强制删除聊天室的自定义属性信息，即该方法除了会删除当前用户设置的聊天室自定义属性，还可以删除其他用户设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceDeleteRoomCustomAttributes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call forceDeleteRoomCustomAttributesAsync(String chatroomId, String username, EMForceDeleteRoomCustomAttributes emForceDeleteRoomCustomAttributes, final ApiCallback<EMForceDeleteRoomCustomAttributesResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forceDeleteRoomCustomAttributesValidateBeforeCall(chatroomId, username, emForceDeleteRoomCustomAttributes, _callback);
        Type localVarReturnType = new TypeToken<EMForceDeleteRoomCustomAttributesResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for forceSetRoomCustomAttributes
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceSetRoomCustomAttributes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call forceSetRoomCustomAttributesCall(String chatroomId, String username, EMForceSetRoomCustomAttributes emForceSetRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emForceSetRoomCustomAttributes;

        // create path and map variables
        String localVarPath = "/metadata/chatroom/{chatroom_id}/user/{username}/forced"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call forceSetRoomCustomAttributesValidateBeforeCall(String chatroomId, String username, EMForceSetRoomCustomAttributes emForceSetRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling forceSetRoomCustomAttributes(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling forceSetRoomCustomAttributes(Async)");
        }

        return forceSetRoomCustomAttributesCall(chatroomId, username, emForceSetRoomCustomAttributes, _callback);

    }

    /**
     * 强制设置聊天室自定义属性
     * 用户强制设置指定聊天室的自定义属性信息，即该方法可覆盖其他用户设置的聊天室自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceSetRoomCustomAttributes  (optional)
     * @return EMForceSetRoomCustomAttributesResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMForceSetRoomCustomAttributesResult forceSetRoomCustomAttributes(String chatroomId, String username, EMForceSetRoomCustomAttributes emForceSetRoomCustomAttributes) throws ApiException {
        ApiResponse<EMForceSetRoomCustomAttributesResult> localVarResp = forceSetRoomCustomAttributesWithHttpInfo(chatroomId, username, emForceSetRoomCustomAttributes);
        return localVarResp.getData();
    }

    /**
     * 强制设置聊天室自定义属性
     * 用户强制设置指定聊天室的自定义属性信息，即该方法可覆盖其他用户设置的聊天室自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceSetRoomCustomAttributes  (optional)
     * @return ApiResponse&lt;EMForceSetRoomCustomAttributesResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMForceSetRoomCustomAttributesResult> forceSetRoomCustomAttributesWithHttpInfo(String chatroomId, String username, EMForceSetRoomCustomAttributes emForceSetRoomCustomAttributes) throws ApiException {
        okhttp3.Call localVarCall = forceSetRoomCustomAttributesValidateBeforeCall(chatroomId, username, emForceSetRoomCustomAttributes, null);
        Type localVarReturnType = new TypeToken<EMForceSetRoomCustomAttributesResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 强制设置聊天室自定义属性 (asynchronously)
     * 用户强制设置指定聊天室的自定义属性信息，即该方法可覆盖其他用户设置的聊天室自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emForceSetRoomCustomAttributes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call forceSetRoomCustomAttributesAsync(String chatroomId, String username, EMForceSetRoomCustomAttributes emForceSetRoomCustomAttributes, final ApiCallback<EMForceSetRoomCustomAttributesResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = forceSetRoomCustomAttributesValidateBeforeCall(chatroomId, username, emForceSetRoomCustomAttributes, _callback);
        Type localVarReturnType = new TypeToken<EMForceSetRoomCustomAttributesResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getMuteRoomMemberList
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMuteRoomMemberListCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/mute"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getMuteRoomMemberListValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getMuteRoomMemberList(Async)");
        }

        return getMuteRoomMemberListCall(chatroomId, _callback);

    }

    /**
     * 获取禁言列表
     * 获取当前聊天室的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @return EMGetMuteRoomMemberListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetMuteRoomMemberListResult getMuteRoomMemberList(String chatroomId) throws ApiException {
        ApiResponse<EMGetMuteRoomMemberListResult> localVarResp = getMuteRoomMemberListWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 获取禁言列表
     * 获取当前聊天室的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMGetMuteRoomMemberListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetMuteRoomMemberListResult> getMuteRoomMemberListWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = getMuteRoomMemberListValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMGetMuteRoomMemberListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取禁言列表 (asynchronously)
     * 获取当前聊天室的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMuteRoomMemberListAsync(String chatroomId, final ApiCallback<EMGetMuteRoomMemberListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getMuteRoomMemberListValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMGetMuteRoomMemberListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomAdminList
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomAdminListCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/admin"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomAdminListValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomAdminList(Async)");
        }

        return getRoomAdminListCall(chatroomId, _callback);

    }

    /**
     * 获取聊天室管理员列表
     * 获取聊天室管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @return EMGetRoomAdminListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomAdminListResult getRoomAdminList(String chatroomId) throws ApiException {
        ApiResponse<EMGetRoomAdminListResult> localVarResp = getRoomAdminListWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 获取聊天室管理员列表
     * 获取聊天室管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMGetRoomAdminListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomAdminListResult> getRoomAdminListWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = getRoomAdminListValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMGetRoomAdminListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取聊天室管理员列表 (asynchronously)
     * 获取聊天室管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomAdminListAsync(String chatroomId, final ApiCallback<EMGetRoomAdminListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomAdminListValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomAdminListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomAnnouncement
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomAnnouncementCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/announcement"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomAnnouncementValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomAnnouncement(Async)");
        }

        return getRoomAnnouncementCall(chatroomId, _callback);

    }

    /**
     * 获取聊天室公告
     * 获取指定聊天室 ID 的聊天室公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     * @param chatroomId  (required)
     * @return EMGetRoomAnnouncementResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomAnnouncementResult getRoomAnnouncement(String chatroomId) throws ApiException {
        ApiResponse<EMGetRoomAnnouncementResult> localVarResp = getRoomAnnouncementWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 获取聊天室公告
     * 获取指定聊天室 ID 的聊天室公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMGetRoomAnnouncementResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomAnnouncementResult> getRoomAnnouncementWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = getRoomAnnouncementValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMGetRoomAnnouncementResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取聊天室公告 (asynchronously)
     * 获取指定聊天室 ID 的聊天室公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomAnnouncementAsync(String chatroomId, final ApiCallback<EMGetRoomAnnouncementResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomAnnouncementValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomAnnouncementResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomBlockList
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomBlockListCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/blocks/users"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomBlockListValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomBlockList(Async)");
        }

        return getRoomBlockListCall(chatroomId, _callback);

    }

    /**
     * 查询聊天室黑名单
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @return EMGetRoomBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomBlockListResult getRoomBlockList(String chatroomId) throws ApiException {
        ApiResponse<EMGetRoomBlockListResult> localVarResp = getRoomBlockListWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 查询聊天室黑名单
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMGetRoomBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomBlockListResult> getRoomBlockListWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = getRoomBlockListValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMGetRoomBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 查询聊天室黑名单 (asynchronously)
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomBlockListAsync(String chatroomId, final ApiCallback<EMGetRoomBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomBlockListValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomCustomAttributes
     * @param chatroomId  (required)
     * @param emGetRoomCustomAttributes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomCustomAttributesCall(String chatroomId, EMGetRoomCustomAttributes emGetRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emGetRoomCustomAttributes;

        // create path and map variables
        String localVarPath = "/metadata/chatroom/{chatroom_id}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomCustomAttributesValidateBeforeCall(String chatroomId, EMGetRoomCustomAttributes emGetRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomCustomAttributes(Async)");
        }

        return getRoomCustomAttributesCall(chatroomId, emGetRoomCustomAttributes, _callback);

    }

    /**
     * 获取聊天室自定义属性
     * 获取指定聊天室的自定义属性信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param emGetRoomCustomAttributes  (optional)
     * @return EMGetRoomCustomAttributesResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomCustomAttributesResult getRoomCustomAttributes(String chatroomId, EMGetRoomCustomAttributes emGetRoomCustomAttributes) throws ApiException {
        ApiResponse<EMGetRoomCustomAttributesResult> localVarResp = getRoomCustomAttributesWithHttpInfo(chatroomId, emGetRoomCustomAttributes);
        return localVarResp.getData();
    }

    /**
     * 获取聊天室自定义属性
     * 获取指定聊天室的自定义属性信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param emGetRoomCustomAttributes  (optional)
     * @return ApiResponse&lt;EMGetRoomCustomAttributesResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomCustomAttributesResult> getRoomCustomAttributesWithHttpInfo(String chatroomId, EMGetRoomCustomAttributes emGetRoomCustomAttributes) throws ApiException {
        okhttp3.Call localVarCall = getRoomCustomAttributesValidateBeforeCall(chatroomId, emGetRoomCustomAttributes, null);
        Type localVarReturnType = new TypeToken<EMGetRoomCustomAttributesResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取聊天室自定义属性 (asynchronously)
     * 获取指定聊天室的自定义属性信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param emGetRoomCustomAttributes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomCustomAttributesAsync(String chatroomId, EMGetRoomCustomAttributes emGetRoomCustomAttributes, final ApiCallback<EMGetRoomCustomAttributesResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomCustomAttributesValidateBeforeCall(chatroomId, emGetRoomCustomAttributes, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomCustomAttributesResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomInfo
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomInfoCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomInfoValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomInfo(Async)");
        }

        return getRoomInfoCall(chatroomId, _callback);

    }

    /**
     * 查询聊天室详情
     * 查询一个聊天室的详情。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%AF%A6%E6%83%85
     * @param chatroomId  (required)
     * @return EMGetRoomInfoResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomInfoResult getRoomInfo(String chatroomId) throws ApiException {
        ApiResponse<EMGetRoomInfoResult> localVarResp = getRoomInfoWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 查询聊天室详情
     * 查询一个聊天室的详情。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%AF%A6%E6%83%85
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMGetRoomInfoResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomInfoResult> getRoomInfoWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = getRoomInfoValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMGetRoomInfoResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 查询聊天室详情 (asynchronously)
     * 查询一个聊天室的详情。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%AF%A6%E6%83%85
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomInfoAsync(String chatroomId, final ApiCallback<EMGetRoomInfoResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomInfoValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomInfoResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomList
     * @param limit 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomListCall(Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomListValidateBeforeCall(Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        return getRoomListCall(limit, cursor, _callback);

    }

    /**
     * 获取 app 中的聊天室
     * 分页获取应用下的聊天室列表和信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param limit 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @return EMGetRoomListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomListResult getRoomList(Integer limit, String cursor) throws ApiException {
        ApiResponse<EMGetRoomListResult> localVarResp = getRoomListWithHttpInfo(limit, cursor);
        return localVarResp.getData();
    }

    /**
     * 获取 app 中的聊天室
     * 分页获取应用下的聊天室列表和信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param limit 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @return ApiResponse&lt;EMGetRoomListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomListResult> getRoomListWithHttpInfo(Integer limit, String cursor) throws ApiException {
        okhttp3.Call localVarCall = getRoomListValidateBeforeCall(limit, cursor, null);
        Type localVarReturnType = new TypeToken<EMGetRoomListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取 app 中的聊天室 (asynchronously)
     * 分页获取应用下的聊天室列表和信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param limit 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomListAsync(Integer limit, String cursor, final ApiCallback<EMGetRoomListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomListValidateBeforeCall(limit, cursor, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomMemberList
     * @param chatroomId  (required)
     * @param pagenum 查询页码。默认值为 1 (optional)
     * @param pagesize 每页显示的聊天室成员数量。默认值为 1000。取值范围为 [0,1000] (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomMemberListCall(String chatroomId, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/users"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagenum", pagenum));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomMemberListValidateBeforeCall(String chatroomId, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomMemberList(Async)");
        }

        return getRoomMemberListCall(chatroomId, pagenum, pagesize, _callback);

    }

    /**
     * 分页获取聊天室成员列表
     * 可以分页获取聊天室成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @param pagenum 查询页码。默认值为 1 (optional)
     * @param pagesize 每页显示的聊天室成员数量。默认值为 1000。取值范围为 [0,1000] (optional)
     * @return EMGetRoomMemberListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomMemberListResult getRoomMemberList(String chatroomId, Integer pagenum, Integer pagesize) throws ApiException {
        ApiResponse<EMGetRoomMemberListResult> localVarResp = getRoomMemberListWithHttpInfo(chatroomId, pagenum, pagesize);
        return localVarResp.getData();
    }

    /**
     * 分页获取聊天室成员列表
     * 可以分页获取聊天室成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @param pagenum 查询页码。默认值为 1 (optional)
     * @param pagesize 每页显示的聊天室成员数量。默认值为 1000。取值范围为 [0,1000] (optional)
     * @return ApiResponse&lt;EMGetRoomMemberListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomMemberListResult> getRoomMemberListWithHttpInfo(String chatroomId, Integer pagenum, Integer pagesize) throws ApiException {
        okhttp3.Call localVarCall = getRoomMemberListValidateBeforeCall(chatroomId, pagenum, pagesize, null);
        Type localVarReturnType = new TypeToken<EMGetRoomMemberListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 分页获取聊天室成员列表 (asynchronously)
     * 可以分页获取聊天室成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8
     * @param chatroomId  (required)
     * @param pagenum 查询页码。默认值为 1 (optional)
     * @param pagesize 每页显示的聊天室成员数量。默认值为 1000。取值范围为 [0,1000] (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomMemberListAsync(String chatroomId, Integer pagenum, Integer pagesize, final ApiCallback<EMGetRoomMemberListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomMemberListValidateBeforeCall(chatroomId, pagenum, pagesize, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomMemberListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomSuperAdminList
     * @param pagenum 当前页码，默认值为 1 (optional)
     * @param pagesize 每页返回的超级管理员数量，默认值为 10 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomSuperAdminListCall(Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/super_admin";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagenum", pagenum));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomSuperAdminListValidateBeforeCall(Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        return getRoomSuperAdminListCall(pagenum, pagesize, _callback);

    }

    /**
     * 分页获取超级管理员列表
     * 可以分页获取超级管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param pagenum 当前页码，默认值为 1 (optional)
     * @param pagesize 每页返回的超级管理员数量，默认值为 10 (optional)
     * @return EMGetRoomSuperAdminListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomSuperAdminListResult getRoomSuperAdminList(Integer pagenum, Integer pagesize) throws ApiException {
        ApiResponse<EMGetRoomSuperAdminListResult> localVarResp = getRoomSuperAdminListWithHttpInfo(pagenum, pagesize);
        return localVarResp.getData();
    }

    /**
     * 分页获取超级管理员列表
     * 可以分页获取超级管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param pagenum 当前页码，默认值为 1 (optional)
     * @param pagesize 每页返回的超级管理员数量，默认值为 10 (optional)
     * @return ApiResponse&lt;EMGetRoomSuperAdminListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomSuperAdminListResult> getRoomSuperAdminListWithHttpInfo(Integer pagenum, Integer pagesize) throws ApiException {
        okhttp3.Call localVarCall = getRoomSuperAdminListValidateBeforeCall(pagenum, pagesize, null);
        Type localVarReturnType = new TypeToken<EMGetRoomSuperAdminListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 分页获取超级管理员列表 (asynchronously)
     * 可以分页获取超级管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param pagenum 当前页码，默认值为 1 (optional)
     * @param pagesize 每页返回的超级管理员数量，默认值为 10 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomSuperAdminListAsync(Integer pagenum, Integer pagesize, final ApiCallback<EMGetRoomSuperAdminListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomSuperAdminListValidateBeforeCall(pagenum, pagesize, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomSuperAdminListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRoomWhiteList
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomWhiteListCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/white/users"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRoomWhiteListValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling getRoomWhiteList(Async)");
        }

        return getRoomWhiteListCall(chatroomId, _callback);

    }

    /**
     * 查询聊天室白名单
     * 查询一个聊天室白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @return EMGetRoomWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetRoomWhiteListResult getRoomWhiteList(String chatroomId) throws ApiException {
        ApiResponse<EMGetRoomWhiteListResult> localVarResp = getRoomWhiteListWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 查询聊天室白名单
     * 查询一个聊天室白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMGetRoomWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetRoomWhiteListResult> getRoomWhiteListWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = getRoomWhiteListValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMGetRoomWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 查询聊天室白名单 (asynchronously)
     * 查询一个聊天室白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRoomWhiteListAsync(String chatroomId, final ApiCallback<EMGetRoomWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRoomWhiteListValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMGetRoomWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserJoinedRoomList
     * @param username  (required)
     * @param pagenum 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param pagesize 数据查询的起始位置 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedRoomListCall(String username, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/users/{username}/joined_chatrooms"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagenum", pagenum));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserJoinedRoomListValidateBeforeCall(String username, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getUserJoinedRoomList(Async)");
        }

        return getUserJoinedRoomListCall(username, pagenum, pagesize, _callback);

    }

    /**
     * 获取用户加入的聊天室
     * 根据用户 ID 分页获取该用户加入的聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param username  (required)
     * @param pagenum 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param pagesize 数据查询的起始位置 (optional)
     * @return EMGetUserJoinedRoomListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetUserJoinedRoomListResult getUserJoinedRoomList(String username, Integer pagenum, Integer pagesize) throws ApiException {
        ApiResponse<EMGetUserJoinedRoomListResult> localVarResp = getUserJoinedRoomListWithHttpInfo(username, pagenum, pagesize);
        return localVarResp.getData();
    }

    /**
     * 获取用户加入的聊天室
     * 根据用户 ID 分页获取该用户加入的聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param username  (required)
     * @param pagenum 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param pagesize 数据查询的起始位置 (optional)
     * @return ApiResponse&lt;EMGetUserJoinedRoomListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetUserJoinedRoomListResult> getUserJoinedRoomListWithHttpInfo(String username, Integer pagenum, Integer pagesize) throws ApiException {
        okhttp3.Call localVarCall = getUserJoinedRoomListValidateBeforeCall(username, pagenum, pagesize, null);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedRoomListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户加入的聊天室 (asynchronously)
     * 根据用户 ID 分页获取该用户加入的聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     * @param username  (required)
     * @param pagenum 每次期望返回的聊天室数量。取值范围为 [1,100]，默认值为 10 (optional)
     * @param pagesize 数据查询的起始位置 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedRoomListAsync(String username, Integer pagenum, Integer pagesize, final ApiCallback<EMGetUserJoinedRoomListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserJoinedRoomListValidateBeforeCall(username, pagenum, pagesize, _callback);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedRoomListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modifyRoom
     * @param chatroomId  (required)
     * @param emModifyRoom  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyRoomCall(String chatroomId, EMModifyRoom emModifyRoom, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emModifyRoom;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyRoomValidateBeforeCall(String chatroomId, EMModifyRoom emModifyRoom, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling modifyRoom(Async)");
        }

        return modifyRoomCall(chatroomId, emModifyRoom, _callback);

    }

    /**
     * 修改聊天室信息
     * 修改指定聊天室的信息。仅支持修改聊天室名称、聊天室描述和聊天室最大成员数。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E4%BF%A1%E6%81%AF
     * @param chatroomId  (required)
     * @param emModifyRoom  (optional)
     * @return EMModifyRoomResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMModifyRoomResult modifyRoom(String chatroomId, EMModifyRoom emModifyRoom) throws ApiException {
        ApiResponse<EMModifyRoomResult> localVarResp = modifyRoomWithHttpInfo(chatroomId, emModifyRoom);
        return localVarResp.getData();
    }

    /**
     * 修改聊天室信息
     * 修改指定聊天室的信息。仅支持修改聊天室名称、聊天室描述和聊天室最大成员数。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E4%BF%A1%E6%81%AF
     * @param chatroomId  (required)
     * @param emModifyRoom  (optional)
     * @return ApiResponse&lt;EMModifyRoomResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMModifyRoomResult> modifyRoomWithHttpInfo(String chatroomId, EMModifyRoom emModifyRoom) throws ApiException {
        okhttp3.Call localVarCall = modifyRoomValidateBeforeCall(chatroomId, emModifyRoom, null);
        Type localVarReturnType = new TypeToken<EMModifyRoomResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 修改聊天室信息 (asynchronously)
     * 修改指定聊天室的信息。仅支持修改聊天室名称、聊天室描述和聊天室最大成员数。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E4%BF%A1%E6%81%AF
     * @param chatroomId  (required)
     * @param emModifyRoom  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyRoomAsync(String chatroomId, EMModifyRoom emModifyRoom, final ApiCallback<EMModifyRoomResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyRoomValidateBeforeCall(chatroomId, emModifyRoom, _callback);
        Type localVarReturnType = new TypeToken<EMModifyRoomResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modifyRoomAnnouncement
     * @param chatroomId  (required)
     * @param emModifyRoomAnnouncement  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyRoomAnnouncementCall(String chatroomId, EMModifyRoomAnnouncement emModifyRoomAnnouncement, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emModifyRoomAnnouncement;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/announcement"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyRoomAnnouncementValidateBeforeCall(String chatroomId, EMModifyRoomAnnouncement emModifyRoomAnnouncement, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling modifyRoomAnnouncement(Async)");
        }

        return modifyRoomAnnouncementCall(chatroomId, emModifyRoomAnnouncement, _callback);

    }

    /**
     * 修改聊天室公告
     * 修改指定聊天室 ID 的聊天室公告。聊天室公告内容不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     * @param chatroomId  (required)
     * @param emModifyRoomAnnouncement  (optional)
     * @return EMModifyRoomAnnouncementResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMModifyRoomAnnouncementResult modifyRoomAnnouncement(String chatroomId, EMModifyRoomAnnouncement emModifyRoomAnnouncement) throws ApiException {
        ApiResponse<EMModifyRoomAnnouncementResult> localVarResp = modifyRoomAnnouncementWithHttpInfo(chatroomId, emModifyRoomAnnouncement);
        return localVarResp.getData();
    }

    /**
     * 修改聊天室公告
     * 修改指定聊天室 ID 的聊天室公告。聊天室公告内容不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     * @param chatroomId  (required)
     * @param emModifyRoomAnnouncement  (optional)
     * @return ApiResponse&lt;EMModifyRoomAnnouncementResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMModifyRoomAnnouncementResult> modifyRoomAnnouncementWithHttpInfo(String chatroomId, EMModifyRoomAnnouncement emModifyRoomAnnouncement) throws ApiException {
        okhttp3.Call localVarCall = modifyRoomAnnouncementValidateBeforeCall(chatroomId, emModifyRoomAnnouncement, null);
        Type localVarReturnType = new TypeToken<EMModifyRoomAnnouncementResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 修改聊天室公告 (asynchronously)
     * 修改指定聊天室 ID 的聊天室公告。聊天室公告内容不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     * @param chatroomId  (required)
     * @param emModifyRoomAnnouncement  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyRoomAnnouncementAsync(String chatroomId, EMModifyRoomAnnouncement emModifyRoomAnnouncement, final ApiCallback<EMModifyRoomAnnouncementResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyRoomAnnouncementValidateBeforeCall(chatroomId, emModifyRoomAnnouncement, _callback);
        Type localVarReturnType = new TypeToken<EMModifyRoomAnnouncementResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for muteAllRoomMember
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteAllRoomMemberCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/ban"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call muteAllRoomMemberValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling muteAllRoomMember(Async)");
        }

        return muteAllRoomMemberCall(chatroomId, _callback);

    }

    /**
     * 禁言聊天室全体成员
     * 对所有聊天室成员一键禁言。该操作不影响聊天室禁言列表，即一键禁言不会将聊天室所有成员加入聊天室禁言列表。设置聊天室全员禁言后，仅聊天室白名单中的用户可在聊天室内发消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E4%BD%93%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @return EMMuteAllRoomMemberResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMMuteAllRoomMemberResult muteAllRoomMember(String chatroomId) throws ApiException {
        ApiResponse<EMMuteAllRoomMemberResult> localVarResp = muteAllRoomMemberWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 禁言聊天室全体成员
     * 对所有聊天室成员一键禁言。该操作不影响聊天室禁言列表，即一键禁言不会将聊天室所有成员加入聊天室禁言列表。设置聊天室全员禁言后，仅聊天室白名单中的用户可在聊天室内发消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E4%BD%93%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMMuteAllRoomMemberResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMMuteAllRoomMemberResult> muteAllRoomMemberWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = muteAllRoomMemberValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMMuteAllRoomMemberResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 禁言聊天室全体成员 (asynchronously)
     * 对所有聊天室成员一键禁言。该操作不影响聊天室禁言列表，即一键禁言不会将聊天室所有成员加入聊天室禁言列表。设置聊天室全员禁言后，仅聊天室白名单中的用户可在聊天室内发消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E4%BD%93%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteAllRoomMemberAsync(String chatroomId, final ApiCallback<EMMuteAllRoomMemberResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = muteAllRoomMemberValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMMuteAllRoomMemberResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for muteRoomMember
     * @param chatroomId  (required)
     * @param emMuteRoomMember  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteRoomMemberCall(String chatroomId, EMMuteRoomMember emMuteRoomMember, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emMuteRoomMember;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/mute"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call muteRoomMemberValidateBeforeCall(String chatroomId, EMMuteRoomMember emMuteRoomMember, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling muteRoomMember(Async)");
        }

        return muteRoomMemberCall(chatroomId, emMuteRoomMember, _callback);

    }

    /**
     * 禁言聊天室成员
     * 禁言单个或多个聊天室成员。你一次最多可禁言 60 个成员。用户被禁言后，将无法在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param emMuteRoomMember  (optional)
     * @return EMMuteRoomMemberResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMMuteRoomMemberResult muteRoomMember(String chatroomId, EMMuteRoomMember emMuteRoomMember) throws ApiException {
        ApiResponse<EMMuteRoomMemberResult> localVarResp = muteRoomMemberWithHttpInfo(chatroomId, emMuteRoomMember);
        return localVarResp.getData();
    }

    /**
     * 禁言聊天室成员
     * 禁言单个或多个聊天室成员。你一次最多可禁言 60 个成员。用户被禁言后，将无法在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param emMuteRoomMember  (optional)
     * @return ApiResponse&lt;EMMuteRoomMemberResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMMuteRoomMemberResult> muteRoomMemberWithHttpInfo(String chatroomId, EMMuteRoomMember emMuteRoomMember) throws ApiException {
        okhttp3.Call localVarCall = muteRoomMemberValidateBeforeCall(chatroomId, emMuteRoomMember, null);
        Type localVarReturnType = new TypeToken<EMMuteRoomMemberResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 禁言聊天室成员 (asynchronously)
     * 禁言单个或多个聊天室成员。你一次最多可禁言 60 个成员。用户被禁言后，将无法在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param emMuteRoomMember  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteRoomMemberAsync(String chatroomId, EMMuteRoomMember emMuteRoomMember, final ApiCallback<EMMuteRoomMemberResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = muteRoomMemberValidateBeforeCall(chatroomId, emMuteRoomMember, _callback);
        Type localVarReturnType = new TypeToken<EMMuteRoomMemberResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeRoomAdmin
     * @param chatroomId  (required)
     * @param oldAdmin  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeRoomAdminCall(String chatroomId, String oldAdmin, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/admin/{oldAdmin}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "oldAdmin" + "}", localVarApiClient.escapeString(oldAdmin.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeRoomAdminValidateBeforeCall(String chatroomId, String oldAdmin, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling removeRoomAdmin(Async)");
        }

        // verify the required parameter 'oldAdmin' is set
        if (oldAdmin == null) {
            throw new ApiException("Missing the required parameter 'oldAdmin' when calling removeRoomAdmin(Async)");
        }

        return removeRoomAdminCall(chatroomId, oldAdmin, _callback);

    }

    /**
     * 移除聊天室管理员
     * 将用户的角色从聊天室管理员降为普通聊天室成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param chatroomId  (required)
     * @param oldAdmin  (required)
     * @return EMRemoveRoomAdminResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveRoomAdminResult removeRoomAdmin(String chatroomId, String oldAdmin) throws ApiException {
        ApiResponse<EMRemoveRoomAdminResult> localVarResp = removeRoomAdminWithHttpInfo(chatroomId, oldAdmin);
        return localVarResp.getData();
    }

    /**
     * 移除聊天室管理员
     * 将用户的角色从聊天室管理员降为普通聊天室成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param chatroomId  (required)
     * @param oldAdmin  (required)
     * @return ApiResponse&lt;EMRemoveRoomAdminResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveRoomAdminResult> removeRoomAdminWithHttpInfo(String chatroomId, String oldAdmin) throws ApiException {
        okhttp3.Call localVarCall = removeRoomAdminValidateBeforeCall(chatroomId, oldAdmin, null);
        Type localVarReturnType = new TypeToken<EMRemoveRoomAdminResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 移除聊天室管理员 (asynchronously)
     * 将用户的角色从聊天室管理员降为普通聊天室成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param chatroomId  (required)
     * @param oldAdmin  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeRoomAdminAsync(String chatroomId, String oldAdmin, final ApiCallback<EMRemoveRoomAdminResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeRoomAdminValidateBeforeCall(chatroomId, oldAdmin, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveRoomAdminResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeRoomSuperAdmin
     * @param superAdmin  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeRoomSuperAdminCall(String superAdmin, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/super_admin/{superAdmin}"
            .replace("{" + "superAdmin" + "}", localVarApiClient.escapeString(superAdmin.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeRoomSuperAdminValidateBeforeCall(String superAdmin, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'superAdmin' is set
        if (superAdmin == null) {
            throw new ApiException("Missing the required parameter 'superAdmin' when calling removeRoomSuperAdmin(Async)");
        }

        return removeRoomSuperAdminCall(superAdmin, _callback);

    }

    /**
     * 撤销超级管理员
     * 撤销超级管理员权限，用户将不能再创建聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%92%A4%E9%94%80%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     * @param superAdmin  (required)
     * @return EMRemoveRoomSuperAdminResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveRoomSuperAdminResult removeRoomSuperAdmin(String superAdmin) throws ApiException {
        ApiResponse<EMRemoveRoomSuperAdminResult> localVarResp = removeRoomSuperAdminWithHttpInfo(superAdmin);
        return localVarResp.getData();
    }

    /**
     * 撤销超级管理员
     * 撤销超级管理员权限，用户将不能再创建聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%92%A4%E9%94%80%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     * @param superAdmin  (required)
     * @return ApiResponse&lt;EMRemoveRoomSuperAdminResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveRoomSuperAdminResult> removeRoomSuperAdminWithHttpInfo(String superAdmin) throws ApiException {
        okhttp3.Call localVarCall = removeRoomSuperAdminValidateBeforeCall(superAdmin, null);
        Type localVarReturnType = new TypeToken<EMRemoveRoomSuperAdminResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 撤销超级管理员 (asynchronously)
     * 撤销超级管理员权限，用户将不能再创建聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%92%A4%E9%94%80%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     * @param superAdmin  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeRoomSuperAdminAsync(String superAdmin, final ApiCallback<EMRemoveRoomSuperAdminResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeRoomSuperAdminValidateBeforeCall(superAdmin, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveRoomSuperAdminResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserFromRoom
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromRoomCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/users/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserFromRoomValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling removeUserFromRoom(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeUserFromRoom(Async)");
        }

        return removeUserFromRoomCall(chatroomId, username, _callback);

    }

    /**
     * 移除单个聊天室成员
     * 从聊天室移除一个成员。如果被移除用户不在聊天室中或聊天室不存在，将返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMRemoveUserFromRoomResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserFromRoomResult removeUserFromRoom(String chatroomId, String username) throws ApiException {
        ApiResponse<EMRemoveUserFromRoomResult> localVarResp = removeUserFromRoomWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 移除单个聊天室成员
     * 从聊天室移除一个成员。如果被移除用户不在聊天室中或聊天室不存在，将返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveUserFromRoomResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserFromRoomResult> removeUserFromRoomWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeUserFromRoomValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromRoomResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 移除单个聊天室成员 (asynchronously)
     * 从聊天室移除一个成员。如果被移除用户不在聊天室中或聊天室不存在，将返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromRoomAsync(String chatroomId, String username, final ApiCallback<EMRemoveUserFromRoomResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserFromRoomValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromRoomResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserFromRoomBlockList
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromRoomBlockListCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/blocks/users/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserFromRoomBlockListValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling removeUserFromRoomBlockList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeUserFromRoomBlockList(Async)");
        }

        return removeUserFromRoomBlockListCall(chatroomId, username, _callback);

    }

    /**
     * 从聊天室黑名单移出单个用户
     * 将指定用户移出聊天室黑名单。对于聊天室黑名单中的用户，如果需要将其再次加入聊天室，需要先将其从聊天室黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BB%8E%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E5%87%BA%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMRemoveUserFromRoomBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserFromRoomBlockListResult removeUserFromRoomBlockList(String chatroomId, String username) throws ApiException {
        ApiResponse<EMRemoveUserFromRoomBlockListResult> localVarResp = removeUserFromRoomBlockListWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 从聊天室黑名单移出单个用户
     * 将指定用户移出聊天室黑名单。对于聊天室黑名单中的用户，如果需要将其再次加入聊天室，需要先将其从聊天室黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BB%8E%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E5%87%BA%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveUserFromRoomBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserFromRoomBlockListResult> removeUserFromRoomBlockListWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeUserFromRoomBlockListValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromRoomBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 从聊天室黑名单移出单个用户 (asynchronously)
     * 将指定用户移出聊天室黑名单。对于聊天室黑名单中的用户，如果需要将其再次加入聊天室，需要先将其从聊天室黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BB%8E%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E5%87%BA%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromRoomBlockListAsync(String chatroomId, String username, final ApiCallback<EMRemoveUserFromRoomBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserFromRoomBlockListValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromRoomBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserFromRoomWhiteList
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromRoomWhiteListCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/white/users/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserFromRoomWhiteListValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling removeUserFromRoomWhiteList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeUserFromRoomWhiteList(Async)");
        }

        return removeUserFromRoomWhiteListCall(chatroomId, username, _callback);

    }

    /**
     * 将用户移出聊天室白名单
     * 将指定用户从聊天室白名单移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%B0%86%E7%94%A8%E6%88%B7%E7%A7%BB%E5%87%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMRemoveUserFromRoomWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserFromRoomWhiteListResult removeUserFromRoomWhiteList(String chatroomId, String username) throws ApiException {
        ApiResponse<EMRemoveUserFromRoomWhiteListResult> localVarResp = removeUserFromRoomWhiteListWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 将用户移出聊天室白名单
     * 将指定用户从聊天室白名单移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%B0%86%E7%94%A8%E6%88%B7%E7%A7%BB%E5%87%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveUserFromRoomWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserFromRoomWhiteListResult> removeUserFromRoomWhiteListWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeUserFromRoomWhiteListValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromRoomWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 将用户移出聊天室白名单 (asynchronously)
     * 将指定用户从聊天室白名单移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%B0%86%E7%94%A8%E6%88%B7%E7%A7%BB%E5%87%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromRoomWhiteListAsync(String chatroomId, String username, final ApiCallback<EMRemoveUserFromRoomWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserFromRoomWhiteListValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromRoomWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for setRoomCustomAttributes
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emSetRoomCustomAttributes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call setRoomCustomAttributesCall(String chatroomId, String username, EMSetRoomCustomAttributes emSetRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emSetRoomCustomAttributes;

        // create path and map variables
        String localVarPath = "/metadata/chatroom/{chatroom_id}/user/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call setRoomCustomAttributesValidateBeforeCall(String chatroomId, String username, EMSetRoomCustomAttributes emSetRoomCustomAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling setRoomCustomAttributes(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling setRoomCustomAttributes(Async)");
        }

        return setRoomCustomAttributesCall(chatroomId, username, emSetRoomCustomAttributes, _callback);

    }

    /**
     * 设置聊天室自定义属性
     * 指定用户设置特定聊天室的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emSetRoomCustomAttributes  (optional)
     * @return EMSetRoomCustomAttributesResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMSetRoomCustomAttributesResult setRoomCustomAttributes(String chatroomId, String username, EMSetRoomCustomAttributes emSetRoomCustomAttributes) throws ApiException {
        ApiResponse<EMSetRoomCustomAttributesResult> localVarResp = setRoomCustomAttributesWithHttpInfo(chatroomId, username, emSetRoomCustomAttributes);
        return localVarResp.getData();
    }

    /**
     * 设置聊天室自定义属性
     * 指定用户设置特定聊天室的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emSetRoomCustomAttributes  (optional)
     * @return ApiResponse&lt;EMSetRoomCustomAttributesResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMSetRoomCustomAttributesResult> setRoomCustomAttributesWithHttpInfo(String chatroomId, String username, EMSetRoomCustomAttributes emSetRoomCustomAttributes) throws ApiException {
        okhttp3.Call localVarCall = setRoomCustomAttributesValidateBeforeCall(chatroomId, username, emSetRoomCustomAttributes, null);
        Type localVarReturnType = new TypeToken<EMSetRoomCustomAttributesResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 设置聊天室自定义属性 (asynchronously)
     * 指定用户设置特定聊天室的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param chatroomId  (required)
     * @param username  (required)
     * @param emSetRoomCustomAttributes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call setRoomCustomAttributesAsync(String chatroomId, String username, EMSetRoomCustomAttributes emSetRoomCustomAttributes, final ApiCallback<EMSetRoomCustomAttributesResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = setRoomCustomAttributesValidateBeforeCall(chatroomId, username, emSetRoomCustomAttributes, _callback);
        Type localVarReturnType = new TypeToken<EMSetRoomCustomAttributesResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for unmuteAllRoomMember
     * @param chatroomId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unmuteAllRoomMemberCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/ban"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call unmuteAllRoomMemberValidateBeforeCall(String chatroomId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling unmuteAllRoomMember(Async)");
        }

        return unmuteAllRoomMemberCall(chatroomId, _callback);

    }

    /**
     * 解除聊天室全员禁言
     * 一键取消对聊天室全体成员的禁言。解除禁言后，聊天室成员可以在聊天室中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     * @param chatroomId  (required)
     * @return EMUnmuteAllRoomMemberResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMUnmuteAllRoomMemberResult unmuteAllRoomMember(String chatroomId) throws ApiException {
        ApiResponse<EMUnmuteAllRoomMemberResult> localVarResp = unmuteAllRoomMemberWithHttpInfo(chatroomId);
        return localVarResp.getData();
    }

    /**
     * 解除聊天室全员禁言
     * 一键取消对聊天室全体成员的禁言。解除禁言后，聊天室成员可以在聊天室中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     * @param chatroomId  (required)
     * @return ApiResponse&lt;EMUnmuteAllRoomMemberResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMUnmuteAllRoomMemberResult> unmuteAllRoomMemberWithHttpInfo(String chatroomId) throws ApiException {
        okhttp3.Call localVarCall = unmuteAllRoomMemberValidateBeforeCall(chatroomId, null);
        Type localVarReturnType = new TypeToken<EMUnmuteAllRoomMemberResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 解除聊天室全员禁言 (asynchronously)
     * 一键取消对聊天室全体成员的禁言。解除禁言后，聊天室成员可以在聊天室中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     * @param chatroomId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unmuteAllRoomMemberAsync(String chatroomId, final ApiCallback<EMUnmuteAllRoomMemberResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = unmuteAllRoomMemberValidateBeforeCall(chatroomId, _callback);
        Type localVarReturnType = new TypeToken<EMUnmuteAllRoomMemberResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for unmuteRoomMember
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unmuteRoomMemberCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatrooms/{chatroom_id}/mute/{username}"
            .replace("{" + "chatroom_id" + "}", localVarApiClient.escapeString(chatroomId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call unmuteRoomMemberValidateBeforeCall(String chatroomId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatroomId' is set
        if (chatroomId == null) {
            throw new ApiException("Missing the required parameter 'chatroomId' when calling unmuteRoomMember(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling unmuteRoomMember(Async)");
        }

        return unmuteRoomMemberCall(chatroomId, username, _callback);

    }

    /**
     * 解除聊天室禁言成员
     * 解除对一个聊天室成员的禁言。解除禁言后，该成员可以正常在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%A6%81%E8%A8%80%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @return EMUnmuteRoomMemberResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMUnmuteRoomMemberResult unmuteRoomMember(String chatroomId, String username) throws ApiException {
        ApiResponse<EMUnmuteRoomMemberResult> localVarResp = unmuteRoomMemberWithHttpInfo(chatroomId, username);
        return localVarResp.getData();
    }

    /**
     * 解除聊天室禁言成员
     * 解除对一个聊天室成员的禁言。解除禁言后，该成员可以正常在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%A6%81%E8%A8%80%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMUnmuteRoomMemberResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMUnmuteRoomMemberResult> unmuteRoomMemberWithHttpInfo(String chatroomId, String username) throws ApiException {
        okhttp3.Call localVarCall = unmuteRoomMemberValidateBeforeCall(chatroomId, username, null);
        Type localVarReturnType = new TypeToken<EMUnmuteRoomMemberResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 解除聊天室禁言成员 (asynchronously)
     * 解除对一个聊天室成员的禁言。解除禁言后，该成员可以正常在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%A6%81%E8%A8%80%E6%88%90%E5%91%98
     * @param chatroomId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unmuteRoomMemberAsync(String chatroomId, String username, final ApiCallback<EMUnmuteRoomMemberResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = unmuteRoomMemberValidateBeforeCall(chatroomId, username, _callback);
        Type localVarReturnType = new TypeToken<EMUnmuteRoomMemberResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
