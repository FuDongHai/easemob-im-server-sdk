/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;
import com.easemob.im.ProgressRequestBody;
import com.easemob.im.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.easemob.im.api.model.EMAddMultipleUsersToThread;
import com.easemob.im.api.model.EMAddMultipleUsersToThreadResult;
import com.easemob.im.api.model.EMCreateThread;
import com.easemob.im.api.model.EMCreateThreadResult;
import com.easemob.im.api.model.EMDeleteThreadResult;
import com.easemob.im.api.model.EMGetThreadMemberListResult;
import com.easemob.im.api.model.EMGetThreadsUnderAppResult;
import com.easemob.im.api.model.EMGetUserJoinedThreadsResult;
import com.easemob.im.api.model.EMGetUserJoinedThreadsUnderGroupResult;
import com.easemob.im.api.model.EMModifyThread;
import com.easemob.im.api.model.EMModifyThreadResult;
import com.easemob.im.api.model.EMRemoveMultipleUsersFromThread;
import com.easemob.im.api.model.EMRemoveMultipleUsersFromThreadResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ThreadApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ThreadApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ThreadApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addMultipleUsersToThread
     * @param threadId  (required)
     * @param emAddMultipleUsersToThread  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUsersToThreadCall(String threadId, EMAddMultipleUsersToThread emAddMultipleUsersToThread, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUsersToThread;

        // create path and map variables
        String localVarPath = "/thread/{thread_id}/users"
            .replace("{" + "thread_id" + "}", localVarApiClient.escapeString(threadId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUsersToThreadValidateBeforeCall(String threadId, EMAddMultipleUsersToThread emAddMultipleUsersToThread, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'threadId' is set
        if (threadId == null) {
            throw new ApiException("Missing the required parameter 'threadId' when calling addMultipleUsersToThread(Async)");
        }

        return addMultipleUsersToThreadCall(threadId, emAddMultipleUsersToThread, _callback);

    }

    /**
     * 用户批量加入子区
     * 用户批量加入指定的子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%94%A8%E6%88%B7%E6%89%B9%E9%87%8F%E5%8A%A0%E5%85%A5%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param emAddMultipleUsersToThread  (optional)
     * @return EMAddMultipleUsersToThreadResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddMultipleUsersToThreadResult addMultipleUsersToThread(String threadId, EMAddMultipleUsersToThread emAddMultipleUsersToThread) throws ApiException {
        ApiResponse<EMAddMultipleUsersToThreadResult> localVarResp = addMultipleUsersToThreadWithHttpInfo(threadId, emAddMultipleUsersToThread);
        return localVarResp.getData();
    }

    /**
     * 用户批量加入子区
     * 用户批量加入指定的子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%94%A8%E6%88%B7%E6%89%B9%E9%87%8F%E5%8A%A0%E5%85%A5%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param emAddMultipleUsersToThread  (optional)
     * @return ApiResponse&lt;EMAddMultipleUsersToThreadResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddMultipleUsersToThreadResult> addMultipleUsersToThreadWithHttpInfo(String threadId, EMAddMultipleUsersToThread emAddMultipleUsersToThread) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUsersToThreadValidateBeforeCall(threadId, emAddMultipleUsersToThread, null);
        Type localVarReturnType = new TypeToken<EMAddMultipleUsersToThreadResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 用户批量加入子区 (asynchronously)
     * 用户批量加入指定的子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%94%A8%E6%88%B7%E6%89%B9%E9%87%8F%E5%8A%A0%E5%85%A5%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param emAddMultipleUsersToThread  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUsersToThreadAsync(String threadId, EMAddMultipleUsersToThread emAddMultipleUsersToThread, final ApiCallback<EMAddMultipleUsersToThreadResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUsersToThreadValidateBeforeCall(threadId, emAddMultipleUsersToThread, _callback);
        Type localVarReturnType = new TypeToken<EMAddMultipleUsersToThreadResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createThread
     * @param emCreateThread  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createThreadCall(EMCreateThread emCreateThread, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCreateThread;

        // create path and map variables
        String localVarPath = "/thread";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createThreadValidateBeforeCall(EMCreateThread emCreateThread, final ApiCallback _callback) throws ApiException {
        return createThreadCall(emCreateThread, _callback);

    }

    /**
     * 创建子区
     * 创建子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%9B%E5%BB%BA%E5%AD%90%E5%8C%BA
     * @param emCreateThread  (optional)
     * @return EMCreateThreadResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMCreateThreadResult createThread(EMCreateThread emCreateThread) throws ApiException {
        ApiResponse<EMCreateThreadResult> localVarResp = createThreadWithHttpInfo(emCreateThread);
        return localVarResp.getData();
    }

    /**
     * 创建子区
     * 创建子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%9B%E5%BB%BA%E5%AD%90%E5%8C%BA
     * @param emCreateThread  (optional)
     * @return ApiResponse&lt;EMCreateThreadResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMCreateThreadResult> createThreadWithHttpInfo(EMCreateThread emCreateThread) throws ApiException {
        okhttp3.Call localVarCall = createThreadValidateBeforeCall(emCreateThread, null);
        Type localVarReturnType = new TypeToken<EMCreateThreadResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 创建子区 (asynchronously)
     * 创建子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%9B%E5%BB%BA%E5%AD%90%E5%8C%BA
     * @param emCreateThread  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createThreadAsync(EMCreateThread emCreateThread, final ApiCallback<EMCreateThreadResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = createThreadValidateBeforeCall(emCreateThread, _callback);
        Type localVarReturnType = new TypeToken<EMCreateThreadResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteThread
     * @param threadId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteThreadCall(String threadId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/thread/{thread_id}"
            .replace("{" + "thread_id" + "}", localVarApiClient.escapeString(threadId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteThreadValidateBeforeCall(String threadId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'threadId' is set
        if (threadId == null) {
            throw new ApiException("Missing the required parameter 'threadId' when calling deleteThread(Async)");
        }

        return deleteThreadCall(threadId, _callback);

    }

    /**
     * 删除子区
     * 删除指定子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @return EMDeleteThreadResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDeleteThreadResult deleteThread(String threadId) throws ApiException {
        ApiResponse<EMDeleteThreadResult> localVarResp = deleteThreadWithHttpInfo(threadId);
        return localVarResp.getData();
    }

    /**
     * 删除子区
     * 删除指定子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @return ApiResponse&lt;EMDeleteThreadResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDeleteThreadResult> deleteThreadWithHttpInfo(String threadId) throws ApiException {
        okhttp3.Call localVarCall = deleteThreadValidateBeforeCall(threadId, null);
        Type localVarReturnType = new TypeToken<EMDeleteThreadResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除子区 (asynchronously)
     * 删除指定子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteThreadAsync(String threadId, final ApiCallback<EMDeleteThreadResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteThreadValidateBeforeCall(threadId, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteThreadResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getThreadMemberList
     * @param threadId  (required)
     * @param limit 每次期望返回的子区成员数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getThreadMemberListCall(String threadId, Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/thread/{thread_id}/users"
            .replace("{" + "thread_id" + "}", localVarApiClient.escapeString(threadId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getThreadMemberListValidateBeforeCall(String threadId, Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'threadId' is set
        if (threadId == null) {
            throw new ApiException("Missing the required parameter 'threadId' when calling getThreadMemberList(Async)");
        }

        return getThreadMemberListCall(threadId, limit, cursor, _callback);

    }

    /**
     * 获取子区成员列表(分页)
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%AD%90%E5%8C%BA%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8-%E5%88%86%E9%A1%B5
     * @param threadId  (required)
     * @param limit 每次期望返回的子区成员数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @return EMGetThreadMemberListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetThreadMemberListResult getThreadMemberList(String threadId, Integer limit, String cursor) throws ApiException {
        ApiResponse<EMGetThreadMemberListResult> localVarResp = getThreadMemberListWithHttpInfo(threadId, limit, cursor);
        return localVarResp.getData();
    }

    /**
     * 获取子区成员列表(分页)
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%AD%90%E5%8C%BA%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8-%E5%88%86%E9%A1%B5
     * @param threadId  (required)
     * @param limit 每次期望返回的子区成员数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @return ApiResponse&lt;EMGetThreadMemberListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetThreadMemberListResult> getThreadMemberListWithHttpInfo(String threadId, Integer limit, String cursor) throws ApiException {
        okhttp3.Call localVarCall = getThreadMemberListValidateBeforeCall(threadId, limit, cursor, null);
        Type localVarReturnType = new TypeToken<EMGetThreadMemberListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取子区成员列表(分页) (asynchronously)
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%AD%90%E5%8C%BA%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8-%E5%88%86%E9%A1%B5
     * @param threadId  (required)
     * @param limit 每次期望返回的子区成员数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getThreadMemberListAsync(String threadId, Integer limit, String cursor, final ApiCallback<EMGetThreadMemberListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getThreadMemberListValidateBeforeCall(threadId, limit, cursor, _callback);
        Type localVarReturnType = new TypeToken<EMGetThreadMemberListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getThreadsUnderApp
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按子区创建时间的正序； - （默认）desc：按子区创建时间的倒序 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getThreadsUnderAppCall(Integer limit, String cursor, String sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/thread";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getThreadsUnderAppValidateBeforeCall(Integer limit, String cursor, String sort, final ApiCallback _callback) throws ApiException {
        return getThreadsUnderAppCall(limit, cursor, sort, _callback);

    }

    /**
     * 获取 app 中的子区
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E5%AD%90%E5%8C%BA
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按子区创建时间的正序； - （默认）desc：按子区创建时间的倒序 (optional)
     * @return EMGetThreadsUnderAppResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetThreadsUnderAppResult getThreadsUnderApp(Integer limit, String cursor, String sort) throws ApiException {
        ApiResponse<EMGetThreadsUnderAppResult> localVarResp = getThreadsUnderAppWithHttpInfo(limit, cursor, sort);
        return localVarResp.getData();
    }

    /**
     * 获取 app 中的子区
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E5%AD%90%E5%8C%BA
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按子区创建时间的正序； - （默认）desc：按子区创建时间的倒序 (optional)
     * @return ApiResponse&lt;EMGetThreadsUnderAppResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetThreadsUnderAppResult> getThreadsUnderAppWithHttpInfo(Integer limit, String cursor, String sort) throws ApiException {
        okhttp3.Call localVarCall = getThreadsUnderAppValidateBeforeCall(limit, cursor, sort, null);
        Type localVarReturnType = new TypeToken<EMGetThreadsUnderAppResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取 app 中的子区 (asynchronously)
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E5%AD%90%E5%8C%BA
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按子区创建时间的正序； - （默认）desc：按子区创建时间的倒序 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getThreadsUnderAppAsync(Integer limit, String cursor, String sort, final ApiCallback<EMGetThreadsUnderAppResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getThreadsUnderAppValidateBeforeCall(limit, cursor, sort, _callback);
        Type localVarReturnType = new TypeToken<EMGetThreadsUnderAppResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserJoinedThreads
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedThreadsCall(String username, Integer limit, String cursor, String sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/threads/user/{username}"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserJoinedThreadsValidateBeforeCall(String username, Integer limit, String cursor, String sort, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getUserJoinedThreads(Async)");
        }

        return getUserJoinedThreadsCall(username, limit, cursor, sort, _callback);

    }

    /**
     * 获取单个用户加入的所有子区（分页获取）
     * 根据用户 ID 获取该用户加入的所有子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E5%8C%BA-%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @return EMGetUserJoinedThreadsResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetUserJoinedThreadsResult getUserJoinedThreads(String username, Integer limit, String cursor, String sort) throws ApiException {
        ApiResponse<EMGetUserJoinedThreadsResult> localVarResp = getUserJoinedThreadsWithHttpInfo(username, limit, cursor, sort);
        return localVarResp.getData();
    }

    /**
     * 获取单个用户加入的所有子区（分页获取）
     * 根据用户 ID 获取该用户加入的所有子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E5%8C%BA-%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @return ApiResponse&lt;EMGetUserJoinedThreadsResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetUserJoinedThreadsResult> getUserJoinedThreadsWithHttpInfo(String username, Integer limit, String cursor, String sort) throws ApiException {
        okhttp3.Call localVarCall = getUserJoinedThreadsValidateBeforeCall(username, limit, cursor, sort, null);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedThreadsResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个用户加入的所有子区（分页获取） (asynchronously)
     * 根据用户 ID 获取该用户加入的所有子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E5%8C%BA-%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedThreadsAsync(String username, Integer limit, String cursor, String sort, final ApiCallback<EMGetUserJoinedThreadsResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserJoinedThreadsValidateBeforeCall(username, limit, cursor, sort, _callback);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedThreadsResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserJoinedThreadsUnderGroup
     * @param groupId  (required)
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedThreadsUnderGroupCall(String groupId, String username, Integer limit, String cursor, String sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/threads/chatgroups/{group_id}/user/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserJoinedThreadsUnderGroupValidateBeforeCall(String groupId, String username, Integer limit, String cursor, String sort, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getUserJoinedThreadsUnderGroup(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getUserJoinedThreadsUnderGroup(Async)");
        }

        return getUserJoinedThreadsUnderGroupCall(groupId, username, limit, cursor, sort, _callback);

    }

    /**
     * 获取单个用户在指定群组中加入的所有子区 (分页获取)
     * 根据用户 ID 获取该用户在指定群组中加入的所有子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%9C%A8%E6%8C%87%E5%AE%9A%E7%BE%A4%E7%BB%84%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E5%8C%BA-%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96
     * @param groupId  (required)
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @return EMGetUserJoinedThreadsUnderGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetUserJoinedThreadsUnderGroupResult getUserJoinedThreadsUnderGroup(String groupId, String username, Integer limit, String cursor, String sort) throws ApiException {
        ApiResponse<EMGetUserJoinedThreadsUnderGroupResult> localVarResp = getUserJoinedThreadsUnderGroupWithHttpInfo(groupId, username, limit, cursor, sort);
        return localVarResp.getData();
    }

    /**
     * 获取单个用户在指定群组中加入的所有子区 (分页获取)
     * 根据用户 ID 获取该用户在指定群组中加入的所有子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%9C%A8%E6%8C%87%E5%AE%9A%E7%BE%A4%E7%BB%84%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E5%8C%BA-%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96
     * @param groupId  (required)
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @return ApiResponse&lt;EMGetUserJoinedThreadsUnderGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetUserJoinedThreadsUnderGroupResult> getUserJoinedThreadsUnderGroupWithHttpInfo(String groupId, String username, Integer limit, String cursor, String sort) throws ApiException {
        okhttp3.Call localVarCall = getUserJoinedThreadsUnderGroupValidateBeforeCall(groupId, username, limit, cursor, sort, null);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedThreadsUnderGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个用户在指定群组中加入的所有子区 (分页获取) (asynchronously)
     * 根据用户 ID 获取该用户在指定群组中加入的所有子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%9C%A8%E6%8C%87%E5%AE%9A%E7%BE%A4%E7%BB%84%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E5%8C%BA-%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96
     * @param groupId  (required)
     * @param username  (required)
     * @param limit 每次期望返回的子区数量，取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param sort 获取的子区的排序顺序： - asc：按用户加入子区的时间的正序； - （默认）desc：按用户加入子区的时间的倒序 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedThreadsUnderGroupAsync(String groupId, String username, Integer limit, String cursor, String sort, final ApiCallback<EMGetUserJoinedThreadsUnderGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserJoinedThreadsUnderGroupValidateBeforeCall(groupId, username, limit, cursor, sort, _callback);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedThreadsUnderGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modifyThread
     * @param threadId  (required)
     * @param emModifyThread  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyThreadCall(String threadId, EMModifyThread emModifyThread, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emModifyThread;

        // create path and map variables
        String localVarPath = "/thread/{thread_id}"
            .replace("{" + "thread_id" + "}", localVarApiClient.escapeString(threadId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyThreadValidateBeforeCall(String threadId, EMModifyThread emModifyThread, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'threadId' is set
        if (threadId == null) {
            throw new ApiException("Missing the required parameter 'threadId' when calling modifyThread(Async)");
        }

        return modifyThreadCall(threadId, emModifyThread, _callback);

    }

    /**
     * 修改子区
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param emModifyThread  (optional)
     * @return EMModifyThreadResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMModifyThreadResult modifyThread(String threadId, EMModifyThread emModifyThread) throws ApiException {
        ApiResponse<EMModifyThreadResult> localVarResp = modifyThreadWithHttpInfo(threadId, emModifyThread);
        return localVarResp.getData();
    }

    /**
     * 修改子区
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param emModifyThread  (optional)
     * @return ApiResponse&lt;EMModifyThreadResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMModifyThreadResult> modifyThreadWithHttpInfo(String threadId, EMModifyThread emModifyThread) throws ApiException {
        okhttp3.Call localVarCall = modifyThreadValidateBeforeCall(threadId, emModifyThread, null);
        Type localVarReturnType = new TypeToken<EMModifyThreadResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 修改子区 (asynchronously)
     * 分页获取应用下的子区列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E5%AD%90%E5%8C%BA
     * @param threadId  (required)
     * @param emModifyThread  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyThreadAsync(String threadId, EMModifyThread emModifyThread, final ApiCallback<EMModifyThreadResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyThreadValidateBeforeCall(threadId, emModifyThread, _callback);
        Type localVarReturnType = new TypeToken<EMModifyThreadResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeMultipleUsersFromThread
     * @param threadId  (required)
     * @param emRemoveMultipleUsersFromThread  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeMultipleUsersFromThreadCall(String threadId, EMRemoveMultipleUsersFromThread emRemoveMultipleUsersFromThread, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emRemoveMultipleUsersFromThread;

        // create path and map variables
        String localVarPath = "/thread/{thread_id}/users"
            .replace("{" + "thread_id" + "}", localVarApiClient.escapeString(threadId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeMultipleUsersFromThreadValidateBeforeCall(String threadId, EMRemoveMultipleUsersFromThread emRemoveMultipleUsersFromThread, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'threadId' is set
        if (threadId == null) {
            throw new ApiException("Missing the required parameter 'threadId' when calling removeMultipleUsersFromThread(Async)");
        }

        return removeMultipleUsersFromThreadCall(threadId, emRemoveMultipleUsersFromThread, _callback);

    }

    /**
     * 批量踢出子区成员
     * 批量踢出子区成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E8%B8%A2%E5%87%BA%E5%AD%90%E5%8C%BA%E6%88%90%E5%91%98
     * @param threadId  (required)
     * @param emRemoveMultipleUsersFromThread  (optional)
     * @return EMRemoveMultipleUsersFromThreadResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveMultipleUsersFromThreadResult removeMultipleUsersFromThread(String threadId, EMRemoveMultipleUsersFromThread emRemoveMultipleUsersFromThread) throws ApiException {
        ApiResponse<EMRemoveMultipleUsersFromThreadResult> localVarResp = removeMultipleUsersFromThreadWithHttpInfo(threadId, emRemoveMultipleUsersFromThread);
        return localVarResp.getData();
    }

    /**
     * 批量踢出子区成员
     * 批量踢出子区成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E8%B8%A2%E5%87%BA%E5%AD%90%E5%8C%BA%E6%88%90%E5%91%98
     * @param threadId  (required)
     * @param emRemoveMultipleUsersFromThread  (optional)
     * @return ApiResponse&lt;EMRemoveMultipleUsersFromThreadResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveMultipleUsersFromThreadResult> removeMultipleUsersFromThreadWithHttpInfo(String threadId, EMRemoveMultipleUsersFromThread emRemoveMultipleUsersFromThread) throws ApiException {
        okhttp3.Call localVarCall = removeMultipleUsersFromThreadValidateBeforeCall(threadId, emRemoveMultipleUsersFromThread, null);
        Type localVarReturnType = new TypeToken<EMRemoveMultipleUsersFromThreadResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量踢出子区成员 (asynchronously)
     * 批量踢出子区成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E8%B8%A2%E5%87%BA%E5%AD%90%E5%8C%BA%E6%88%90%E5%91%98
     * @param threadId  (required)
     * @param emRemoveMultipleUsersFromThread  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeMultipleUsersFromThreadAsync(String threadId, EMRemoveMultipleUsersFromThread emRemoveMultipleUsersFromThread, final ApiCallback<EMRemoveMultipleUsersFromThreadResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeMultipleUsersFromThreadValidateBeforeCall(threadId, emRemoveMultipleUsersFromThread, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveMultipleUsersFromThreadResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
