/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;
import com.easemob.im.ProgressRequestBody;
import com.easemob.im.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.easemob.im.api.model.EMCreateMessage;
import com.easemob.im.api.model.EMImportChatGroupMessage;
import com.easemob.im.api.model.EMImportChatGroupMessageResult;
import com.easemob.im.api.model.EMImportChatUserMessage;
import com.easemob.im.api.model.EMImportChatUserMessageResult;
import com.easemob.im.api.model.EMOneWayDeleteConversation;
import com.easemob.im.api.model.EMOneWayDeleteConversationResult;
import com.easemob.im.api.model.EMRecallMessage;
import com.easemob.im.api.model.EMRecallMessageResult;
import com.easemob.im.api.model.EMSendMessageResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MessageApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public MessageApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MessageApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for importChatGroupMessage
     * @param emImportChatGroupMessage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call importChatGroupMessageCall(EMImportChatGroupMessage emImportChatGroupMessage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emImportChatGroupMessage;

        // create path and map variables
        String localVarPath = "/messages/chatgroups/import";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call importChatGroupMessageValidateBeforeCall(EMImportChatGroupMessage emImportChatGroupMessage, final ApiCallback _callback) throws ApiException {
        return importChatGroupMessageCall(emImportChatGroupMessage, _callback);

    }

    /**
     * 导入群聊消息
     * 你可以在数据迁移时导入群聊消息。每次调用该接口只能导入一条消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_import.html#%E5%AF%BC%E5%85%A5%E7%BE%A4%E8%81%8A%E6%B6%88%E6%81%AF
     * @param emImportChatGroupMessage  (optional)
     * @return EMImportChatGroupMessageResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMImportChatGroupMessageResult importChatGroupMessage(EMImportChatGroupMessage emImportChatGroupMessage) throws ApiException {
        ApiResponse<EMImportChatGroupMessageResult> localVarResp = importChatGroupMessageWithHttpInfo(emImportChatGroupMessage);
        return localVarResp.getData();
    }

    /**
     * 导入群聊消息
     * 你可以在数据迁移时导入群聊消息。每次调用该接口只能导入一条消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_import.html#%E5%AF%BC%E5%85%A5%E7%BE%A4%E8%81%8A%E6%B6%88%E6%81%AF
     * @param emImportChatGroupMessage  (optional)
     * @return ApiResponse&lt;EMImportChatGroupMessageResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMImportChatGroupMessageResult> importChatGroupMessageWithHttpInfo(EMImportChatGroupMessage emImportChatGroupMessage) throws ApiException {
        okhttp3.Call localVarCall = importChatGroupMessageValidateBeforeCall(emImportChatGroupMessage, null);
        Type localVarReturnType = new TypeToken<EMImportChatGroupMessageResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 导入群聊消息 (asynchronously)
     * 你可以在数据迁移时导入群聊消息。每次调用该接口只能导入一条消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_import.html#%E5%AF%BC%E5%85%A5%E7%BE%A4%E8%81%8A%E6%B6%88%E6%81%AF
     * @param emImportChatGroupMessage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call importChatGroupMessageAsync(EMImportChatGroupMessage emImportChatGroupMessage, final ApiCallback<EMImportChatGroupMessageResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = importChatGroupMessageValidateBeforeCall(emImportChatGroupMessage, _callback);
        Type localVarReturnType = new TypeToken<EMImportChatGroupMessageResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for importChatUserMessage
     * @param emImportChatUserMessage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call importChatUserMessageCall(EMImportChatUserMessage emImportChatUserMessage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emImportChatUserMessage;

        // create path and map variables
        String localVarPath = "/messages/users/import";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call importChatUserMessageValidateBeforeCall(EMImportChatUserMessage emImportChatUserMessage, final ApiCallback _callback) throws ApiException {
        return importChatUserMessageCall(emImportChatUserMessage, _callback);

    }

    /**
     * 导入单聊消息
     * 你可以在数据迁移时导入单聊消息。每次调用该接口只能导入一条消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_import.html#%E5%AF%BC%E5%85%A5%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF
     * @param emImportChatUserMessage  (optional)
     * @return EMImportChatUserMessageResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMImportChatUserMessageResult importChatUserMessage(EMImportChatUserMessage emImportChatUserMessage) throws ApiException {
        ApiResponse<EMImportChatUserMessageResult> localVarResp = importChatUserMessageWithHttpInfo(emImportChatUserMessage);
        return localVarResp.getData();
    }

    /**
     * 导入单聊消息
     * 你可以在数据迁移时导入单聊消息。每次调用该接口只能导入一条消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_import.html#%E5%AF%BC%E5%85%A5%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF
     * @param emImportChatUserMessage  (optional)
     * @return ApiResponse&lt;EMImportChatUserMessageResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMImportChatUserMessageResult> importChatUserMessageWithHttpInfo(EMImportChatUserMessage emImportChatUserMessage) throws ApiException {
        okhttp3.Call localVarCall = importChatUserMessageValidateBeforeCall(emImportChatUserMessage, null);
        Type localVarReturnType = new TypeToken<EMImportChatUserMessageResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 导入单聊消息 (asynchronously)
     * 你可以在数据迁移时导入单聊消息。每次调用该接口只能导入一条消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_import.html#%E5%AF%BC%E5%85%A5%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF
     * @param emImportChatUserMessage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call importChatUserMessageAsync(EMImportChatUserMessage emImportChatUserMessage, final ApiCallback<EMImportChatUserMessageResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = importChatUserMessageValidateBeforeCall(emImportChatUserMessage, _callback);
        Type localVarReturnType = new TypeToken<EMImportChatUserMessageResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for oneWayDeleteConversation
     * @param username 要删除会话的用户的唯一标识符，即用户 ID (required)
     * @param emOneWayDeleteConversation  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call oneWayDeleteConversationCall(String username, EMOneWayDeleteConversation emOneWayDeleteConversation, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emOneWayDeleteConversation;

        // create path and map variables
        String localVarPath = "/users/{username}/user_channel"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call oneWayDeleteConversationValidateBeforeCall(String username, EMOneWayDeleteConversation emOneWayDeleteConversation, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling oneWayDeleteConversation(Async)");
        }

        return oneWayDeleteConversationCall(username, emOneWayDeleteConversation, _callback);

    }

    /**
     * 单向删除会话
     * 该方法使聊天用户能够从服务器中删除会话。删除会话后，该用户将从服务器获取不到该会话。该会话的其他参与聊天用户仍然可以从服务器获取会话内容。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_recall.html#%E5%8D%95%E5%90%91%E5%88%A0%E9%99%A4%E4%BC%9A%E8%AF%9D
     * @param username 要删除会话的用户的唯一标识符，即用户 ID (required)
     * @param emOneWayDeleteConversation  (optional)
     * @return EMOneWayDeleteConversationResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMOneWayDeleteConversationResult oneWayDeleteConversation(String username, EMOneWayDeleteConversation emOneWayDeleteConversation) throws ApiException {
        ApiResponse<EMOneWayDeleteConversationResult> localVarResp = oneWayDeleteConversationWithHttpInfo(username, emOneWayDeleteConversation);
        return localVarResp.getData();
    }

    /**
     * 单向删除会话
     * 该方法使聊天用户能够从服务器中删除会话。删除会话后，该用户将从服务器获取不到该会话。该会话的其他参与聊天用户仍然可以从服务器获取会话内容。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_recall.html#%E5%8D%95%E5%90%91%E5%88%A0%E9%99%A4%E4%BC%9A%E8%AF%9D
     * @param username 要删除会话的用户的唯一标识符，即用户 ID (required)
     * @param emOneWayDeleteConversation  (optional)
     * @return ApiResponse&lt;EMOneWayDeleteConversationResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMOneWayDeleteConversationResult> oneWayDeleteConversationWithHttpInfo(String username, EMOneWayDeleteConversation emOneWayDeleteConversation) throws ApiException {
        okhttp3.Call localVarCall = oneWayDeleteConversationValidateBeforeCall(username, emOneWayDeleteConversation, null);
        Type localVarReturnType = new TypeToken<EMOneWayDeleteConversationResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 单向删除会话 (asynchronously)
     * 该方法使聊天用户能够从服务器中删除会话。删除会话后，该用户将从服务器获取不到该会话。该会话的其他参与聊天用户仍然可以从服务器获取会话内容。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_recall.html#%E5%8D%95%E5%90%91%E5%88%A0%E9%99%A4%E4%BC%9A%E8%AF%9D
     * @param username 要删除会话的用户的唯一标识符，即用户 ID (required)
     * @param emOneWayDeleteConversation  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call oneWayDeleteConversationAsync(String username, EMOneWayDeleteConversation emOneWayDeleteConversation, final ApiCallback<EMOneWayDeleteConversationResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = oneWayDeleteConversationValidateBeforeCall(username, emOneWayDeleteConversation, _callback);
        Type localVarReturnType = new TypeToken<EMOneWayDeleteConversationResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for recallMessage
     * @param emRecallMessage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call recallMessageCall(EMRecallMessage emRecallMessage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emRecallMessage;

        // create path and map variables
        String localVarPath = "/messages/msg_recall";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call recallMessageValidateBeforeCall(EMRecallMessage emRecallMessage, final ApiCallback _callback) throws ApiException {
        return recallMessageCall(emRecallMessage, _callback);

    }

    /**
     * 撤回消息
     * 发送方可以撤回一条发送成功的消息。默认情况下，发送方可撤回发出 2 分钟内的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_recall.html#%E6%92%A4%E5%9B%9E%E6%B6%88%E6%81%AF
     * @param emRecallMessage  (optional)
     * @return EMRecallMessageResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRecallMessageResult recallMessage(EMRecallMessage emRecallMessage) throws ApiException {
        ApiResponse<EMRecallMessageResult> localVarResp = recallMessageWithHttpInfo(emRecallMessage);
        return localVarResp.getData();
    }

    /**
     * 撤回消息
     * 发送方可以撤回一条发送成功的消息。默认情况下，发送方可撤回发出 2 分钟内的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_recall.html#%E6%92%A4%E5%9B%9E%E6%B6%88%E6%81%AF
     * @param emRecallMessage  (optional)
     * @return ApiResponse&lt;EMRecallMessageResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRecallMessageResult> recallMessageWithHttpInfo(EMRecallMessage emRecallMessage) throws ApiException {
        okhttp3.Call localVarCall = recallMessageValidateBeforeCall(emRecallMessage, null);
        Type localVarReturnType = new TypeToken<EMRecallMessageResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 撤回消息 (asynchronously)
     * 发送方可以撤回一条发送成功的消息。默认情况下，发送方可撤回发出 2 分钟内的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_recall.html#%E6%92%A4%E5%9B%9E%E6%B6%88%E6%81%AF
     * @param emRecallMessage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call recallMessageAsync(EMRecallMessage emRecallMessage, final ApiCallback<EMRecallMessageResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = recallMessageValidateBeforeCall(emRecallMessage, _callback);
        Type localVarReturnType = new TypeToken<EMRecallMessageResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sendMessagesToGroup
     * @param emCreateMessage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sendMessagesToGroupCall(EMCreateMessage emCreateMessage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCreateMessage;

        // create path and map variables
        String localVarPath = "/messages/chatgroups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sendMessagesToGroupValidateBeforeCall(EMCreateMessage emCreateMessage, final ApiCallback _callback) throws ApiException {
        return sendMessagesToGroupCall(emCreateMessage, _callback);

    }

    /**
     * 发送群聊消息
     * 向群组发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_group.html
     * @param emCreateMessage  (optional)
     * @return EMSendMessageResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMSendMessageResult sendMessagesToGroup(EMCreateMessage emCreateMessage) throws ApiException {
        ApiResponse<EMSendMessageResult> localVarResp = sendMessagesToGroupWithHttpInfo(emCreateMessage);
        return localVarResp.getData();
    }

    /**
     * 发送群聊消息
     * 向群组发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_group.html
     * @param emCreateMessage  (optional)
     * @return ApiResponse&lt;EMSendMessageResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMSendMessageResult> sendMessagesToGroupWithHttpInfo(EMCreateMessage emCreateMessage) throws ApiException {
        okhttp3.Call localVarCall = sendMessagesToGroupValidateBeforeCall(emCreateMessage, null);
        Type localVarReturnType = new TypeToken<EMSendMessageResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 发送群聊消息 (asynchronously)
     * 向群组发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_group.html
     * @param emCreateMessage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sendMessagesToGroupAsync(EMCreateMessage emCreateMessage, final ApiCallback<EMSendMessageResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = sendMessagesToGroupValidateBeforeCall(emCreateMessage, _callback);
        Type localVarReturnType = new TypeToken<EMSendMessageResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sendMessagesToRoom
     * @param emCreateMessage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sendMessagesToRoomCall(EMCreateMessage emCreateMessage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCreateMessage;

        // create path and map variables
        String localVarPath = "/messages/chatrooms";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sendMessagesToRoomValidateBeforeCall(EMCreateMessage emCreateMessage, final ApiCallback _callback) throws ApiException {
        return sendMessagesToRoomCall(emCreateMessage, _callback);

    }

    /**
     * 发送聊天室消息
     * 向群组发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_chatroom.html
     * @param emCreateMessage  (optional)
     * @return EMSendMessageResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMSendMessageResult sendMessagesToRoom(EMCreateMessage emCreateMessage) throws ApiException {
        ApiResponse<EMSendMessageResult> localVarResp = sendMessagesToRoomWithHttpInfo(emCreateMessage);
        return localVarResp.getData();
    }

    /**
     * 发送聊天室消息
     * 向群组发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_chatroom.html
     * @param emCreateMessage  (optional)
     * @return ApiResponse&lt;EMSendMessageResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMSendMessageResult> sendMessagesToRoomWithHttpInfo(EMCreateMessage emCreateMessage) throws ApiException {
        okhttp3.Call localVarCall = sendMessagesToRoomValidateBeforeCall(emCreateMessage, null);
        Type localVarReturnType = new TypeToken<EMSendMessageResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 发送聊天室消息 (asynchronously)
     * 向群组发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_chatroom.html
     * @param emCreateMessage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sendMessagesToRoomAsync(EMCreateMessage emCreateMessage, final ApiCallback<EMSendMessageResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = sendMessagesToRoomValidateBeforeCall(emCreateMessage, _callback);
        Type localVarReturnType = new TypeToken<EMSendMessageResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for sendMessagesToUser
     * @param emCreateMessage  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sendMessagesToUserCall(EMCreateMessage emCreateMessage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCreateMessage;

        // create path and map variables
        String localVarPath = "/messages/users";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sendMessagesToUserValidateBeforeCall(EMCreateMessage emCreateMessage, final ApiCallback _callback) throws ApiException {
        return sendMessagesToUserCall(emCreateMessage, _callback);

    }

    /**
     * 发送单聊消息
     * 给用户发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_single.html
     * @param emCreateMessage  (optional)
     * @return EMSendMessageResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMSendMessageResult sendMessagesToUser(EMCreateMessage emCreateMessage) throws ApiException {
        ApiResponse<EMSendMessageResult> localVarResp = sendMessagesToUserWithHttpInfo(emCreateMessage);
        return localVarResp.getData();
    }

    /**
     * 发送单聊消息
     * 给用户发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_single.html
     * @param emCreateMessage  (optional)
     * @return ApiResponse&lt;EMSendMessageResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMSendMessageResult> sendMessagesToUserWithHttpInfo(EMCreateMessage emCreateMessage) throws ApiException {
        okhttp3.Call localVarCall = sendMessagesToUserValidateBeforeCall(emCreateMessage, null);
        Type localVarReturnType = new TypeToken<EMSendMessageResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 发送单聊消息 (asynchronously)
     * 给用户发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/message_single.html
     * @param emCreateMessage  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sendMessagesToUserAsync(EMCreateMessage emCreateMessage, final ApiCallback<EMSendMessageResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = sendMessagesToUserValidateBeforeCall(emCreateMessage, _callback);
        Type localVarReturnType = new TypeToken<EMSendMessageResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
