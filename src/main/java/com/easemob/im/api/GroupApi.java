/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;
import com.easemob.im.ProgressRequestBody;
import com.easemob.im.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.easemob.im.api.model.EMAddGroupAdmin;
import com.easemob.im.api.model.EMAddGroupAdminResult;
import com.easemob.im.api.model.EMAddMultipleUserToGroup;
import com.easemob.im.api.model.EMAddMultipleUserToGroupBlockList;
import com.easemob.im.api.model.EMAddMultipleUserToGroupBlockListResult;
import com.easemob.im.api.model.EMAddMultipleUserToGroupResult;
import com.easemob.im.api.model.EMAddMultipleUserToGroupWhiteList;
import com.easemob.im.api.model.EMAddMultipleUserToGroupWhiteListResult;
import com.easemob.im.api.model.EMAddUserToGroupBlockListResult;
import com.easemob.im.api.model.EMAddUserToGroupResult;
import com.easemob.im.api.model.EMAddUserToGroupWhiteListResult;
import com.easemob.im.api.model.EMCheckUserJoinedGroupResult;
import com.easemob.im.api.model.EMCreateGroup;
import com.easemob.im.api.model.EMCreateGroupResult;
import com.easemob.im.api.model.EMDeleteGroupResult;
import com.easemob.im.api.model.EMDeleteGroupShareFileResult;
import com.easemob.im.api.model.EMDisableGroupResult;
import com.easemob.im.api.model.EMEnableGroupResult;
import com.easemob.im.api.model.EMGetAppGroupsResult;
import com.easemob.im.api.model.EMGetGroupAdminListResult;
import com.easemob.im.api.model.EMGetGroupAnnouncementResult;
import com.easemob.im.api.model.EMGetGroupBlockListResult;
import com.easemob.im.api.model.EMGetGroupInfoResult;
import com.easemob.im.api.model.EMGetGroupMemberListResult;
import com.easemob.im.api.model.EMGetGroupMuteListResult;
import com.easemob.im.api.model.EMGetGroupShareFileResult;
import com.easemob.im.api.model.EMGetGroupWhiteListResult;
import com.easemob.im.api.model.EMGetUserJoinedGroupsResult;
import com.easemob.im.api.model.EMModifyGroup;
import com.easemob.im.api.model.EMModifyGroupAnnouncement;
import com.easemob.im.api.model.EMModifyGroupAnnouncementResult;
import com.easemob.im.api.model.EMModifyGroupResult;
import com.easemob.im.api.model.EMMuteAllGroupMembersResult;
import com.easemob.im.api.model.EMMuteGroupMember;
import com.easemob.im.api.model.EMMuteGroupMemberResult;
import com.easemob.im.api.model.EMRemoveGroupAdminResult;
import com.easemob.im.api.model.EMRemoveUserFromGroupBlockListResult;
import com.easemob.im.api.model.EMRemoveUserFromGroupWhiteListResult;
import com.easemob.im.api.model.EMRemoveUserToGroupResult;
import com.easemob.im.api.model.EMUnmuteAllGroupMembersResult;
import com.easemob.im.api.model.EMUploadGroupShareFileResult;
import java.io.File;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GroupApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GroupApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GroupApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addGroupAdmin
     * @param groupId  (required)
     * @param emAddGroupAdmin  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addGroupAdminCall(String groupId, EMAddGroupAdmin emAddGroupAdmin, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddGroupAdmin;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/admin"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addGroupAdminValidateBeforeCall(String groupId, EMAddGroupAdmin emAddGroupAdmin, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addGroupAdmin(Async)");
        }

        return addGroupAdminCall(groupId, emAddGroupAdmin, _callback);

    }

    /**
     * 添加群管理员
     * 将一个普通群成员设为为群管理员。群管理员有管理黑名单、禁言等权限。最多可以添加 99 个群管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param groupId  (required)
     * @param emAddGroupAdmin  (optional)
     * @return EMAddGroupAdminResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddGroupAdminResult addGroupAdmin(String groupId, EMAddGroupAdmin emAddGroupAdmin) throws ApiException {
        ApiResponse<EMAddGroupAdminResult> localVarResp = addGroupAdminWithHttpInfo(groupId, emAddGroupAdmin);
        return localVarResp.getData();
    }

    /**
     * 添加群管理员
     * 将一个普通群成员设为为群管理员。群管理员有管理黑名单、禁言等权限。最多可以添加 99 个群管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param groupId  (required)
     * @param emAddGroupAdmin  (optional)
     * @return ApiResponse&lt;EMAddGroupAdminResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddGroupAdminResult> addGroupAdminWithHttpInfo(String groupId, EMAddGroupAdmin emAddGroupAdmin) throws ApiException {
        okhttp3.Call localVarCall = addGroupAdminValidateBeforeCall(groupId, emAddGroupAdmin, null);
        Type localVarReturnType = new TypeToken<EMAddGroupAdminResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加群管理员 (asynchronously)
     * 将一个普通群成员设为为群管理员。群管理员有管理黑名单、禁言等权限。最多可以添加 99 个群管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param groupId  (required)
     * @param emAddGroupAdmin  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addGroupAdminAsync(String groupId, EMAddGroupAdmin emAddGroupAdmin, final ApiCallback<EMAddGroupAdminResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addGroupAdminValidateBeforeCall(groupId, emAddGroupAdmin, _callback);
        Type localVarReturnType = new TypeToken<EMAddGroupAdminResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addMultipleUserToGroup
     * @param groupId  (required)
     * @param emAddMultipleUserToGroup  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToGroupCall(String groupId, EMAddMultipleUserToGroup emAddMultipleUserToGroup, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUserToGroup;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/users"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUserToGroupValidateBeforeCall(String groupId, EMAddMultipleUserToGroup emAddMultipleUserToGroup, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addMultipleUserToGroup(Async)");
        }

        return addMultipleUserToGroupCall(groupId, emAddMultipleUserToGroup, _callback);

    }

    /**
     * 批量添加群组成员
     * 一次为群组添加多个成员，每次最多可以添加 60 位成员。如果所有用户均已是群成员，添加失败，返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param emAddMultipleUserToGroup  (optional)
     * @return EMAddMultipleUserToGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddMultipleUserToGroupResult addMultipleUserToGroup(String groupId, EMAddMultipleUserToGroup emAddMultipleUserToGroup) throws ApiException {
        ApiResponse<EMAddMultipleUserToGroupResult> localVarResp = addMultipleUserToGroupWithHttpInfo(groupId, emAddMultipleUserToGroup);
        return localVarResp.getData();
    }

    /**
     * 批量添加群组成员
     * 一次为群组添加多个成员，每次最多可以添加 60 位成员。如果所有用户均已是群成员，添加失败，返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param emAddMultipleUserToGroup  (optional)
     * @return ApiResponse&lt;EMAddMultipleUserToGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddMultipleUserToGroupResult> addMultipleUserToGroupWithHttpInfo(String groupId, EMAddMultipleUserToGroup emAddMultipleUserToGroup) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUserToGroupValidateBeforeCall(groupId, emAddMultipleUserToGroup, null);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量添加群组成员 (asynchronously)
     * 一次为群组添加多个成员，每次最多可以添加 60 位成员。如果所有用户均已是群成员，添加失败，返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param emAddMultipleUserToGroup  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToGroupAsync(String groupId, EMAddMultipleUserToGroup emAddMultipleUserToGroup, final ApiCallback<EMAddMultipleUserToGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUserToGroupValidateBeforeCall(groupId, emAddMultipleUserToGroup, _callback);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addMultipleUserToGroupBlockList
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupBlockList  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToGroupBlockListCall(String groupId, EMAddMultipleUserToGroupBlockList emAddMultipleUserToGroupBlockList, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUserToGroupBlockList;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/blocks/users"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUserToGroupBlockListValidateBeforeCall(String groupId, EMAddMultipleUserToGroupBlockList emAddMultipleUserToGroupBlockList, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addMultipleUserToGroupBlockList(Async)");
        }

        return addMultipleUserToGroupBlockListCall(groupId, emAddMultipleUserToGroupBlockList, _callback);

    }

    /**
     * 批量添加用户至群组黑名单
     * 将多个用户添加至群组黑名单，一次最多可以添加 60 个用户。群主无法被加入群组的黑名单。用户进入群组黑名单后会收到加入黑名单的回调。黑名单上的用户无法查看该群组的信息，也收不到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupBlockList  (optional)
     * @return EMAddMultipleUserToGroupBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddMultipleUserToGroupBlockListResult addMultipleUserToGroupBlockList(String groupId, EMAddMultipleUserToGroupBlockList emAddMultipleUserToGroupBlockList) throws ApiException {
        ApiResponse<EMAddMultipleUserToGroupBlockListResult> localVarResp = addMultipleUserToGroupBlockListWithHttpInfo(groupId, emAddMultipleUserToGroupBlockList);
        return localVarResp.getData();
    }

    /**
     * 批量添加用户至群组黑名单
     * 将多个用户添加至群组黑名单，一次最多可以添加 60 个用户。群主无法被加入群组的黑名单。用户进入群组黑名单后会收到加入黑名单的回调。黑名单上的用户无法查看该群组的信息，也收不到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupBlockList  (optional)
     * @return ApiResponse&lt;EMAddMultipleUserToGroupBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddMultipleUserToGroupBlockListResult> addMultipleUserToGroupBlockListWithHttpInfo(String groupId, EMAddMultipleUserToGroupBlockList emAddMultipleUserToGroupBlockList) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUserToGroupBlockListValidateBeforeCall(groupId, emAddMultipleUserToGroupBlockList, null);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToGroupBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量添加用户至群组黑名单 (asynchronously)
     * 将多个用户添加至群组黑名单，一次最多可以添加 60 个用户。群主无法被加入群组的黑名单。用户进入群组黑名单后会收到加入黑名单的回调。黑名单上的用户无法查看该群组的信息，也收不到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupBlockList  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToGroupBlockListAsync(String groupId, EMAddMultipleUserToGroupBlockList emAddMultipleUserToGroupBlockList, final ApiCallback<EMAddMultipleUserToGroupBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUserToGroupBlockListValidateBeforeCall(groupId, emAddMultipleUserToGroupBlockList, _callback);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToGroupBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addMultipleUserToGroupWhiteList
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupWhiteList  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToGroupWhiteListCall(String groupId, EMAddMultipleUserToGroupWhiteList emAddMultipleUserToGroupWhiteList, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddMultipleUserToGroupWhiteList;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/white/users"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addMultipleUserToGroupWhiteListValidateBeforeCall(String groupId, EMAddMultipleUserToGroupWhiteList emAddMultipleUserToGroupWhiteList, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addMultipleUserToGroupWhiteList(Async)");
        }

        return addMultipleUserToGroupWhiteListCall(groupId, emAddMultipleUserToGroupWhiteList, _callback);

    }

    /**
     * 批量添加用户至群组白名单
     * 添加多个用户至群组白名单。你一次最多可添加 60 个用户。用户添加至白名单后在群组全员禁言时仍可以在群组中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupWhiteList  (optional)
     * @return EMAddMultipleUserToGroupWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddMultipleUserToGroupWhiteListResult addMultipleUserToGroupWhiteList(String groupId, EMAddMultipleUserToGroupWhiteList emAddMultipleUserToGroupWhiteList) throws ApiException {
        ApiResponse<EMAddMultipleUserToGroupWhiteListResult> localVarResp = addMultipleUserToGroupWhiteListWithHttpInfo(groupId, emAddMultipleUserToGroupWhiteList);
        return localVarResp.getData();
    }

    /**
     * 批量添加用户至群组白名单
     * 添加多个用户至群组白名单。你一次最多可添加 60 个用户。用户添加至白名单后在群组全员禁言时仍可以在群组中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupWhiteList  (optional)
     * @return ApiResponse&lt;EMAddMultipleUserToGroupWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddMultipleUserToGroupWhiteListResult> addMultipleUserToGroupWhiteListWithHttpInfo(String groupId, EMAddMultipleUserToGroupWhiteList emAddMultipleUserToGroupWhiteList) throws ApiException {
        okhttp3.Call localVarCall = addMultipleUserToGroupWhiteListValidateBeforeCall(groupId, emAddMultipleUserToGroupWhiteList, null);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToGroupWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量添加用户至群组白名单 (asynchronously)
     * 添加多个用户至群组白名单。你一次最多可添加 60 个用户。用户添加至白名单后在群组全员禁言时仍可以在群组中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param emAddMultipleUserToGroupWhiteList  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addMultipleUserToGroupWhiteListAsync(String groupId, EMAddMultipleUserToGroupWhiteList emAddMultipleUserToGroupWhiteList, final ApiCallback<EMAddMultipleUserToGroupWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addMultipleUserToGroupWhiteListValidateBeforeCall(groupId, emAddMultipleUserToGroupWhiteList, _callback);
        Type localVarReturnType = new TypeToken<EMAddMultipleUserToGroupWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addUserToGroup
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToGroupCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/users/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToGroupValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addUserToGroup(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling addUserToGroup(Async)");
        }

        return addUserToGroupCall(groupId, username, _callback);

    }

    /**
     * 添加单个群组成员
     * 每次添加一个群成员。若添加的用户已是群成员，则添加失败，返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @return EMAddUserToGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToGroupResult addUserToGroup(String groupId, String username) throws ApiException {
        ApiResponse<EMAddUserToGroupResult> localVarResp = addUserToGroupWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 添加单个群组成员
     * 每次添加一个群成员。若添加的用户已是群成员，则添加失败，返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMAddUserToGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToGroupResult> addUserToGroupWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = addUserToGroupValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMAddUserToGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加单个群组成员 (asynchronously)
     * 每次添加一个群成员。若添加的用户已是群成员，则添加失败，返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToGroupAsync(String groupId, String username, final ApiCallback<EMAddUserToGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToGroupValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addUserToGroupBlockList
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToGroupBlockListCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/blocks/users/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToGroupBlockListValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addUserToGroupBlockList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling addUserToGroupBlockList(Async)");
        }

        return addUserToGroupBlockListCall(groupId, username, _callback);

    }

    /**
     * 添加单个用户至群组黑名单
     * 将单个用户添加至群组黑名单。群主无法被加入群组的黑名单。用户进入群组黑名单后会收到加入黑名单的回调。之后，该用户无法查看该群组的信息，也收不到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param username  (required)
     * @return EMAddUserToGroupBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToGroupBlockListResult addUserToGroupBlockList(String groupId, String username) throws ApiException {
        ApiResponse<EMAddUserToGroupBlockListResult> localVarResp = addUserToGroupBlockListWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 添加单个用户至群组黑名单
     * 将单个用户添加至群组黑名单。群主无法被加入群组的黑名单。用户进入群组黑名单后会收到加入黑名单的回调。之后，该用户无法查看该群组的信息，也收不到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMAddUserToGroupBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToGroupBlockListResult> addUserToGroupBlockListWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = addUserToGroupBlockListValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMAddUserToGroupBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加单个用户至群组黑名单 (asynchronously)
     * 将单个用户添加至群组黑名单。群主无法被加入群组的黑名单。用户进入群组黑名单后会收到加入黑名单的回调。之后，该用户无法查看该群组的信息，也收不到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToGroupBlockListAsync(String groupId, String username, final ApiCallback<EMAddUserToGroupBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToGroupBlockListValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToGroupBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addUserToGroupWhiteList
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToGroupWhiteListCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/white/users/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToGroupWhiteListValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling addUserToGroupWhiteList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling addUserToGroupWhiteList(Async)");
        }

        return addUserToGroupWhiteListCall(groupId, username, _callback);

    }

    /**
     * 添加单个用户至群组白名单
     * 将指定的单个用户添加至群组白名单。用户添加至群组白名单后，当群组全员被禁言时，仍可以在群组中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param username  (required)
     * @return EMAddUserToGroupWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToGroupWhiteListResult addUserToGroupWhiteList(String groupId, String username) throws ApiException {
        ApiResponse<EMAddUserToGroupWhiteListResult> localVarResp = addUserToGroupWhiteListWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 添加单个用户至群组白名单
     * 将指定的单个用户添加至群组白名单。用户添加至群组白名单后，当群组全员被禁言时，仍可以在群组中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMAddUserToGroupWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToGroupWhiteListResult> addUserToGroupWhiteListWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = addUserToGroupWhiteListValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMAddUserToGroupWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加单个用户至群组白名单 (asynchronously)
     * 将指定的单个用户添加至群组白名单。用户添加至群组白名单后，当群组全员被禁言时，仍可以在群组中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToGroupWhiteListAsync(String groupId, String username, final ApiCallback<EMAddUserToGroupWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToGroupWhiteListValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToGroupWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for checkUserJoinedGroup
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call checkUserJoinedGroupCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/user/{username}/is_joined"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call checkUserJoinedGroupValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling checkUserJoinedGroup(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling checkUserJoinedGroup(Async)");
        }

        return checkUserJoinedGroupCall(groupId, username, _callback);

    }

    /**
     * 查看指定用户是否已加入群组
     * 查看单个用户是否已加入了指定的群组。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E5%B7%B2%E5%8A%A0%E5%85%A5%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @param username  (required)
     * @return EMCheckUserJoinedGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMCheckUserJoinedGroupResult checkUserJoinedGroup(String groupId, String username) throws ApiException {
        ApiResponse<EMCheckUserJoinedGroupResult> localVarResp = checkUserJoinedGroupWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 查看指定用户是否已加入群组
     * 查看单个用户是否已加入了指定的群组。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E5%B7%B2%E5%8A%A0%E5%85%A5%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMCheckUserJoinedGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMCheckUserJoinedGroupResult> checkUserJoinedGroupWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = checkUserJoinedGroupValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMCheckUserJoinedGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 查看指定用户是否已加入群组 (asynchronously)
     * 查看单个用户是否已加入了指定的群组。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E5%B7%B2%E5%8A%A0%E5%85%A5%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call checkUserJoinedGroupAsync(String groupId, String username, final ApiCallback<EMCheckUserJoinedGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = checkUserJoinedGroupValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMCheckUserJoinedGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createGroup
     * @param emCreateGroup  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createGroupCall(EMCreateGroup emCreateGroup, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCreateGroup;

        // create path and map variables
        String localVarPath = "/chatgroups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createGroupValidateBeforeCall(EMCreateGroup emCreateGroup, final ApiCallback _callback) throws ApiException {
        return createGroupCall(emCreateGroup, _callback);

    }

    /**
     * 创建群组
     * 创建一个群组，并设置群组名称、群组描述、公开群/私有群属性、群成员最大人数（包括群主）、加入公开群是否需要批准、群主、群成员和群组扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%9B%E5%BB%BA%E7%BE%A4%E7%BB%84
     * @param emCreateGroup  (optional)
     * @return EMCreateGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMCreateGroupResult createGroup(EMCreateGroup emCreateGroup) throws ApiException {
        ApiResponse<EMCreateGroupResult> localVarResp = createGroupWithHttpInfo(emCreateGroup);
        return localVarResp.getData();
    }

    /**
     * 创建群组
     * 创建一个群组，并设置群组名称、群组描述、公开群/私有群属性、群成员最大人数（包括群主）、加入公开群是否需要批准、群主、群成员和群组扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%9B%E5%BB%BA%E7%BE%A4%E7%BB%84
     * @param emCreateGroup  (optional)
     * @return ApiResponse&lt;EMCreateGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMCreateGroupResult> createGroupWithHttpInfo(EMCreateGroup emCreateGroup) throws ApiException {
        okhttp3.Call localVarCall = createGroupValidateBeforeCall(emCreateGroup, null);
        Type localVarReturnType = new TypeToken<EMCreateGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 创建群组 (asynchronously)
     * 创建一个群组，并设置群组名称、群组描述、公开群/私有群属性、群成员最大人数（包括群主）、加入公开群是否需要批准、群主、群成员和群组扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%9B%E5%BB%BA%E7%BE%A4%E7%BB%84
     * @param emCreateGroup  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createGroupAsync(EMCreateGroup emCreateGroup, final ApiCallback<EMCreateGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = createGroupValidateBeforeCall(emCreateGroup, _callback);
        Type localVarReturnType = new TypeToken<EMCreateGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteGroup
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteGroupCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteGroupValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling deleteGroup(Async)");
        }

        return deleteGroupCall(groupId, _callback);

    }

    /**
     * 删除群组
     * 删除指定的群组。删除群组时会同时删除群组下所有的子区（Thread）。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @return EMDeleteGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDeleteGroupResult deleteGroup(String groupId) throws ApiException {
        ApiResponse<EMDeleteGroupResult> localVarResp = deleteGroupWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 删除群组
     * 删除指定的群组。删除群组时会同时删除群组下所有的子区（Thread）。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @return ApiResponse&lt;EMDeleteGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDeleteGroupResult> deleteGroupWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = deleteGroupValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMDeleteGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除群组 (asynchronously)
     * 删除指定的群组。删除群组时会同时删除群组下所有的子区（Thread）。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteGroupAsync(String groupId, final ApiCallback<EMDeleteGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteGroupValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteGroupShareFile
     * @param groupId  (required)
     * @param fileId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteGroupShareFileCall(String groupId, String fileId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/share_files/{file_id}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "file_id" + "}", localVarApiClient.escapeString(fileId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteGroupShareFileValidateBeforeCall(String groupId, String fileId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling deleteGroupShareFile(Async)");
        }

        // verify the required parameter 'fileId' is set
        if (fileId == null) {
            throw new ApiException("Missing the required parameter 'fileId' when calling deleteGroupShareFile(Async)");
        }

        return deleteGroupShareFileCall(groupId, fileId, _callback);

    }

    /**
     * 删除群组共享文件
     * 根据指定的群组 ID 与 文件 ID（file_id）删除群组共享文件，文件 ID 可从 获取群组共享文件 接口的响应中获取。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param fileId  (required)
     * @return EMDeleteGroupShareFileResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDeleteGroupShareFileResult deleteGroupShareFile(String groupId, String fileId) throws ApiException {
        ApiResponse<EMDeleteGroupShareFileResult> localVarResp = deleteGroupShareFileWithHttpInfo(groupId, fileId);
        return localVarResp.getData();
    }

    /**
     * 删除群组共享文件
     * 根据指定的群组 ID 与 文件 ID（file_id）删除群组共享文件，文件 ID 可从 获取群组共享文件 接口的响应中获取。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param fileId  (required)
     * @return ApiResponse&lt;EMDeleteGroupShareFileResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDeleteGroupShareFileResult> deleteGroupShareFileWithHttpInfo(String groupId, String fileId) throws ApiException {
        okhttp3.Call localVarCall = deleteGroupShareFileValidateBeforeCall(groupId, fileId, null);
        Type localVarReturnType = new TypeToken<EMDeleteGroupShareFileResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除群组共享文件 (asynchronously)
     * 根据指定的群组 ID 与 文件 ID（file_id）删除群组共享文件，文件 ID 可从 获取群组共享文件 接口的响应中获取。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%88%A0%E9%99%A4%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param fileId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteGroupShareFileAsync(String groupId, String fileId, final ApiCallback<EMDeleteGroupShareFileResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteGroupShareFileValidateBeforeCall(groupId, fileId, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteGroupShareFileResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for disableGroup
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call disableGroupCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/disable"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call disableGroupValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling disableGroup(Async)");
        }

        return disableGroupCall(groupId, _callback);

    }

    /**
     * 封禁群组
     * 封禁指定的群组。例如，群成员经常在群中发送违规消息，可以调用该 API 对该群进行封禁。群组被封禁后，群中任何成员均无法在群组以及该群组下的子区中发送和接收消息，也无法进行群组和子区管理操作。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%B0%81%E7%A6%81%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @return EMDisableGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDisableGroupResult disableGroup(String groupId) throws ApiException {
        ApiResponse<EMDisableGroupResult> localVarResp = disableGroupWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 封禁群组
     * 封禁指定的群组。例如，群成员经常在群中发送违规消息，可以调用该 API 对该群进行封禁。群组被封禁后，群中任何成员均无法在群组以及该群组下的子区中发送和接收消息，也无法进行群组和子区管理操作。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%B0%81%E7%A6%81%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @return ApiResponse&lt;EMDisableGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDisableGroupResult> disableGroupWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = disableGroupValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMDisableGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 封禁群组 (asynchronously)
     * 封禁指定的群组。例如，群成员经常在群中发送违规消息，可以调用该 API 对该群进行封禁。群组被封禁后，群中任何成员均无法在群组以及该群组下的子区中发送和接收消息，也无法进行群组和子区管理操作。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E5%B0%81%E7%A6%81%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call disableGroupAsync(String groupId, final ApiCallback<EMDisableGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = disableGroupValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMDisableGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for downloadGroupShareFile
     * @param groupId  (required)
     * @param fileId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call downloadGroupShareFileCall(String groupId, String fileId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/share_files/{file_id}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "file_id" + "}", localVarApiClient.escapeString(fileId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/octet-stream"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call downloadGroupShareFileValidateBeforeCall(String groupId, String fileId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling downloadGroupShareFile(Async)");
        }

        // verify the required parameter 'fileId' is set
        if (fileId == null) {
            throw new ApiException("Missing the required parameter 'fileId' when calling downloadGroupShareFile(Async)");
        }

        return downloadGroupShareFileCall(groupId, fileId, _callback);

    }

    /**
     * 下载群组共享文件
     * 根据指定的群组 ID 与文件 ID（file_id）下载群组共享文件，文件 ID 可从 获取群组共享文件 接口的响应中获取。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%B8%8B%E8%BD%BD%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param fileId  (required)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public File downloadGroupShareFile(String groupId, String fileId) throws ApiException {
        ApiResponse<File> localVarResp = downloadGroupShareFileWithHttpInfo(groupId, fileId);
        return localVarResp.getData();
    }

    /**
     * 下载群组共享文件
     * 根据指定的群组 ID 与文件 ID（file_id）下载群组共享文件，文件 ID 可从 获取群组共享文件 接口的响应中获取。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%B8%8B%E8%BD%BD%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param fileId  (required)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> downloadGroupShareFileWithHttpInfo(String groupId, String fileId) throws ApiException {
        okhttp3.Call localVarCall = downloadGroupShareFileValidateBeforeCall(groupId, fileId, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 下载群组共享文件 (asynchronously)
     * 根据指定的群组 ID 与文件 ID（file_id）下载群组共享文件，文件 ID 可从 获取群组共享文件 接口的响应中获取。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%B8%8B%E8%BD%BD%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param fileId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call downloadGroupShareFileAsync(String groupId, String fileId, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = downloadGroupShareFileValidateBeforeCall(groupId, fileId, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for enableGroup
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call enableGroupCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/enable"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call enableGroupValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling enableGroup(Async)");
        }

        return enableGroupCall(groupId, _callback);

    }

    /**
     * 封禁群组
     * 解除对指定群组的封禁。群组解禁后，群成员可以在该群组以及该群组下的子区中发送和接收消息并进行群组和子区管理相关操作。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%A7%A3%E7%A6%81%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @return EMEnableGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMEnableGroupResult enableGroup(String groupId) throws ApiException {
        ApiResponse<EMEnableGroupResult> localVarResp = enableGroupWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 封禁群组
     * 解除对指定群组的封禁。群组解禁后，群成员可以在该群组以及该群组下的子区中发送和接收消息并进行群组和子区管理相关操作。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%A7%A3%E7%A6%81%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @return ApiResponse&lt;EMEnableGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMEnableGroupResult> enableGroupWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = enableGroupValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMEnableGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 封禁群组 (asynchronously)
     * 解除对指定群组的封禁。群组解禁后，群成员可以在该群组以及该群组下的子区中发送和接收消息并进行群组和子区管理相关操作。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%A7%A3%E7%A6%81%E7%BE%A4%E7%BB%84
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call enableGroupAsync(String groupId, final ApiCallback<EMEnableGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = enableGroupValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMEnableGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAppGroups
     * @param limit 每次期望返回的群组数量。取值范围为 [1,1000]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAppGroupsCall(Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAppGroupsValidateBeforeCall(Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        return getAppGroupsCall(limit, cursor, _callback);

    }

    /**
     * 获取 App 中的群组
     * 分页获取应用下的群组的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E7%BE%A4%E7%BB%84
     * @param limit 每次期望返回的群组数量。取值范围为 [1,1000]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @return EMGetAppGroupsResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetAppGroupsResult getAppGroups(Integer limit, String cursor) throws ApiException {
        ApiResponse<EMGetAppGroupsResult> localVarResp = getAppGroupsWithHttpInfo(limit, cursor);
        return localVarResp.getData();
    }

    /**
     * 获取 App 中的群组
     * 分页获取应用下的群组的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E7%BE%A4%E7%BB%84
     * @param limit 每次期望返回的群组数量。取值范围为 [1,1000]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @return ApiResponse&lt;EMGetAppGroupsResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetAppGroupsResult> getAppGroupsWithHttpInfo(Integer limit, String cursor) throws ApiException {
        okhttp3.Call localVarCall = getAppGroupsValidateBeforeCall(limit, cursor, null);
        Type localVarReturnType = new TypeToken<EMGetAppGroupsResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取 App 中的群组 (asynchronously)
     * 分页获取应用下的群组的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E7%BE%A4%E7%BB%84
     * @param limit 每次期望返回的群组数量。取值范围为 [1,1000]，默认值为 10 (optional)
     * @param cursor 数据查询的起始位置 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAppGroupsAsync(Integer limit, String cursor, final ApiCallback<EMGetAppGroupsResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAppGroupsValidateBeforeCall(limit, cursor, _callback);
        Type localVarReturnType = new TypeToken<EMGetAppGroupsResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupAdminList
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupAdminListCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/admin"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupAdminListValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupAdminList(Async)");
        }

        return getGroupAdminListCall(groupId, _callback);

    }

    /**
     * 获取群管理员列表
     * 获取群组管理员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param groupId  (required)
     * @return EMGetGroupAdminListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupAdminListResult getGroupAdminList(String groupId) throws ApiException {
        ApiResponse<EMGetGroupAdminListResult> localVarResp = getGroupAdminListWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 获取群管理员列表
     * 获取群组管理员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param groupId  (required)
     * @return ApiResponse&lt;EMGetGroupAdminListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupAdminListResult> getGroupAdminListWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = getGroupAdminListValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMGetGroupAdminListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取群管理员列表 (asynchronously)
     * 获取群组管理员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupAdminListAsync(String groupId, final ApiCallback<EMGetGroupAdminListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupAdminListValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupAdminListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupAnnouncement
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupAnnouncementCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/announcement"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupAnnouncementValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupAnnouncement(Async)");
        }

        return getGroupAnnouncementCall(groupId, _callback);

    }

    /**
     * 获取群组公告
     * 获取指定群组 ID 的群组公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E5%85%AC%E5%91%8A
     * @param groupId  (required)
     * @return EMGetGroupAnnouncementResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupAnnouncementResult getGroupAnnouncement(String groupId) throws ApiException {
        ApiResponse<EMGetGroupAnnouncementResult> localVarResp = getGroupAnnouncementWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 获取群组公告
     * 获取指定群组 ID 的群组公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E5%85%AC%E5%91%8A
     * @param groupId  (required)
     * @return ApiResponse&lt;EMGetGroupAnnouncementResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupAnnouncementResult> getGroupAnnouncementWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = getGroupAnnouncementValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMGetGroupAnnouncementResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取群组公告 (asynchronously)
     * 获取指定群组 ID 的群组公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E5%85%AC%E5%91%8A
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupAnnouncementAsync(String groupId, final ApiCallback<EMGetGroupAnnouncementResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupAnnouncementValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupAnnouncementResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupBlockList
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupBlockListCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/blocks/users"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupBlockListValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupBlockList(Async)");
        }

        return getGroupBlockListCall(groupId, _callback);

    }

    /**
     * 查询群组黑名单
     * 查询一个群组黑名单中的用户列表。黑名单中的用户无法查看该群组的信息，也无法收到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @return EMGetGroupBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupBlockListResult getGroupBlockList(String groupId) throws ApiException {
        ApiResponse<EMGetGroupBlockListResult> localVarResp = getGroupBlockListWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 查询群组黑名单
     * 查询一个群组黑名单中的用户列表。黑名单中的用户无法查看该群组的信息，也无法收到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @return ApiResponse&lt;EMGetGroupBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupBlockListResult> getGroupBlockListWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = getGroupBlockListValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMGetGroupBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 查询群组黑名单 (asynchronously)
     * 查询一个群组黑名单中的用户列表。黑名单中的用户无法查看该群组的信息，也无法收到该群组的消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupBlockListAsync(String groupId, final ApiCallback<EMGetGroupBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupBlockListValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupInfo
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupInfoCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupInfoValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupInfo(Async)");
        }

        return getGroupInfoCall(groupId, _callback);

    }

    /**
     * 获取群组详情
     * 可以获取一个或多个群组的详情，最多可获取 100 个群组的详情。当获取多个群组的详情时，返回所有存在的群组的详情；对于不存在的群组，返回 “group id doesn’t exist”。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E8%AF%A6%E6%83%85
     * @param groupId  (required)
     * @return EMGetGroupInfoResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupInfoResult getGroupInfo(String groupId) throws ApiException {
        ApiResponse<EMGetGroupInfoResult> localVarResp = getGroupInfoWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 获取群组详情
     * 可以获取一个或多个群组的详情，最多可获取 100 个群组的详情。当获取多个群组的详情时，返回所有存在的群组的详情；对于不存在的群组，返回 “group id doesn’t exist”。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E8%AF%A6%E6%83%85
     * @param groupId  (required)
     * @return ApiResponse&lt;EMGetGroupInfoResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupInfoResult> getGroupInfoWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = getGroupInfoValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMGetGroupInfoResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取群组详情 (asynchronously)
     * 可以获取一个或多个群组的详情，最多可获取 100 个群组的详情。当获取多个群组的详情时，返回所有存在的群组的详情；对于不存在的群组，返回 “group id doesn’t exist”。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E8%AF%A6%E6%83%85
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupInfoAsync(String groupId, final ApiCallback<EMGetGroupInfoResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupInfoValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupInfoResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupMemberList
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的群成员数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupMemberListCall(String groupId, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/users"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagenum", pagenum));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupMemberListValidateBeforeCall(String groupId, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupMemberList(Async)");
        }

        return getGroupMemberListCall(groupId, pagenum, pagesize, _callback);

    }

    /**
     * 分页获取群成员列表
     * 可以分页获取群组成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%AE%A1%E7%90%86%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的群成员数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @return EMGetGroupMemberListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupMemberListResult getGroupMemberList(String groupId, Integer pagenum, Integer pagesize) throws ApiException {
        ApiResponse<EMGetGroupMemberListResult> localVarResp = getGroupMemberListWithHttpInfo(groupId, pagenum, pagesize);
        return localVarResp.getData();
    }

    /**
     * 分页获取群成员列表
     * 可以分页获取群组成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%AE%A1%E7%90%86%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的群成员数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @return ApiResponse&lt;EMGetGroupMemberListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupMemberListResult> getGroupMemberListWithHttpInfo(String groupId, Integer pagenum, Integer pagesize) throws ApiException {
        okhttp3.Call localVarCall = getGroupMemberListValidateBeforeCall(groupId, pagenum, pagesize, null);
        Type localVarReturnType = new TypeToken<EMGetGroupMemberListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 分页获取群成员列表 (asynchronously)
     * 可以分页获取群组成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%AE%A1%E7%90%86%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的群成员数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupMemberListAsync(String groupId, Integer pagenum, Integer pagesize, final ApiCallback<EMGetGroupMemberListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupMemberListValidateBeforeCall(groupId, pagenum, pagesize, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupMemberListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupMuteList
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupMuteListCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/mute"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupMuteListValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupMuteList(Async)");
        }

        return getGroupMuteListCall(groupId, _callback);

    }

    /**
     * 获取禁言列表
     * 获取当前群组的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     * @param groupId  (required)
     * @return EMGetGroupMuteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupMuteListResult getGroupMuteList(String groupId) throws ApiException {
        ApiResponse<EMGetGroupMuteListResult> localVarResp = getGroupMuteListWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 获取禁言列表
     * 获取当前群组的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     * @param groupId  (required)
     * @return ApiResponse&lt;EMGetGroupMuteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupMuteListResult> getGroupMuteListWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = getGroupMuteListValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMGetGroupMuteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取禁言列表 (asynchronously)
     * 获取当前群组的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupMuteListAsync(String groupId, final ApiCallback<EMGetGroupMuteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupMuteListValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupMuteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupShareFile
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的共享文件数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupShareFileCall(String groupId, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/share_files"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagenum", pagenum));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupShareFileValidateBeforeCall(String groupId, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupShareFile(Async)");
        }

        return getGroupShareFileCall(groupId, pagenum, pagesize, _callback);

    }

    /**
     * 获取群组共享文件
     * 可以分页获取指定群组 ID 的群组共享文件。获取文件后，你可以根据响应中返回的文件 ID（file_id）调用 下载群组共享文件 接口下载文件，或调用 删除群组共享文件 接口删除文件。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的共享文件数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @return EMGetGroupShareFileResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupShareFileResult getGroupShareFile(String groupId, Integer pagenum, Integer pagesize) throws ApiException {
        ApiResponse<EMGetGroupShareFileResult> localVarResp = getGroupShareFileWithHttpInfo(groupId, pagenum, pagesize);
        return localVarResp.getData();
    }

    /**
     * 获取群组共享文件
     * 可以分页获取指定群组 ID 的群组共享文件。获取文件后，你可以根据响应中返回的文件 ID（file_id）调用 下载群组共享文件 接口下载文件，或调用 删除群组共享文件 接口删除文件。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的共享文件数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @return ApiResponse&lt;EMGetGroupShareFileResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupShareFileResult> getGroupShareFileWithHttpInfo(String groupId, Integer pagenum, Integer pagesize) throws ApiException {
        okhttp3.Call localVarCall = getGroupShareFileValidateBeforeCall(groupId, pagenum, pagesize, null);
        Type localVarReturnType = new TypeToken<EMGetGroupShareFileResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取群组共享文件 (asynchronously)
     * 可以分页获取指定群组 ID 的群组共享文件。获取文件后，你可以根据响应中返回的文件 ID（file_id）调用 下载群组共享文件 接口下载文件，或调用 删除群组共享文件 接口删除文件。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param pagenum 当前页码。默认从第 1 页开始获取 (optional)
     * @param pagesize 每页期望返回的共享文件数。取值范围为 [1,1000]，默认为 1000 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupShareFileAsync(String groupId, Integer pagenum, Integer pagesize, final ApiCallback<EMGetGroupShareFileResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupShareFileValidateBeforeCall(groupId, pagenum, pagesize, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupShareFileResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupWhiteList
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupWhiteListCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/white/users"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupWhiteListValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupWhiteList(Async)");
        }

        return getGroupWhiteListCall(groupId, _callback);

    }

    /**
     * 查询群组白名单
     * 查询群组白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @return EMGetGroupWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetGroupWhiteListResult getGroupWhiteList(String groupId) throws ApiException {
        ApiResponse<EMGetGroupWhiteListResult> localVarResp = getGroupWhiteListWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 查询群组白名单
     * 查询群组白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @return ApiResponse&lt;EMGetGroupWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetGroupWhiteListResult> getGroupWhiteListWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = getGroupWhiteListValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMGetGroupWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 查询群组白名单 (asynchronously)
     * 查询群组白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%9F%A5%E8%AF%A2%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGroupWhiteListAsync(String groupId, final ApiCallback<EMGetGroupWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupWhiteListValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserJoinedGroups
     * @param username  (required)
     * @param pagenum 当前页码。默认从第 0 页开始获取 (optional)
     * @param pagesize 每页获取的群组数量。取值范围为 [1,20]，默认值为 5 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedGroupsCall(String username, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/user/{username}"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagenum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagenum", pagenum));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserJoinedGroupsValidateBeforeCall(String username, Integer pagenum, Integer pagesize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getUserJoinedGroups(Async)");
        }

        return getUserJoinedGroupsCall(username, pagenum, pagesize, _callback);

    }

    /**
     * 获取单个用户加入的所有群组
     * 根据用户 ID 分页获取指定用户加入的所有群组。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E7%BE%A4%E7%BB%84
     * @param username  (required)
     * @param pagenum 当前页码。默认从第 0 页开始获取 (optional)
     * @param pagesize 每页获取的群组数量。取值范围为 [1,20]，默认值为 5 (optional)
     * @return EMGetUserJoinedGroupsResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetUserJoinedGroupsResult getUserJoinedGroups(String username, Integer pagenum, Integer pagesize) throws ApiException {
        ApiResponse<EMGetUserJoinedGroupsResult> localVarResp = getUserJoinedGroupsWithHttpInfo(username, pagenum, pagesize);
        return localVarResp.getData();
    }

    /**
     * 获取单个用户加入的所有群组
     * 根据用户 ID 分页获取指定用户加入的所有群组。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E7%BE%A4%E7%BB%84
     * @param username  (required)
     * @param pagenum 当前页码。默认从第 0 页开始获取 (optional)
     * @param pagesize 每页获取的群组数量。取值范围为 [1,20]，默认值为 5 (optional)
     * @return ApiResponse&lt;EMGetUserJoinedGroupsResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetUserJoinedGroupsResult> getUserJoinedGroupsWithHttpInfo(String username, Integer pagenum, Integer pagesize) throws ApiException {
        okhttp3.Call localVarCall = getUserJoinedGroupsValidateBeforeCall(username, pagenum, pagesize, null);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedGroupsResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个用户加入的所有群组 (asynchronously)
     * 根据用户 ID 分页获取指定用户加入的所有群组。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E6%89%80%E6%9C%89%E7%BE%A4%E7%BB%84
     * @param username  (required)
     * @param pagenum 当前页码。默认从第 0 页开始获取 (optional)
     * @param pagesize 每页获取的群组数量。取值范围为 [1,20]，默认值为 5 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserJoinedGroupsAsync(String username, Integer pagenum, Integer pagesize, final ApiCallback<EMGetUserJoinedGroupsResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserJoinedGroupsValidateBeforeCall(username, pagenum, pagesize, _callback);
        Type localVarReturnType = new TypeToken<EMGetUserJoinedGroupsResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modifyGroup
     * @param groupId  (required)
     * @param emModifyGroup  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyGroupCall(String groupId, EMModifyGroup emModifyGroup, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emModifyGroup;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyGroupValidateBeforeCall(String groupId, EMModifyGroup emModifyGroup, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling modifyGroup(Async)");
        }

        return modifyGroupCall(groupId, emModifyGroup, _callback);

    }

    /**
     * 修改群组信息
     * 修改指定的群组信息，可修改 groupname、description、maxusers、membersonly、allowinvites、invite_need_confirm、public 和 custom 属性。也可以转让群组，如果转让群组，请在请求body中只设置 newowner 即可，newowner 为群组新所有者的用户 ID。如果传入其他字段，或传入的字段不存在，则不能修改的字段会抛出异常。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E7%BE%A4%E7%BB%84%E4%BF%A1%E6%81%AF 和 
     * @param groupId  (required)
     * @param emModifyGroup  (optional)
     * @return EMModifyGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMModifyGroupResult modifyGroup(String groupId, EMModifyGroup emModifyGroup) throws ApiException {
        ApiResponse<EMModifyGroupResult> localVarResp = modifyGroupWithHttpInfo(groupId, emModifyGroup);
        return localVarResp.getData();
    }

    /**
     * 修改群组信息
     * 修改指定的群组信息，可修改 groupname、description、maxusers、membersonly、allowinvites、invite_need_confirm、public 和 custom 属性。也可以转让群组，如果转让群组，请在请求body中只设置 newowner 即可，newowner 为群组新所有者的用户 ID。如果传入其他字段，或传入的字段不存在，则不能修改的字段会抛出异常。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E7%BE%A4%E7%BB%84%E4%BF%A1%E6%81%AF 和 
     * @param groupId  (required)
     * @param emModifyGroup  (optional)
     * @return ApiResponse&lt;EMModifyGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMModifyGroupResult> modifyGroupWithHttpInfo(String groupId, EMModifyGroup emModifyGroup) throws ApiException {
        okhttp3.Call localVarCall = modifyGroupValidateBeforeCall(groupId, emModifyGroup, null);
        Type localVarReturnType = new TypeToken<EMModifyGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 修改群组信息 (asynchronously)
     * 修改指定的群组信息，可修改 groupname、description、maxusers、membersonly、allowinvites、invite_need_confirm、public 和 custom 属性。也可以转让群组，如果转让群组，请在请求body中只设置 newowner 即可，newowner 为群组新所有者的用户 ID。如果传入其他字段，或传入的字段不存在，则不能修改的字段会抛出异常。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E7%BE%A4%E7%BB%84%E4%BF%A1%E6%81%AF 和 
     * @param groupId  (required)
     * @param emModifyGroup  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyGroupAsync(String groupId, EMModifyGroup emModifyGroup, final ApiCallback<EMModifyGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyGroupValidateBeforeCall(groupId, emModifyGroup, _callback);
        Type localVarReturnType = new TypeToken<EMModifyGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modifyGroupAnnouncement
     * @param groupId  (required)
     * @param emModifyGroupAnnouncement  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyGroupAnnouncementCall(String groupId, EMModifyGroupAnnouncement emModifyGroupAnnouncement, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emModifyGroupAnnouncement;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/announcement"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyGroupAnnouncementValidateBeforeCall(String groupId, EMModifyGroupAnnouncement emModifyGroupAnnouncement, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling modifyGroupAnnouncement(Async)");
        }

        return modifyGroupAnnouncementCall(groupId, emModifyGroupAnnouncement, _callback);

    }

    /**
     * 修改群组公告
     * 修改指定群组 ID 的群组公告。群组公告不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E7%BE%A4%E7%BB%84%E5%85%AC%E5%91%8A
     * @param groupId  (required)
     * @param emModifyGroupAnnouncement  (optional)
     * @return EMModifyGroupAnnouncementResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMModifyGroupAnnouncementResult modifyGroupAnnouncement(String groupId, EMModifyGroupAnnouncement emModifyGroupAnnouncement) throws ApiException {
        ApiResponse<EMModifyGroupAnnouncementResult> localVarResp = modifyGroupAnnouncementWithHttpInfo(groupId, emModifyGroupAnnouncement);
        return localVarResp.getData();
    }

    /**
     * 修改群组公告
     * 修改指定群组 ID 的群组公告。群组公告不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E7%BE%A4%E7%BB%84%E5%85%AC%E5%91%8A
     * @param groupId  (required)
     * @param emModifyGroupAnnouncement  (optional)
     * @return ApiResponse&lt;EMModifyGroupAnnouncementResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMModifyGroupAnnouncementResult> modifyGroupAnnouncementWithHttpInfo(String groupId, EMModifyGroupAnnouncement emModifyGroupAnnouncement) throws ApiException {
        okhttp3.Call localVarCall = modifyGroupAnnouncementValidateBeforeCall(groupId, emModifyGroupAnnouncement, null);
        Type localVarReturnType = new TypeToken<EMModifyGroupAnnouncementResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 修改群组公告 (asynchronously)
     * 修改指定群组 ID 的群组公告。群组公告不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BF%AE%E6%94%B9%E7%BE%A4%E7%BB%84%E5%85%AC%E5%91%8A
     * @param groupId  (required)
     * @param emModifyGroupAnnouncement  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyGroupAnnouncementAsync(String groupId, EMModifyGroupAnnouncement emModifyGroupAnnouncement, final ApiCallback<EMModifyGroupAnnouncementResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyGroupAnnouncementValidateBeforeCall(groupId, emModifyGroupAnnouncement, _callback);
        Type localVarReturnType = new TypeToken<EMModifyGroupAnnouncementResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for muteAllGroupMembers
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteAllGroupMembersCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/ban"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call muteAllGroupMembersValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling muteAllGroupMembers(Async)");
        }

        return muteAllGroupMembersCall(groupId, _callback);

    }

    /**
     * 禁言全体群成员
     * 对所有群组成员一键禁言，即将群组的所有成员加入禁言列表。设置群组全员禁言后，仅群组白名单中的用户可在群组以及该群组下的子区内发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A6%81%E8%A8%80%E5%85%A8%E4%BD%93%E7%BE%A4%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @return EMMuteAllGroupMembersResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMMuteAllGroupMembersResult muteAllGroupMembers(String groupId) throws ApiException {
        ApiResponse<EMMuteAllGroupMembersResult> localVarResp = muteAllGroupMembersWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 禁言全体群成员
     * 对所有群组成员一键禁言，即将群组的所有成员加入禁言列表。设置群组全员禁言后，仅群组白名单中的用户可在群组以及该群组下的子区内发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A6%81%E8%A8%80%E5%85%A8%E4%BD%93%E7%BE%A4%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @return ApiResponse&lt;EMMuteAllGroupMembersResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMMuteAllGroupMembersResult> muteAllGroupMembersWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = muteAllGroupMembersValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMMuteAllGroupMembersResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 禁言全体群成员 (asynchronously)
     * 对所有群组成员一键禁言，即将群组的所有成员加入禁言列表。设置群组全员禁言后，仅群组白名单中的用户可在群组以及该群组下的子区内发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A6%81%E8%A8%80%E5%85%A8%E4%BD%93%E7%BE%A4%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteAllGroupMembersAsync(String groupId, final ApiCallback<EMMuteAllGroupMembersResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = muteAllGroupMembersValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMMuteAllGroupMembersResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for muteGroupMember
     * @param groupId  (required)
     * @param emMuteGroupMember  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteGroupMemberCall(String groupId, EMMuteGroupMember emMuteGroupMember, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emMuteGroupMember;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/mute"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call muteGroupMemberValidateBeforeCall(String groupId, EMMuteGroupMember emMuteGroupMember, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling muteGroupMember(Async)");
        }

        return muteGroupMemberCall(groupId, emMuteGroupMember, _callback);

    }

    /**
     * 禁言指定群成员
     * 对一个或多个群成员禁言。你一次最多可禁言 60 个群组成员。群成员被禁言后，将无法在群组中发送消息，也无法在该群组下的子区中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A6%81%E8%A8%80%E6%8C%87%E5%AE%9A%E7%BE%A4%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param emMuteGroupMember  (optional)
     * @return EMMuteGroupMemberResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMMuteGroupMemberResult muteGroupMember(String groupId, EMMuteGroupMember emMuteGroupMember) throws ApiException {
        ApiResponse<EMMuteGroupMemberResult> localVarResp = muteGroupMemberWithHttpInfo(groupId, emMuteGroupMember);
        return localVarResp.getData();
    }

    /**
     * 禁言指定群成员
     * 对一个或多个群成员禁言。你一次最多可禁言 60 个群组成员。群成员被禁言后，将无法在群组中发送消息，也无法在该群组下的子区中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A6%81%E8%A8%80%E6%8C%87%E5%AE%9A%E7%BE%A4%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param emMuteGroupMember  (optional)
     * @return ApiResponse&lt;EMMuteGroupMemberResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMMuteGroupMemberResult> muteGroupMemberWithHttpInfo(String groupId, EMMuteGroupMember emMuteGroupMember) throws ApiException {
        okhttp3.Call localVarCall = muteGroupMemberValidateBeforeCall(groupId, emMuteGroupMember, null);
        Type localVarReturnType = new TypeToken<EMMuteGroupMemberResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 禁言指定群成员 (asynchronously)
     * 对一个或多个群成员禁言。你一次最多可禁言 60 个群组成员。群成员被禁言后，将无法在群组中发送消息，也无法在该群组下的子区中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A6%81%E8%A8%80%E6%8C%87%E5%AE%9A%E7%BE%A4%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param emMuteGroupMember  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call muteGroupMemberAsync(String groupId, EMMuteGroupMember emMuteGroupMember, final ApiCallback<EMMuteGroupMemberResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = muteGroupMemberValidateBeforeCall(groupId, emMuteGroupMember, _callback);
        Type localVarReturnType = new TypeToken<EMMuteGroupMemberResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeGroupAdmin
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeGroupAdminCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/admin/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeGroupAdminValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling removeGroupAdmin(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeGroupAdmin(Async)");
        }

        return removeGroupAdminCall(groupId, username, _callback);

    }

    /**
     * 移除群管理员
     * 将用户的角色从群管理员降为群普通成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A7%BB%E9%99%A4%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @return EMRemoveGroupAdminResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveGroupAdminResult removeGroupAdmin(String groupId, String username) throws ApiException {
        ApiResponse<EMRemoveGroupAdminResult> localVarResp = removeGroupAdminWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 移除群管理员
     * 将用户的角色从群管理员降为群普通成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A7%BB%E9%99%A4%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveGroupAdminResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveGroupAdminResult> removeGroupAdminWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeGroupAdminValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveGroupAdminResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 移除群管理员 (asynchronously)
     * 将用户的角色从群管理员降为群普通成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A7%BB%E9%99%A4%E7%BE%A4%E7%AE%A1%E7%90%86%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeGroupAdminAsync(String groupId, String username, final ApiCallback<EMRemoveGroupAdminResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeGroupAdminValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveGroupAdminResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserFromGroupBlockList
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromGroupBlockListCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/blocks/users/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserFromGroupBlockListValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling removeUserFromGroupBlockList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeUserFromGroupBlockList(Async)");
        }

        return removeUserFromGroupBlockListCall(groupId, username, _callback);

    }

    /**
     * 从群组黑名单移除单个用户
     * 将指定用户移出群组黑名单。对于群组黑名单中的用户，如果需要将其再次加入群组，需要先将其从群组黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BB%8E%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     * @param groupId  (required)
     * @param username  (required)
     * @return EMRemoveUserFromGroupBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserFromGroupBlockListResult removeUserFromGroupBlockList(String groupId, String username) throws ApiException {
        ApiResponse<EMRemoveUserFromGroupBlockListResult> localVarResp = removeUserFromGroupBlockListWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 从群组黑名单移除单个用户
     * 将指定用户移出群组黑名单。对于群组黑名单中的用户，如果需要将其再次加入群组，需要先将其从群组黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BB%8E%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveUserFromGroupBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserFromGroupBlockListResult> removeUserFromGroupBlockListWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeUserFromGroupBlockListValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromGroupBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 从群组黑名单移除单个用户 (asynchronously)
     * 将指定用户移出群组黑名单。对于群组黑名单中的用户，如果需要将其再次加入群组，需要先将其从群组黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BB%8E%E7%BE%A4%E7%BB%84%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromGroupBlockListAsync(String groupId, String username, final ApiCallback<EMRemoveUserFromGroupBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserFromGroupBlockListValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromGroupBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserFromGroupWhiteList
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromGroupWhiteListCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/white/users/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserFromGroupWhiteListValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling removeUserFromGroupWhiteList(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeUserFromGroupWhiteList(Async)");
        }

        return removeUserFromGroupWhiteListCall(groupId, username, _callback);

    }

    /**
     * 从群组白名单移除用户
     * 将指定用户从群组白名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BB%8E%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95%E7%A7%BB%E9%99%A4%E7%94%A8%E6%88%B7
     * @param groupId  (required)
     * @param username  (required)
     * @return EMRemoveUserFromGroupWhiteListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserFromGroupWhiteListResult removeUserFromGroupWhiteList(String groupId, String username) throws ApiException {
        ApiResponse<EMRemoveUserFromGroupWhiteListResult> localVarResp = removeUserFromGroupWhiteListWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 从群组白名单移除用户
     * 将指定用户从群组白名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BB%8E%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95%E7%A7%BB%E9%99%A4%E7%94%A8%E6%88%B7
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveUserFromGroupWhiteListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserFromGroupWhiteListResult> removeUserFromGroupWhiteListWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeUserFromGroupWhiteListValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromGroupWhiteListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 从群组白名单移除用户 (asynchronously)
     * 将指定用户从群组白名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%BB%8E%E7%BE%A4%E7%BB%84%E7%99%BD%E5%90%8D%E5%8D%95%E7%A7%BB%E9%99%A4%E7%94%A8%E6%88%B7
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromGroupWhiteListAsync(String groupId, String username, final ApiCallback<EMRemoveUserFromGroupWhiteListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserFromGroupWhiteListValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromGroupWhiteListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserToGroup
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserToGroupCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/users/{username}"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserToGroupValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling removeUserToGroup(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling removeUserToGroup(Async)");
        }

        return removeUserToGroupCall(groupId, username, _callback);

    }

    /**
     * 移除单个群组成员
     * 从群中移除指定成员。如果被移除用户不是群成员，将移除失败，并返回错误。移除后，该成员也会被移除其在该群组中加入的子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @return EMRemoveUserToGroupResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserToGroupResult removeUserToGroup(String groupId, String username) throws ApiException {
        ApiResponse<EMRemoveUserToGroupResult> localVarResp = removeUserToGroupWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 移除单个群组成员
     * 从群中移除指定成员。如果被移除用户不是群成员，将移除失败，并返回错误。移除后，该成员也会被移除其在该群组中加入的子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMRemoveUserToGroupResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserToGroupResult> removeUserToGroupWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = removeUserToGroupValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserToGroupResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 移除单个群组成员 (asynchronously)
     * 从群中移除指定成员。如果被移除用户不是群成员，将移除失败，并返回错误。移除后，该成员也会被移除其在该群组中加入的子区。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E6%88%90%E5%91%98
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserToGroupAsync(String groupId, String username, final ApiCallback<EMRemoveUserToGroupResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserToGroupValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserToGroupResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for unmuteAllGroupMembers
     * @param groupId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unmuteAllGroupMembersCall(String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/ban"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call unmuteAllGroupMembersValidateBeforeCall(String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling unmuteAllGroupMembers(Async)");
        }

        return unmuteAllGroupMembersCall(groupId, _callback);

    }

    /**
     * 解除全员禁言
     * 一键取消对群组全体成员的禁言。解除禁言后，群成员可以在群组和该群组下的子区中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%A7%A3%E9%99%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     * @param groupId  (required)
     * @return EMUnmuteAllGroupMembersResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMUnmuteAllGroupMembersResult unmuteAllGroupMembers(String groupId) throws ApiException {
        ApiResponse<EMUnmuteAllGroupMembersResult> localVarResp = unmuteAllGroupMembersWithHttpInfo(groupId);
        return localVarResp.getData();
    }

    /**
     * 解除全员禁言
     * 一键取消对群组全体成员的禁言。解除禁言后，群成员可以在群组和该群组下的子区中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%A7%A3%E9%99%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     * @param groupId  (required)
     * @return ApiResponse&lt;EMUnmuteAllGroupMembersResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMUnmuteAllGroupMembersResult> unmuteAllGroupMembersWithHttpInfo(String groupId) throws ApiException {
        okhttp3.Call localVarCall = unmuteAllGroupMembersValidateBeforeCall(groupId, null);
        Type localVarReturnType = new TypeToken<EMUnmuteAllGroupMembersResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 解除全员禁言 (asynchronously)
     * 一键取消对群组全体成员的禁言。解除禁言后，群成员可以在群组和该群组下的子区中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%A7%A3%E9%99%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     * @param groupId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call unmuteAllGroupMembersAsync(String groupId, final ApiCallback<EMUnmuteAllGroupMembersResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = unmuteAllGroupMembersValidateBeforeCall(groupId, _callback);
        Type localVarReturnType = new TypeToken<EMUnmuteAllGroupMembersResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for uploadGroupShareFile
     * @param groupId  (required)
     * @param _file 文件本地路径 (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call uploadGroupShareFileCall(String groupId, File _file, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/chatgroups/{group_id}/share_files"
            .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (_file != null) {
            localVarFormParams.put("file", _file);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "multipart/form-data"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call uploadGroupShareFileValidateBeforeCall(String groupId, File _file, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling uploadGroupShareFile(Async)");
        }

        // verify the required parameter '_file' is set
        if (_file == null) {
            throw new ApiException("Missing the required parameter '_file' when calling uploadGroupShareFile(Async)");
        }

        return uploadGroupShareFileCall(groupId, _file, _callback);

    }

    /**
     * 上传群组共享文件
     * 上传指定群组 ID 的群组共享文件。注意上传的文件大小不能超过 10 MB。分页获取指定群组 ID 的群组共享文件，然后可以根据响应中返回的文件 ID（file_id）调用 下载群组共享文件 接口下载该文件，或调用 删除群组共享文件 接口删除该文件。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%B8%8A%E4%BC%A0%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param _file 文件本地路径 (required)
     * @return EMUploadGroupShareFileResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMUploadGroupShareFileResult uploadGroupShareFile(String groupId, File _file) throws ApiException {
        ApiResponse<EMUploadGroupShareFileResult> localVarResp = uploadGroupShareFileWithHttpInfo(groupId, _file);
        return localVarResp.getData();
    }

    /**
     * 上传群组共享文件
     * 上传指定群组 ID 的群组共享文件。注意上传的文件大小不能超过 10 MB。分页获取指定群组 ID 的群组共享文件，然后可以根据响应中返回的文件 ID（file_id）调用 下载群组共享文件 接口下载该文件，或调用 删除群组共享文件 接口删除该文件。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%B8%8A%E4%BC%A0%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param _file 文件本地路径 (required)
     * @return ApiResponse&lt;EMUploadGroupShareFileResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMUploadGroupShareFileResult> uploadGroupShareFileWithHttpInfo(String groupId, File _file) throws ApiException {
        okhttp3.Call localVarCall = uploadGroupShareFileValidateBeforeCall(groupId, _file, null);
        Type localVarReturnType = new TypeToken<EMUploadGroupShareFileResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 上传群组共享文件 (asynchronously)
     * 上传指定群组 ID 的群组共享文件。注意上传的文件大小不能超过 10 MB。分页获取指定群组 ID 的群组共享文件，然后可以根据响应中返回的文件 ID（file_id）调用 下载群组共享文件 接口下载该文件，或调用 删除群组共享文件 接口删除该文件。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E4%B8%8A%E4%BC%A0%E7%BE%A4%E7%BB%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6
     * @param groupId  (required)
     * @param _file 文件本地路径 (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call uploadGroupShareFileAsync(String groupId, File _file, final ApiCallback<EMUploadGroupShareFileResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = uploadGroupShareFileValidateBeforeCall(groupId, _file, _callback);
        Type localVarReturnType = new TypeToken<EMUploadGroupShareFileResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
