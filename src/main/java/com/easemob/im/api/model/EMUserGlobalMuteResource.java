/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.easemob.im.JSON;

/**
 * EMUserGlobalMuteResource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-25T14:51:53.998371+08:00[Asia/Shanghai]")
public class EMUserGlobalMuteResource {
  public static final String SERIALIZED_NAME_USERID = "userid";
  @SerializedName(SERIALIZED_NAME_USERID)
  private String userid;

  public static final String SERIALIZED_NAME_CHAT = "chat";
  @SerializedName(SERIALIZED_NAME_CHAT)
  private Integer chat;

  public static final String SERIALIZED_NAME_GROUPCHAT = "groupchat";
  @SerializedName(SERIALIZED_NAME_GROUPCHAT)
  private Integer groupchat;

  public static final String SERIALIZED_NAME_CHATROOM = "chatroom";
  @SerializedName(SERIALIZED_NAME_CHATROOM)
  private Integer chatroom;

  public static final String SERIALIZED_NAME_UNIXTIME = "unixtime";
  @SerializedName(SERIALIZED_NAME_UNIXTIME)
  private Integer unixtime;

  public EMUserGlobalMuteResource() {
  }

  public EMUserGlobalMuteResource userid(String userid) {
    
    this.userid = userid;
    return this;
  }

   /**
   * 设置禁言的用户 ID
   * @return userid
  **/
  @javax.annotation.Nullable
  public String getUserid() {
    return userid;
  }


  public void setUserid(String userid) {
    this.userid = userid;
  }


  public EMUserGlobalMuteResource chat(Integer chat) {
    
    this.chat = chat;
    return this;
  }

   /**
   * 单聊剩余禁言时间，单位为秒。最大值为 2147483647。 - &gt; 0：该用户 ID 剩余的单聊禁言时长。 - 0：该用户的单聊消息禁言已取消。 - -1：该用户被设置永久单聊消息禁言。
   * @return chat
  **/
  @javax.annotation.Nullable
  public Integer getChat() {
    return chat;
  }


  public void setChat(Integer chat) {
    this.chat = chat;
  }


  public EMUserGlobalMuteResource groupchat(Integer groupchat) {
    
    this.groupchat = groupchat;
    return this;
  }

   /**
   * 群组消息剩余禁言时长，单位为秒，规则同单聊禁言
   * @return groupchat
  **/
  @javax.annotation.Nullable
  public Integer getGroupchat() {
    return groupchat;
  }


  public void setGroupchat(Integer groupchat) {
    this.groupchat = groupchat;
  }


  public EMUserGlobalMuteResource chatroom(Integer chatroom) {
    
    this.chatroom = chatroom;
    return this;
  }

   /**
   * 聊天室消息剩余禁言时长，单位为秒，规则同单聊禁言
   * @return chatroom
  **/
  @javax.annotation.Nullable
  public Integer getChatroom() {
    return chatroom;
  }


  public void setChatroom(Integer chatroom) {
    this.chatroom = chatroom;
  }


  public EMUserGlobalMuteResource unixtime(Integer unixtime) {
    
    this.unixtime = unixtime;
    return this;
  }

   /**
   * 当前操作的 Unix 时间戳
   * @return unixtime
  **/
  @javax.annotation.Nullable
  public Integer getUnixtime() {
    return unixtime;
  }


  public void setUnixtime(Integer unixtime) {
    this.unixtime = unixtime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EMUserGlobalMuteResource userGlobalMuteResource = (EMUserGlobalMuteResource) o;
    return Objects.equals(this.userid, userGlobalMuteResource.userid) &&
        Objects.equals(this.chat, userGlobalMuteResource.chat) &&
        Objects.equals(this.groupchat, userGlobalMuteResource.groupchat) &&
        Objects.equals(this.chatroom, userGlobalMuteResource.chatroom) &&
        Objects.equals(this.unixtime, userGlobalMuteResource.unixtime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userid, chat, groupchat, chatroom, unixtime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EMUserGlobalMuteResource {\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    chat: ").append(toIndentedString(chat)).append("\n");
    sb.append("    groupchat: ").append(toIndentedString(groupchat)).append("\n");
    sb.append("    chatroom: ").append(toIndentedString(chatroom)).append("\n");
    sb.append("    unixtime: ").append(toIndentedString(unixtime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userid");
    openapiFields.add("chat");
    openapiFields.add("groupchat");
    openapiFields.add("chatroom");
    openapiFields.add("unixtime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EMUserGlobalMuteResource
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EMUserGlobalMuteResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EMUserGlobalMuteResource is not found in the empty JSON string", EMUserGlobalMuteResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EMUserGlobalMuteResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EMUserGlobalMuteResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("userid") != null && !jsonObj.get("userid").isJsonNull()) && !jsonObj.get("userid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EMUserGlobalMuteResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EMUserGlobalMuteResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EMUserGlobalMuteResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EMUserGlobalMuteResource.class));

       return (TypeAdapter<T>) new TypeAdapter<EMUserGlobalMuteResource>() {
           @Override
           public void write(JsonWriter out, EMUserGlobalMuteResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EMUserGlobalMuteResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EMUserGlobalMuteResource given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EMUserGlobalMuteResource
  * @throws IOException if the JSON string is invalid with respect to EMUserGlobalMuteResource
  */
  public static EMUserGlobalMuteResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EMUserGlobalMuteResource.class);
  }

 /**
  * Convert an instance of EMUserGlobalMuteResource to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

