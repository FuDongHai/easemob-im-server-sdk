/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.easemob.im.JSON;

/**
 * EMSetRoomCustomAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-24T18:15:02.198321+08:00[Asia/Shanghai]")
public class EMSetRoomCustomAttributes {
    public static final String SERIALIZED_NAME_META_DATA = "metaData";
    @SerializedName(SERIALIZED_NAME_META_DATA)
    private Object metaData;

    public static final String SERIALIZED_NAME_AUTO_DELETE = "autoDelete";
    @SerializedName(SERIALIZED_NAME_AUTO_DELETE)
    private String autoDelete;

    public EMSetRoomCustomAttributes() {
    }

    public EMSetRoomCustomAttributes metaData(Object metaData) {

        this.metaData = metaData;
        return this;
    }

    /**
     * 聊天室的自定义属性，存储为键值对（key-value）集合，即 Map&lt;String,String&gt;。该集合中最多可包含 10 个键值对，在每个键值对中，key 为属性名称，最多可包含 128 个字符；value 为属性值，不能超过 4096 个字符。每个聊天室最多可有 100 个自定义属性，每个应用的聊天室自定义属性总大小为 10 GB。 key 支持以下字符集： - 26 个小写英文字母 a-z； - 26 个大写英文字母 A-Z； - 10 个数字 0-9； - “_”, “-”, “.”
     * @return metaData
     **/
    @javax.annotation.Nullable
    public Object getMetaData() {
        return metaData;
    }


    public void setMetaData(Object metaData) {
        this.metaData = metaData;
    }


    public EMSetRoomCustomAttributes autoDelete(String autoDelete) {

        this.autoDelete = autoDelete;
        return this;
    }

    /**
     * 当前成员退出聊天室时是否自动删除该自定义属性。 -（默认）&#39;DELETE&#39;：是； - &#39;NO_DELETE&#39;：否
     * @return autoDelete
     **/
    @javax.annotation.Nullable
    public String getAutoDelete() {
        return autoDelete;
    }


    public void setAutoDelete(String autoDelete) {
        this.autoDelete = autoDelete;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EMSetRoomCustomAttributes setRoomCustomAttributes = (EMSetRoomCustomAttributes) o;
        return Objects.equals(this.metaData, setRoomCustomAttributes.metaData) &&
                Objects.equals(this.autoDelete, setRoomCustomAttributes.autoDelete);
    }

    @Override
    public int hashCode() {
        return Objects.hash(metaData, autoDelete);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EMSetRoomCustomAttributes {\n");
        sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
        sb.append("    autoDelete: ").append(toIndentedString(autoDelete)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("metaData");
        openapiFields.add("autoDelete");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to EMSetRoomCustomAttributes
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!EMSetRoomCustomAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in EMSetRoomCustomAttributes is not found in the empty JSON string", EMSetRoomCustomAttributes.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!EMSetRoomCustomAttributes.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EMSetRoomCustomAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("autoDelete") != null && !jsonObj.get("autoDelete").isJsonNull()) && !jsonObj.get("autoDelete").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `autoDelete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoDelete").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!EMSetRoomCustomAttributes.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'EMSetRoomCustomAttributes' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<EMSetRoomCustomAttributes> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(EMSetRoomCustomAttributes.class));

            return (TypeAdapter<T>) new TypeAdapter<EMSetRoomCustomAttributes>() {
                @Override
                public void write(JsonWriter out, EMSetRoomCustomAttributes value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public EMSetRoomCustomAttributes read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of EMSetRoomCustomAttributes given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of EMSetRoomCustomAttributes
     * @throws IOException if the JSON string is invalid with respect to EMSetRoomCustomAttributes
     */
    public static EMSetRoomCustomAttributes fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, EMSetRoomCustomAttributes.class);
    }

    /**
     * Convert an instance of EMSetRoomCustomAttributes to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

