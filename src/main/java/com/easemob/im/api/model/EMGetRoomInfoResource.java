/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.easemob.im.JSON;

/**
 * EMGetRoomInfoResource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-25T14:51:53.998371+08:00[Asia/Shanghai]")
public class EMGetRoomInfoResource {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MEMBERSONLY = "membersonly";
  @SerializedName(SERIALIZED_NAME_MEMBERSONLY)
  private Boolean membersonly;

  public static final String SERIALIZED_NAME_ALLOWINVITES = "allowinvites";
  @SerializedName(SERIALIZED_NAME_ALLOWINVITES)
  private Boolean allowinvites;

  public static final String SERIALIZED_NAME_MAXUSERS = "maxusers";
  @SerializedName(SERIALIZED_NAME_MAXUSERS)
  private Integer maxusers;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private BigDecimal created;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private String custom;

  public static final String SERIALIZED_NAME_MUTE = "mute";
  @SerializedName(SERIALIZED_NAME_MUTE)
  private Boolean mute;

  public static final String SERIALIZED_NAME_AFFILIATIONS_COUNT = "affiliations_count";
  @SerializedName(SERIALIZED_NAME_AFFILIATIONS_COUNT)
  private Integer affiliationsCount;

  public static final String SERIALIZED_NAME_AFFILIATIONS = "affiliations";
  @SerializedName(SERIALIZED_NAME_AFFILIATIONS)
  private List<Object> affiliations;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  private Boolean _public;

  public EMGetRoomInfoResource() {
  }

  public EMGetRoomInfoResource id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 聊天室 ID，聊天室唯一标识
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EMGetRoomInfoResource name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 聊天室名称
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public EMGetRoomInfoResource description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * 聊天室描述
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public EMGetRoomInfoResource membersonly(Boolean membersonly) {
    
    this.membersonly = membersonly;
    return this;
  }

   /**
   * 加入聊天室是否需要群主或者群管理员审批： - true：是。 - false：否
   * @return membersonly
  **/
  @javax.annotation.Nullable
  public Boolean getMembersonly() {
    return membersonly;
  }


  public void setMembersonly(Boolean membersonly) {
    this.membersonly = membersonly;
  }


  public EMGetRoomInfoResource allowinvites(Boolean allowinvites) {
    
    this.allowinvites = allowinvites;
    return this;
  }

   /**
   * 是否允许聊天室成员邀请其他用户加入该聊天室： - true：允许聊天室成员邀请他人加入该聊天室。 - false：仅聊天室所有者和管理员可邀请他人加入该聊天室
   * @return allowinvites
  **/
  @javax.annotation.Nullable
  public Boolean getAllowinvites() {
    return allowinvites;
  }


  public void setAllowinvites(Boolean allowinvites) {
    this.allowinvites = allowinvites;
  }


  public EMGetRoomInfoResource maxusers(Integer maxusers) {
    
    this.maxusers = maxusers;
    return this;
  }

   /**
   * 聊天室成员数上限，创建聊天室时设置
   * @return maxusers
  **/
  @javax.annotation.Nullable
  public Integer getMaxusers() {
    return maxusers;
  }


  public void setMaxusers(Integer maxusers) {
    this.maxusers = maxusers;
  }


  public EMGetRoomInfoResource owner(String owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * 聊天室所有者的用户 ID
   * @return owner
  **/
  @javax.annotation.Nullable
  public String getOwner() {
    return owner;
  }


  public void setOwner(String owner) {
    this.owner = owner;
  }


  public EMGetRoomInfoResource created(BigDecimal created) {
    
    this.created = created;
    return this;
  }

   /**
   * 创建聊天室时间，Unix 时间戳，单位为毫秒
   * @return created
  **/
  @javax.annotation.Nullable
  public BigDecimal getCreated() {
    return created;
  }


  public void setCreated(BigDecimal created) {
    this.created = created;
  }


  public EMGetRoomInfoResource custom(String custom) {
    
    this.custom = custom;
    return this;
  }

   /**
   * 聊天室扩展信息
   * @return custom
  **/
  @javax.annotation.Nullable
  public String getCustom() {
    return custom;
  }


  public void setCustom(String custom) {
    this.custom = custom;
  }


  public EMGetRoomInfoResource mute(Boolean mute) {
    
    this.mute = mute;
    return this;
  }

   /**
   * 聊天室是否禁言
   * @return mute
  **/
  @javax.annotation.Nullable
  public Boolean getMute() {
    return mute;
  }


  public void setMute(Boolean mute) {
    this.mute = mute;
  }


  public EMGetRoomInfoResource affiliationsCount(Integer affiliationsCount) {
    
    this.affiliationsCount = affiliationsCount;
    return this;
  }

   /**
   * 现有聊天室成员总数
   * @return affiliationsCount
  **/
  @javax.annotation.Nullable
  public Integer getAffiliationsCount() {
    return affiliationsCount;
  }


  public void setAffiliationsCount(Integer affiliationsCount) {
    this.affiliationsCount = affiliationsCount;
  }


  public EMGetRoomInfoResource affiliations(List<Object> affiliations) {
    
    this.affiliations = affiliations;
    return this;
  }

  public EMGetRoomInfoResource addAffiliationsItem(Object affiliationsItem) {
    if (this.affiliations == null) {
      this.affiliations = new ArrayList<>();
    }
    this.affiliations.add(affiliationsItem);
    return this;
  }

   /**
   * 现有聊天室成员列表，包含聊天室所有者和成员（包括聊天室管理员）
   * @return affiliations
  **/
  @javax.annotation.Nullable
  public List<Object> getAffiliations() {
    return affiliations;
  }


  public void setAffiliations(List<Object> affiliations) {
    this.affiliations = affiliations;
  }


  public EMGetRoomInfoResource disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * 聊天室是否封禁
   * @return disabled
  **/
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public EMGetRoomInfoResource _public(Boolean _public) {
    
    this._public = _public;
    return this;
  }

   /**
   * 预留字段，无需关注
   * @return _public
  **/
  @javax.annotation.Nullable
  public Boolean getPublic() {
    return _public;
  }


  public void setPublic(Boolean _public) {
    this._public = _public;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EMGetRoomInfoResource getRoomInfoResource = (EMGetRoomInfoResource) o;
    return Objects.equals(this.id, getRoomInfoResource.id) &&
        Objects.equals(this.name, getRoomInfoResource.name) &&
        Objects.equals(this.description, getRoomInfoResource.description) &&
        Objects.equals(this.membersonly, getRoomInfoResource.membersonly) &&
        Objects.equals(this.allowinvites, getRoomInfoResource.allowinvites) &&
        Objects.equals(this.maxusers, getRoomInfoResource.maxusers) &&
        Objects.equals(this.owner, getRoomInfoResource.owner) &&
        Objects.equals(this.created, getRoomInfoResource.created) &&
        Objects.equals(this.custom, getRoomInfoResource.custom) &&
        Objects.equals(this.mute, getRoomInfoResource.mute) &&
        Objects.equals(this.affiliationsCount, getRoomInfoResource.affiliationsCount) &&
        Objects.equals(this.affiliations, getRoomInfoResource.affiliations) &&
        Objects.equals(this.disabled, getRoomInfoResource.disabled) &&
        Objects.equals(this._public, getRoomInfoResource._public);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, membersonly, allowinvites, maxusers, owner, created, custom, mute, affiliationsCount, affiliations, disabled, _public);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EMGetRoomInfoResource {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    membersonly: ").append(toIndentedString(membersonly)).append("\n");
    sb.append("    allowinvites: ").append(toIndentedString(allowinvites)).append("\n");
    sb.append("    maxusers: ").append(toIndentedString(maxusers)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    mute: ").append(toIndentedString(mute)).append("\n");
    sb.append("    affiliationsCount: ").append(toIndentedString(affiliationsCount)).append("\n");
    sb.append("    affiliations: ").append(toIndentedString(affiliations)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("membersonly");
    openapiFields.add("allowinvites");
    openapiFields.add("maxusers");
    openapiFields.add("owner");
    openapiFields.add("created");
    openapiFields.add("custom");
    openapiFields.add("mute");
    openapiFields.add("affiliations_count");
    openapiFields.add("affiliations");
    openapiFields.add("disabled");
    openapiFields.add("public");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EMGetRoomInfoResource
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EMGetRoomInfoResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EMGetRoomInfoResource is not found in the empty JSON string", EMGetRoomInfoResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EMGetRoomInfoResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EMGetRoomInfoResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) && !jsonObj.get("owner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner").toString()));
      }
      if ((jsonObj.get("custom") != null && !jsonObj.get("custom").isJsonNull()) && !jsonObj.get("custom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("affiliations") != null && !jsonObj.get("affiliations").isJsonNull() && !jsonObj.get("affiliations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliations` to be an array in the JSON string but got `%s`", jsonObj.get("affiliations").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EMGetRoomInfoResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EMGetRoomInfoResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EMGetRoomInfoResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EMGetRoomInfoResource.class));

       return (TypeAdapter<T>) new TypeAdapter<EMGetRoomInfoResource>() {
           @Override
           public void write(JsonWriter out, EMGetRoomInfoResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EMGetRoomInfoResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EMGetRoomInfoResource given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EMGetRoomInfoResource
  * @throws IOException if the JSON string is invalid with respect to EMGetRoomInfoResource
  */
  public static EMGetRoomInfoResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EMGetRoomInfoResource.class);
  }

 /**
  * Convert an instance of EMGetRoomInfoResource to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

