/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;
import com.easemob.im.ProgressRequestBody;
import com.easemob.im.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.easemob.im.api.model.EMAddUserToBlockList;
import com.easemob.im.api.model.EMAddUserToBlockListResult;
import com.easemob.im.api.model.EMGetBlockListResult;
import com.easemob.im.api.model.EMRemoveUserFromBlockListResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BlockApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BlockApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BlockApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addUserToBlockList
     * @param ownerUsername  (required)
     * @param emAddUserToBlockList  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToBlockListCall(String ownerUsername, EMAddUserToBlockList emAddUserToBlockList, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emAddUserToBlockList;

        // create path and map variables
        String localVarPath = "/users/{owner_username}/blocks/users"
            .replace("{" + "owner_username" + "}", localVarApiClient.escapeString(ownerUsername.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addUserToBlockListValidateBeforeCall(String ownerUsername, EMAddUserToBlockList emAddUserToBlockList, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ownerUsername' is set
        if (ownerUsername == null) {
            throw new ApiException("Missing the required parameter 'ownerUsername' when calling addUserToBlockList(Async)");
        }

        return addUserToBlockListCall(ownerUsername, emAddUserToBlockList, _callback);

    }

    /**
     * 添加用户至黑名单
     * 将一个或多个用户添加用户到黑名单。用户被加入黑名单后，无法向你发送消息，也无法发送好友申请。用户可以将任何其他用户添加到黑名单列表，无论该用户是否是好友。好友被加入黑名单后仍在好友列表上显示。每个用户的黑名单人数上限为 500。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E9%BB%91%E5%90%8D%E5%8D%95
     * @param ownerUsername  (required)
     * @param emAddUserToBlockList  (optional)
     * @return EMAddUserToBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMAddUserToBlockListResult addUserToBlockList(String ownerUsername, EMAddUserToBlockList emAddUserToBlockList) throws ApiException {
        ApiResponse<EMAddUserToBlockListResult> localVarResp = addUserToBlockListWithHttpInfo(ownerUsername, emAddUserToBlockList);
        return localVarResp.getData();
    }

    /**
     * 添加用户至黑名单
     * 将一个或多个用户添加用户到黑名单。用户被加入黑名单后，无法向你发送消息，也无法发送好友申请。用户可以将任何其他用户添加到黑名单列表，无论该用户是否是好友。好友被加入黑名单后仍在好友列表上显示。每个用户的黑名单人数上限为 500。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E9%BB%91%E5%90%8D%E5%8D%95
     * @param ownerUsername  (required)
     * @param emAddUserToBlockList  (optional)
     * @return ApiResponse&lt;EMAddUserToBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMAddUserToBlockListResult> addUserToBlockListWithHttpInfo(String ownerUsername, EMAddUserToBlockList emAddUserToBlockList) throws ApiException {
        okhttp3.Call localVarCall = addUserToBlockListValidateBeforeCall(ownerUsername, emAddUserToBlockList, null);
        Type localVarReturnType = new TypeToken<EMAddUserToBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 添加用户至黑名单 (asynchronously)
     * 将一个或多个用户添加用户到黑名单。用户被加入黑名单后，无法向你发送消息，也无法发送好友申请。用户可以将任何其他用户添加到黑名单列表，无论该用户是否是好友。好友被加入黑名单后仍在好友列表上显示。每个用户的黑名单人数上限为 500。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E9%BB%91%E5%90%8D%E5%8D%95
     * @param ownerUsername  (required)
     * @param emAddUserToBlockList  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addUserToBlockListAsync(String ownerUsername, EMAddUserToBlockList emAddUserToBlockList, final ApiCallback<EMAddUserToBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = addUserToBlockListValidateBeforeCall(ownerUsername, emAddUserToBlockList, _callback);
        Type localVarReturnType = new TypeToken<EMAddUserToBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getBlockList
     * @param ownerUsername  (required)
     * @param pageSize 每次期望返回的黑名单用户的数量。取值范围为 [1,50]。该参数仅在分页获取时为必需 (optional)
     * @param cursor 数据查询的起始位置。该参数仅在分页获取时为必需 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getBlockListCall(String ownerUsername, Integer pageSize, String cursor, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/users/{owner_username}/blocks/users"
            .replace("{" + "owner_username" + "}", localVarApiClient.escapeString(ownerUsername.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getBlockListValidateBeforeCall(String ownerUsername, Integer pageSize, String cursor, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ownerUsername' is set
        if (ownerUsername == null) {
            throw new ApiException("Missing the required parameter 'ownerUsername' when calling getBlockList(Async)");
        }

        return getBlockListCall(ownerUsername, pageSize, cursor, _callback);

    }

    /**
     * 获取黑名单列表
     * 获取指定用户的好友列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E8%8E%B7%E5%8F%96%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8
     * @param ownerUsername  (required)
     * @param pageSize 每次期望返回的黑名单用户的数量。取值范围为 [1,50]。该参数仅在分页获取时为必需 (optional)
     * @param cursor 数据查询的起始位置。该参数仅在分页获取时为必需 (optional)
     * @return EMGetBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetBlockListResult getBlockList(String ownerUsername, Integer pageSize, String cursor) throws ApiException {
        ApiResponse<EMGetBlockListResult> localVarResp = getBlockListWithHttpInfo(ownerUsername, pageSize, cursor);
        return localVarResp.getData();
    }

    /**
     * 获取黑名单列表
     * 获取指定用户的好友列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E8%8E%B7%E5%8F%96%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8
     * @param ownerUsername  (required)
     * @param pageSize 每次期望返回的黑名单用户的数量。取值范围为 [1,50]。该参数仅在分页获取时为必需 (optional)
     * @param cursor 数据查询的起始位置。该参数仅在分页获取时为必需 (optional)
     * @return ApiResponse&lt;EMGetBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetBlockListResult> getBlockListWithHttpInfo(String ownerUsername, Integer pageSize, String cursor) throws ApiException {
        okhttp3.Call localVarCall = getBlockListValidateBeforeCall(ownerUsername, pageSize, cursor, null);
        Type localVarReturnType = new TypeToken<EMGetBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取黑名单列表 (asynchronously)
     * 获取指定用户的好友列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E8%8E%B7%E5%8F%96%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8
     * @param ownerUsername  (required)
     * @param pageSize 每次期望返回的黑名单用户的数量。取值范围为 [1,50]。该参数仅在分页获取时为必需 (optional)
     * @param cursor 数据查询的起始位置。该参数仅在分页获取时为必需 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getBlockListAsync(String ownerUsername, Integer pageSize, String cursor, final ApiCallback<EMGetBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getBlockListValidateBeforeCall(ownerUsername, pageSize, cursor, _callback);
        Type localVarReturnType = new TypeToken<EMGetBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeUserFromBlockList
     * @param ownerUsername  (required)
     * @param blockedUsername  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromBlockListCall(String ownerUsername, String blockedUsername, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/users/{owner_username}/blocks/users/{blocked_username}"
            .replace("{" + "owner_username" + "}", localVarApiClient.escapeString(ownerUsername.toString()))
            .replace("{" + "blocked_username" + "}", localVarApiClient.escapeString(blockedUsername.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeUserFromBlockListValidateBeforeCall(String ownerUsername, String blockedUsername, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ownerUsername' is set
        if (ownerUsername == null) {
            throw new ApiException("Missing the required parameter 'ownerUsername' when calling removeUserFromBlockList(Async)");
        }

        // verify the required parameter 'blockedUsername' is set
        if (blockedUsername == null) {
            throw new ApiException("Missing the required parameter 'blockedUsername' when calling removeUserFromBlockList(Async)");
        }

        return removeUserFromBlockListCall(ownerUsername, blockedUsername, _callback);

    }

    /**
     * 从黑名单中移除用户
     * 从用户的黑名单中移除用户： 将好友从黑名单中移除后，恢复好友关系，可以正常收发消息； 将非好友从黑名单中移除后，恢复到未添加好友的状态。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E4%BB%8E%E9%BB%91%E5%90%8D%E5%8D%95%E4%B8%AD%E7%A7%BB%E9%99%A4%E7%94%A8%E6%88%B7
     * @param ownerUsername  (required)
     * @param blockedUsername  (required)
     * @return EMRemoveUserFromBlockListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMRemoveUserFromBlockListResult removeUserFromBlockList(String ownerUsername, String blockedUsername) throws ApiException {
        ApiResponse<EMRemoveUserFromBlockListResult> localVarResp = removeUserFromBlockListWithHttpInfo(ownerUsername, blockedUsername);
        return localVarResp.getData();
    }

    /**
     * 从黑名单中移除用户
     * 从用户的黑名单中移除用户： 将好友从黑名单中移除后，恢复好友关系，可以正常收发消息； 将非好友从黑名单中移除后，恢复到未添加好友的状态。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E4%BB%8E%E9%BB%91%E5%90%8D%E5%8D%95%E4%B8%AD%E7%A7%BB%E9%99%A4%E7%94%A8%E6%88%B7
     * @param ownerUsername  (required)
     * @param blockedUsername  (required)
     * @return ApiResponse&lt;EMRemoveUserFromBlockListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMRemoveUserFromBlockListResult> removeUserFromBlockListWithHttpInfo(String ownerUsername, String blockedUsername) throws ApiException {
        okhttp3.Call localVarCall = removeUserFromBlockListValidateBeforeCall(ownerUsername, blockedUsername, null);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromBlockListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 从黑名单中移除用户 (asynchronously)
     * 从用户的黑名单中移除用户： 将好友从黑名单中移除后，恢复好友关系，可以正常收发消息； 将非好友从黑名单中移除后，恢复到未添加好友的状态。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E4%BB%8E%E9%BB%91%E5%90%8D%E5%8D%95%E4%B8%AD%E7%A7%BB%E9%99%A4%E7%94%A8%E6%88%B7
     * @param ownerUsername  (required)
     * @param blockedUsername  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeUserFromBlockListAsync(String ownerUsername, String blockedUsername, final ApiCallback<EMRemoveUserFromBlockListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeUserFromBlockListValidateBeforeCall(ownerUsername, blockedUsername, _callback);
        Type localVarReturnType = new TypeToken<EMRemoveUserFromBlockListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
