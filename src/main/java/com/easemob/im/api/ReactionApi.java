/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;
import com.easemob.im.ProgressRequestBody;
import com.easemob.im.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.easemob.im.api.model.EMDeleteReactionResult;
import com.easemob.im.api.model.EMGetReactionDetailResult;
import com.easemob.im.api.model.EMGetReactionResult;
import com.easemob.im.api.model.EMSetReaction;
import com.easemob.im.api.model.EMSetReactionResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReactionApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReactionApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReactionApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for deleteReaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteReactionCall(String username, String msgId, String message, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reaction/user/{username}"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (msgId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("msgId", msgId));
        }

        if (message != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("message", message));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteReactionValidateBeforeCall(String username, String msgId, String message, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling deleteReaction(Async)");
        }

        // verify the required parameter 'msgId' is set
        if (msgId == null) {
            throw new ApiException("Missing the required parameter 'msgId' when calling deleteReaction(Async)");
        }

        // verify the required parameter 'message' is set
        if (message == null) {
            throw new ApiException("Missing the required parameter 'message' when calling deleteReaction(Async)");
        }

        return deleteReactionCall(username, msgId, message, _callback);

    }

    /**
     * 删除 Reaction
     * 删除当前用户追加的 Reaction。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%A0%E9%99%A4-reaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @return EMDeleteReactionResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMDeleteReactionResult deleteReaction(String username, String msgId, String message) throws ApiException {
        ApiResponse<EMDeleteReactionResult> localVarResp = deleteReactionWithHttpInfo(username, msgId, message);
        return localVarResp.getData();
    }

    /**
     * 删除 Reaction
     * 删除当前用户追加的 Reaction。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%A0%E9%99%A4-reaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @return ApiResponse&lt;EMDeleteReactionResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMDeleteReactionResult> deleteReactionWithHttpInfo(String username, String msgId, String message) throws ApiException {
        okhttp3.Call localVarCall = deleteReactionValidateBeforeCall(username, msgId, message, null);
        Type localVarReturnType = new TypeToken<EMDeleteReactionResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除 Reaction (asynchronously)
     * 删除当前用户追加的 Reaction。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%A0%E9%99%A4-reaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteReactionAsync(String username, String msgId, String message, final ApiCallback<EMDeleteReactionResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteReactionValidateBeforeCall(username, msgId, message, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteReactionResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getReaction
     * @param username  (required)
     * @param msgIdList 需要查询的消息 ID 列表，最多可传 20 个消息 ID (required)
     * @param msgType 消息的会话类型： - chat：单聊； - groupchat：群聊 (required)
     * @param groupId 群组 ID。如果 msgType 设置为 groupchat，即拉取群中的 Reaction，必须指定群组 ID (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getReactionCall(String username, List<String> msgIdList, String msgType, String groupId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reaction/user/{username}"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (msgIdList != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "msgIdList", msgIdList));
        }

        if (msgType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("msgType", msgType));
        }

        if (groupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("groupId", groupId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getReactionValidateBeforeCall(String username, List<String> msgIdList, String msgType, String groupId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getReaction(Async)");
        }

        // verify the required parameter 'msgIdList' is set
        if (msgIdList == null) {
            throw new ApiException("Missing the required parameter 'msgIdList' when calling getReaction(Async)");
        }

        // verify the required parameter 'msgType' is set
        if (msgType == null) {
            throw new ApiException("Missing the required parameter 'msgType' when calling getReaction(Async)");
        }

        return getReactionCall(username, msgIdList, msgType, groupId, _callback);

    }

    /**
     * 根据消息 ID 获取 Reaction
     * 该方法根据单聊或群聊中的消息 ID 获取单个或多个消息的 Reaction 信息，包括 Reaction ID、使用的表情 ID、以及使用该 Reaction 的用户 ID 及用户人数。获取的 Reaction 的用户列表只展示最早三个添加 Reaction 的用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E6%A0%B9%E6%8D%AE%E6%B6%88%E6%81%AF-id-%E8%8E%B7%E5%8F%96-reaction
     * @param username  (required)
     * @param msgIdList 需要查询的消息 ID 列表，最多可传 20 个消息 ID (required)
     * @param msgType 消息的会话类型： - chat：单聊； - groupchat：群聊 (required)
     * @param groupId 群组 ID。如果 msgType 设置为 groupchat，即拉取群中的 Reaction，必须指定群组 ID (optional)
     * @return EMGetReactionResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetReactionResult getReaction(String username, List<String> msgIdList, String msgType, String groupId) throws ApiException {
        ApiResponse<EMGetReactionResult> localVarResp = getReactionWithHttpInfo(username, msgIdList, msgType, groupId);
        return localVarResp.getData();
    }

    /**
     * 根据消息 ID 获取 Reaction
     * 该方法根据单聊或群聊中的消息 ID 获取单个或多个消息的 Reaction 信息，包括 Reaction ID、使用的表情 ID、以及使用该 Reaction 的用户 ID 及用户人数。获取的 Reaction 的用户列表只展示最早三个添加 Reaction 的用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E6%A0%B9%E6%8D%AE%E6%B6%88%E6%81%AF-id-%E8%8E%B7%E5%8F%96-reaction
     * @param username  (required)
     * @param msgIdList 需要查询的消息 ID 列表，最多可传 20 个消息 ID (required)
     * @param msgType 消息的会话类型： - chat：单聊； - groupchat：群聊 (required)
     * @param groupId 群组 ID。如果 msgType 设置为 groupchat，即拉取群中的 Reaction，必须指定群组 ID (optional)
     * @return ApiResponse&lt;EMGetReactionResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetReactionResult> getReactionWithHttpInfo(String username, List<String> msgIdList, String msgType, String groupId) throws ApiException {
        okhttp3.Call localVarCall = getReactionValidateBeforeCall(username, msgIdList, msgType, groupId, null);
        Type localVarReturnType = new TypeToken<EMGetReactionResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据消息 ID 获取 Reaction (asynchronously)
     * 该方法根据单聊或群聊中的消息 ID 获取单个或多个消息的 Reaction 信息，包括 Reaction ID、使用的表情 ID、以及使用该 Reaction 的用户 ID 及用户人数。获取的 Reaction 的用户列表只展示最早三个添加 Reaction 的用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E6%A0%B9%E6%8D%AE%E6%B6%88%E6%81%AF-id-%E8%8E%B7%E5%8F%96-reaction
     * @param username  (required)
     * @param msgIdList 需要查询的消息 ID 列表，最多可传 20 个消息 ID (required)
     * @param msgType 消息的会话类型： - chat：单聊； - groupchat：群聊 (required)
     * @param groupId 群组 ID。如果 msgType 设置为 groupchat，即拉取群中的 Reaction，必须指定群组 ID (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getReactionAsync(String username, List<String> msgIdList, String msgType, String groupId, final ApiCallback<EMGetReactionResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getReactionValidateBeforeCall(username, msgIdList, msgType, groupId, _callback);
        Type localVarReturnType = new TypeToken<EMGetReactionResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getReactionDetail
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @param limit 每页显示添加 Reaction 的用户数量。取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 查询游标，指定数据查询的起始位置，分页获取时使用 (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getReactionDetailCall(String username, String msgId, String message, Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reaction/user/{username}/detail"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (msgId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("msgId", msgId));
        }

        if (message != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("message", message));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getReactionDetailValidateBeforeCall(String username, String msgId, String message, Integer limit, String cursor, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getReactionDetail(Async)");
        }

        // verify the required parameter 'msgId' is set
        if (msgId == null) {
            throw new ApiException("Missing the required parameter 'msgId' when calling getReactionDetail(Async)");
        }

        // verify the required parameter 'message' is set
        if (message == null) {
            throw new ApiException("Missing the required parameter 'message' when calling getReactionDetail(Async)");
        }

        return getReactionDetailCall(username, msgId, message, limit, cursor, _callback);

    }

    /**
     * 根据消息 ID 和表情 ID 获取 Reaction 信息
     * 在单聊或群聊场景中对单条消息创建或追加 Reaction。创建 Reaction 指对消息添加第一条 Reaction，后续的 Reaction 添加称为追加。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%9B%E5%BB%BA-%E8%BF%BD%E5%8A%A0-reaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @param limit 每页显示添加 Reaction 的用户数量。取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 查询游标，指定数据查询的起始位置，分页获取时使用 (optional)
     * @return EMGetReactionDetailResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMGetReactionDetailResult getReactionDetail(String username, String msgId, String message, Integer limit, String cursor) throws ApiException {
        ApiResponse<EMGetReactionDetailResult> localVarResp = getReactionDetailWithHttpInfo(username, msgId, message, limit, cursor);
        return localVarResp.getData();
    }

    /**
     * 根据消息 ID 和表情 ID 获取 Reaction 信息
     * 在单聊或群聊场景中对单条消息创建或追加 Reaction。创建 Reaction 指对消息添加第一条 Reaction，后续的 Reaction 添加称为追加。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%9B%E5%BB%BA-%E8%BF%BD%E5%8A%A0-reaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @param limit 每页显示添加 Reaction 的用户数量。取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 查询游标，指定数据查询的起始位置，分页获取时使用 (optional)
     * @return ApiResponse&lt;EMGetReactionDetailResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMGetReactionDetailResult> getReactionDetailWithHttpInfo(String username, String msgId, String message, Integer limit, String cursor) throws ApiException {
        okhttp3.Call localVarCall = getReactionDetailValidateBeforeCall(username, msgId, message, limit, cursor, null);
        Type localVarReturnType = new TypeToken<EMGetReactionDetailResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据消息 ID 和表情 ID 获取 Reaction 信息 (asynchronously)
     * 在单聊或群聊场景中对单条消息创建或追加 Reaction。创建 Reaction 指对消息添加第一条 Reaction，后续的 Reaction 添加称为追加。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%9B%E5%BB%BA-%E8%BF%BD%E5%8A%A0-reaction
     * @param username  (required)
     * @param msgId 消息 ID (required)
     * @param message 表情 ID。长度不可超过 128 个字符。该参数的值必须与客户端一致 (required)
     * @param limit 每页显示添加 Reaction 的用户数量。取值范围为 [1,50]，默认值为 50 (optional)
     * @param cursor 查询游标，指定数据查询的起始位置，分页获取时使用 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getReactionDetailAsync(String username, String msgId, String message, Integer limit, String cursor, final ApiCallback<EMGetReactionDetailResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getReactionDetailValidateBeforeCall(username, msgId, message, limit, cursor, _callback);
        Type localVarReturnType = new TypeToken<EMGetReactionDetailResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for setReaction
     * @param username  (required)
     * @param emSetReaction  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call setReactionCall(String username, EMSetReaction emSetReaction, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emSetReaction;

        // create path and map variables
        String localVarPath = "/reaction/user/{username}"
            .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call setReactionValidateBeforeCall(String username, EMSetReaction emSetReaction, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling setReaction(Async)");
        }

        return setReactionCall(username, emSetReaction, _callback);

    }

    /**
     * 创建/追加 Reaction
     * 在单聊或群聊场景中对单条消息创建或追加 Reaction。创建 Reaction 指对消息添加第一条 Reaction，后续的 Reaction 添加称为追加。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%9B%E5%BB%BA-%E8%BF%BD%E5%8A%A0-reaction
     * @param username  (required)
     * @param emSetReaction  (optional)
     * @return EMSetReactionResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public EMSetReactionResult setReaction(String username, EMSetReaction emSetReaction) throws ApiException {
        ApiResponse<EMSetReactionResult> localVarResp = setReactionWithHttpInfo(username, emSetReaction);
        return localVarResp.getData();
    }

    /**
     * 创建/追加 Reaction
     * 在单聊或群聊场景中对单条消息创建或追加 Reaction。创建 Reaction 指对消息添加第一条 Reaction，后续的 Reaction 添加称为追加。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%9B%E5%BB%BA-%E8%BF%BD%E5%8A%A0-reaction
     * @param username  (required)
     * @param emSetReaction  (optional)
     * @return ApiResponse&lt;EMSetReactionResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EMSetReactionResult> setReactionWithHttpInfo(String username, EMSetReaction emSetReaction) throws ApiException {
        okhttp3.Call localVarCall = setReactionValidateBeforeCall(username, emSetReaction, null);
        Type localVarReturnType = new TypeToken<EMSetReactionResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 创建/追加 Reaction (asynchronously)
     * 在单聊或群聊场景中对单条消息创建或追加 Reaction。创建 Reaction 指对消息添加第一条 Reaction，后续的 Reaction 添加称为追加。文档介绍：https://docs-im-beta.easemob.com/document/server-side/reaction.html#%E5%88%9B%E5%BB%BA-%E8%BF%BD%E5%8A%A0-reaction
     * @param username  (required)
     * @param emSetReaction  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 4xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
        <tr><td> 5xx </td><td> 错误码：https://docs-im-beta.easemob.com/document/server-side/error.html </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call setReactionAsync(String username, EMSetReaction emSetReaction, final ApiCallback<EMSetReactionResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = setReactionValidateBeforeCall(username, emSetReaction, _callback);
        Type localVarReturnType = new TypeToken<EMSetReactionResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
