/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiException;
import com.easemob.im.api.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;

/**
 * API tests for PushApi
 */
@Disabled
public class PushApiTest extends AbstractTest {

    private final PushApi api = new PushApi();

    private final UserApi userApi = new UserApi();

    /**
     * 创建离线推送模板
     *
     * 创建离线推送消息模板，包括默认模板 default 和自定模板。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E5%88%9B%E5%BB%BA%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81%E6%A8%A1%E6%9D%BF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOfflinePushTemplateTest() throws ApiException {
        String name = "test";
        String title = "标题 {0}";
        String content = "内容 {0}";

        EMCreateOfflinePushTemplate emCreateOfflinePushTemplate = new EMCreateOfflinePushTemplate();
        emCreateOfflinePushTemplate.setName(name);
        emCreateOfflinePushTemplate.setTitlePattern(title);
        emCreateOfflinePushTemplate.setContentPattern(content);

        EMCreateOfflinePushTemplateResult createOfflinePushTemplateResult = assertDoesNotThrow(() -> api.createOfflinePushTemplate(emCreateOfflinePushTemplate));
        assertNotNull(createOfflinePushTemplateResult);
        assertNotNull(createOfflinePushTemplateResult.getData());
        assertEquals(name, createOfflinePushTemplateResult.getData().getName());
        assertEquals(title, createOfflinePushTemplateResult.getData().getTitlePattern());
        assertEquals(content, createOfflinePushTemplateResult.getData().getContentPattern());

        assertDoesNotThrow(() -> api.deleteOfflinePushTemplate(name));
    }

    /**
     * 删除离线推送模板
     *
     * 删除离线消息推送模板。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E5%88%A0%E9%99%A4%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81%E6%A8%A1%E6%9D%BF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOfflinePushTemplateTest() throws ApiException {
        String name = "test1";
        String title = "标题 {0}";
        String content = "内容 {0}";

        EMCreateOfflinePushTemplate emCreateOfflinePushTemplate = new EMCreateOfflinePushTemplate();
        emCreateOfflinePushTemplate.setName(name);
        emCreateOfflinePushTemplate.setTitlePattern(title);
        emCreateOfflinePushTemplate.setContentPattern(content);

        EMCreateOfflinePushTemplateResult createOfflinePushTemplateResult = assertDoesNotThrow(() -> api.createOfflinePushTemplate(emCreateOfflinePushTemplate));
        assertNotNull(createOfflinePushTemplateResult);
        assertNotNull(createOfflinePushTemplateResult.getData());
        assertEquals(name, createOfflinePushTemplateResult.getData().getName());
        assertEquals(title, createOfflinePushTemplateResult.getData().getTitlePattern());
        assertEquals(content, createOfflinePushTemplateResult.getData().getContentPattern());

        EMDeleteOfflinePushTemplateResult deleteOfflinePushTemplateResult = assertDoesNotThrow(() -> api.deleteOfflinePushTemplate(name));
        assertNotNull(deleteOfflinePushTemplateResult);
        assertNotNull(deleteOfflinePushTemplateResult.getData());
        assertEquals(name, deleteOfflinePushTemplateResult.getData().getName());
        assertEquals(title, deleteOfflinePushTemplateResult.getData().getTitlePattern());
        assertEquals(content, deleteOfflinePushTemplateResult.getData().getContentPattern());
    }

    /**
     * 查询离线推送设置
     *
     * 查询指定单聊、指定群聊或全局的离线推送设置。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E6%9F%A5%E8%AF%A2%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81%E8%AE%BE%E7%BD%AE
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOfflinePushTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        String chattype = "user";
        String key = username2;
        String type = "ALL";
        String ignoreInterval = "21:30-08:00";
        BigDecimal ignoreDuration = new BigDecimal(86400);
        EMSetOfflinePushNew emSetOfflinePushNew = new EMSetOfflinePushNew();
        emSetOfflinePushNew.setType(type);
        emSetOfflinePushNew.setIgnoreInterval(ignoreInterval);
        emSetOfflinePushNew.setIgnoreDuration(ignoreDuration);

        EMSetOfflinePushNewResult setOfflinePushNewResult = assertDoesNotThrow(() -> api.setOfflinePushNew(username1, chattype, key, emSetOfflinePushNew));
        assertNotNull(setOfflinePushNewResult);
        assertNotNull(setOfflinePushNewResult.getData());
        assertEquals(type, setOfflinePushNewResult.getData().getType());
        assertEquals(ignoreInterval, setOfflinePushNewResult.getData().getIgnoreInterval());

        EMGetOfflinePushResult getOfflinePushResult = assertDoesNotThrow(() -> api.getOfflinePush(username1, chattype, key));
        assertNotNull(getOfflinePushResult);
        assertNotNull(getOfflinePushResult.getData());
        assertEquals(type, getOfflinePushResult.getData().getType());
        assertEquals(ignoreInterval, getOfflinePushResult.getData().getIgnoreInterval());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

    /**
     * 查询离线推送模板
     *
     * 查询离线推送消息使用的模板。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E6%9F%A5%E8%AF%A2%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81%E6%A8%A1%E6%9D%BF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOfflinePushTemplateTest() throws ApiException {
        String name = "test";
        String title = "标题 {0}";
        String content = "内容 {0}";

        EMCreateOfflinePushTemplate emCreateOfflinePushTemplate = new EMCreateOfflinePushTemplate();
        emCreateOfflinePushTemplate.setName(name);
        emCreateOfflinePushTemplate.setTitlePattern(title);
        emCreateOfflinePushTemplate.setContentPattern(content);

        assertDoesNotThrow(() -> api.createOfflinePushTemplate(emCreateOfflinePushTemplate));

        EMGetOfflinePushTemplateResult getOfflinePushTemplateResult = assertDoesNotThrow(() -> api.getOfflinePushTemplate(name));
        assertNotNull(getOfflinePushTemplateResult);
        assertNotNull(getOfflinePushTemplateResult.getData());
        assertEquals(name, getOfflinePushTemplateResult.getData().getName());
        assertEquals(title, getOfflinePushTemplateResult.getData().getTitlePattern());
        assertEquals(content, getOfflinePushTemplateResult.getData().getContentPattern());

        assertDoesNotThrow(() -> api.deleteOfflinePushTemplate(name));
    }

    /**
     * 查询推送绑定信息
     *
     * 查询当前用户的所有设备的推送绑定信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E6%9F%A5%E8%AF%A2%E6%8E%A8%E9%80%81%E7%BB%91%E5%AE%9A%E4%BF%A1%E6%81%AF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPushBindingInfoTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        String notifierName = "104410638";
        String deviceId = "8ce08cad-9369-4bdd-86c8-695a0d247cda";
        String deviceToken = "BAEAAAAAB.jkuDmf8hRUPDgOel-zX9exVlcjS1akCWQIUA3cBbB_DprnHMeFR11PV1of1sVNKPmKdKhMB22YuO8-Z_Ksoqxo8Y";

        EMSetPushBindingInfo emSetPushBindingInfo = new EMSetPushBindingInfo();
        emSetPushBindingInfo.setNotifierName(notifierName);
        emSetPushBindingInfo.setDeviceId(deviceId);
        emSetPushBindingInfo.setDeviceToken(deviceToken);

        assertDoesNotThrow(() -> api.setPushBindingInfo(username, emSetPushBindingInfo));

        EMGetPushBindingInfoResult result = assertDoesNotThrow(() -> api.getPushBindingInfo(username));
        assertNotNull(result);
        assertNotNull(result.getEntities());
        assertEquals(notifierName, result.getEntities().get(0).getNotifierName());
        assertEquals(deviceId, result.getEntities().get(0).getDeviceId());
        assertEquals(deviceToken, result.getEntities().get(0).getDeviceToken());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 获取推送通知的首选语言
     *
     * 获取推送通知的首选语言。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E8%8E%B7%E5%8F%96%E6%8E%A8%E9%80%81%E9%80%9A%E7%9F%A5%E7%9A%84%E9%A6%96%E9%80%89%E8%AF%AD%E8%A8%80
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPushPreferredLanguageTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMSetPushPreferredLanguage setPushPreferredLanguage = new EMSetPushPreferredLanguage();
        setPushPreferredLanguage.setTranslationLanguage("EU");
        assertDoesNotThrow(() -> api.setPushPreferredLanguage(username, setPushPreferredLanguage));

        EMGetPushPreferredLanguageResult getPushPreferredLanguageResult = assertDoesNotThrow(() -> api.getPushPreferredLanguage(username));
        assertNotNull(getPushPreferredLanguageResult);
        assertNotNull(getPushPreferredLanguageResult.getData());
        assertEquals("EU", getPushPreferredLanguageResult.getData().getLanguage());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 接收方配置模板名称
     *
     * 接收方可以调用该 API 设置推送模板。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E6%8E%A5%E6%94%B6%E6%96%B9%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF%E5%90%8D%E7%A7%B0
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void receiverConfigurationTemplateNameTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMReceiverConfigurationTemplateName emReceiverConfigurationTemplateName = new EMReceiverConfigurationTemplateName();
        emReceiverConfigurationTemplateName.setTemplateName("receive_template_name");

        EMReceiverConfigurationTemplateNameResult result = assertDoesNotThrow(() -> api.receiverConfigurationTemplateName(username, emReceiverConfigurationTemplateName));
        assertNotNull(result);
        assertNotNull(result.getData());
        assertEquals("receive_template_name", result.getData().getTemplateName());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 设置离线推送（新）
     *
     * 你可以设置全局离线推送的通知方式和免打扰模式以及单个单聊或群聊会话的离线推送设置。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E8%AE%BE%E7%BD%AE%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setOfflinePushNewTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        String chattype = "user";
        String key = username2;
        String type = "ALL";
        String ignoreInterval = "21:30-08:00";
        BigDecimal ignoreDuration = new BigDecimal(86400);
        EMSetOfflinePushNew emSetOfflinePushNew = new EMSetOfflinePushNew();
        emSetOfflinePushNew.setType(type);
        emSetOfflinePushNew.setIgnoreInterval(ignoreInterval);
        emSetOfflinePushNew.setIgnoreDuration(ignoreDuration);

        EMSetOfflinePushNewResult response = assertDoesNotThrow(() -> api.setOfflinePushNew(username1, chattype, key, emSetOfflinePushNew));
        assertNotNull(response);
        assertNotNull(response.getData());
        assertEquals(type, response.getData().getType());
        assertEquals(ignoreInterval, response.getData().getIgnoreInterval());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

    /**
     * 离线推送设置。包括设置离线推送时显示的昵称、设置离线推送通知的展示方式、设置免打扰模式
     *
     * 离线推送设置。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E8%AE%BE%E7%BD%AE%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81%E6%97%B6%E6%98%BE%E7%A4%BA%E7%9A%84%E6%98%B5%E7%A7%B0、https://docs-im-beta.easemob.com/document/server-side/push.html#%E8%AE%BE%E7%BD%AE%E7%A6%BB%E7%BA%BF%E6%8E%A8%E9%80%81%E9%80%9A%E7%9F%A5%E7%9A%84%E5%B1%95%E7%A4%BA%E6%96%B9%E5%BC%8F、https://docs-im-beta.easemob.com/document/server-side/push.html#%E8%AE%BE%E7%BD%AE%E5%85%8D%E6%89%93%E6%89%B0%E6%A8%A1%E5%BC%8F
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setOfflinePushOldTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        // 设置离线推送时显示的昵称
        EMSetOfflinePushOld pushNickname = new EMSetOfflinePushOld();
        pushNickname.setNickname("Tom");
        assertDoesNotThrow(() -> api.setOfflinePushOld(username, pushNickname));

        // 设置离线推送通知的展示方式
        EMSetOfflinePushOld notificationDisplayStyle = new EMSetOfflinePushOld();
        notificationDisplayStyle.setNotificationDisplayStyle(1);
        assertDoesNotThrow(() -> api.setOfflinePushOld(username, notificationDisplayStyle));

        // 设置免打扰模式
        EMSetOfflinePushOld notificationNoDisturbing = new EMSetOfflinePushOld();
        notificationNoDisturbing.setNotificationNoDisturbing(true);
        notificationNoDisturbing.setNotificationNoDisturbingStart("1");
        notificationNoDisturbing.setNotificationNoDisturbingEnd("3");
        assertDoesNotThrow(() -> api.setOfflinePushOld(username, notificationNoDisturbing));

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 绑定和解绑推送信息
     *
     * 推送消息时，设备与推送信息会进行绑定，包括设备 ID、推送证书和 device token。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E7%BB%91%E5%AE%9A%E5%92%8C%E8%A7%A3%E7%BB%91%E6%8E%A8%E9%80%81%E4%BF%A1%E6%81%AF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setPushBindingInfoTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        String notifierName = "104410638";
        String deviceId = "8ce08cad-9369-4bdd-86c8-695a0d247cda";
        String deviceToken = "BAEAAAAAB.jkuDmf8hRUPDgOel-zX9exVlcjS1akCWQIUA3cBbB_DprnHMeFR11PV1of1sVNKPmKdKhMB22YuO8-Z_Ksoqxo8Y";

        EMSetPushBindingInfo emSetPushBindingInfo = new EMSetPushBindingInfo();
        emSetPushBindingInfo.setNotifierName(notifierName);
        emSetPushBindingInfo.setDeviceId(deviceId);
        emSetPushBindingInfo.setDeviceToken(deviceToken);

        EMSetPushBindingInfoResult result = assertDoesNotThrow(() -> api.setPushBindingInfo(username, emSetPushBindingInfo));
        assertNotNull(result);
        assertNotNull(result.getEntities());
        assertNotNull(result.getEntities().get(0).getNotifierName());
        assertEquals(notifierName, result.getEntities().get(0).getNotifierName());
        assertEquals(deviceId, result.getEntities().get(0).getDeviceId());
        assertEquals(deviceToken, result.getEntities().get(0).getDeviceToken());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 设置推送通知的首选语言
     *
     * 设置离线推送消息的首选语言。文档介绍：https://docs-im-beta.easemob.com/document/server-side/push.html#%E8%AE%BE%E7%BD%AE%E6%8E%A8%E9%80%81%E9%80%9A%E7%9F%A5%E7%9A%84%E9%A6%96%E9%80%89%E8%AF%AD%E8%A8%80
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setPushPreferredLanguageTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMSetPushPreferredLanguage setPushPreferredLanguage = new EMSetPushPreferredLanguage();
        setPushPreferredLanguage.setTranslationLanguage("EU");
        EMSetPushPreferredLanguageResult setPushPreferredLanguageResult = assertDoesNotThrow(() -> api.setPushPreferredLanguage(username, setPushPreferredLanguage));
        assertNotNull(setPushPreferredLanguageResult);
        assertNotNull(setPushPreferredLanguageResult.getData());
        assertEquals("EU", setPushPreferredLanguageResult.getData().getLanguage());

        EMGetPushPreferredLanguageResult getPushPreferredLanguageResult = assertDoesNotThrow(() -> api.getPushPreferredLanguage(username));
        assertNotNull(getPushPreferredLanguageResult);
        assertNotNull(getPushPreferredLanguageResult.getData());
        assertEquals("EU", getPushPreferredLanguageResult.getData().getLanguage());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

}
